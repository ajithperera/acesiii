
#  Copyright (c) 2003-2010 University of Florida
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  The GNU General Public License is included in this distribution
#  in the file COPYRIGHT.
                    SIAL CCSD_resp_2D

#--------------------------------------------------------------- 

# Declare indices 
      Index NPERT = 1, 3
#bgn_debug
#      Index NPERT = 3, 3
#end_debug
      INDEX XYZ = 1, 3
      INDEX XYZ1 = 1, 3

      aoindex mu     = 1, norb
      aoindex nu     = 1, norb
      aoindex lambda = 1, norb
      aoindex sigma  = 1, norb
      

      moaindex i = baocc, eaocc
      moaindex i1= baocc, eaocc
      moaindex i2= baocc, eaocc
      moaindex i3= baocc, eaocc

      moaindex a = bavirt, eavirt
      moaindex a1= bavirt, eavirt
      moaindex a2= bavirt, eavirt
      moaindex a3= bavirt, eavirt

      mobindex j = bbocc, ebocc
      mobindex j1= bbocc, ebocc
      mobindex j2= bbocc, ebocc
      mobindex j3= bbocc, ebocc

      mobindex b = bbvirt, ebvirt
      mobindex b1= bbvirt, ebvirt
      mobindex b2= bbvirt, ebvirt
      mobindex b3= bbvirt, ebvirt
      moaindex p = baocc, eavirt
      moaindex p1= baocc, eavirt
      moaindex p2= baocc, eavirt
      moaindex p3= baocc, eavirt

      mobindex q = bbocc, ebvirt
      mobindex q1= bbocc, ebvirt
      mobindex q2= bbocc, ebvirt
      mobindex q3= bbocc, ebvirt
 
      temp dx1(mu,nu,lambda,sigma) 
      temp dy1(mu,nu,lambda,sigma) 
      temp dz1(mu,nu,lambda,sigma) 
      temp dx2(mu,nu,lambda,sigma) 
      temp dy2(mu,nu,lambda,sigma) 
      temp dz2(mu,nu,lambda,sigma) 
      temp dx3(mu,nu,lambda,sigma) 
      temp dy3(mu,nu,lambda,sigma) 
      temp dz3(mu,nu,lambda,sigma) 
      temp dx4(mu,nu,lambda,sigma) 
      temp dy4(mu,nu,lambda,sigma) 
      temp dz4(mu,nu,lambda,sigma) 
      temp  T1ixjx(i,nu,j1,sigma)
# Declare served arrays

      served T2old_aa(a,i,a1,i1)
      served T2old_bb(b,j,b1,j1)
      served T2old_ab(a,i,b,j)
      served L2old_aa(i,a,i1,a1)
      served L2old_bb(j,b,j1,b1)
      served L2old_ab(i,a,j,b)
      served Dijab_aa(i,i1,a,a1)
      served Dijab_ab(i,j,a,b)
      served Dijab_bb(j,j1,b,b1)
      served Dijkl_aa(i2,i,i3,i1)
      served Vijmn_aaaa(i,i2,i1,i3)
      served Vijmn_aaaa_x(i,i2,i1,i3)  #PV
      served Dijkl_bb(j,j2,j1,j3)
      served Vijmn_bbbb(j,j2,j1,j3)
      served Vijmn_bbbb_x(j,j2,j1,j3)
      served Dijkl_ab(i,j,i1,j1)
      served Vijmn_abab(i,j,i1,j1)
      served Vijmn_abab_x(i,j,i1,j1)    #PV

      served Dijab_aa_x(i,i1,a,a1)
      served Dijab_ab_x(i,j,a,b)
      served Dijab_bb_x(j,j1,b,b1)

      served Dabij_aa_x(a,a1,i,i1)
      served Dabij_ab_x(a,b,i,j)
      served Dabij_bb_x(b,b1,j,j1)

      served Dijkl_bb_x(j,j2,j1,j3)
      served DAHijkl_bb_x(j,j2,j1,j3)
      served Dijkl_ab_x(i,j,i1,j1)
      served DAHijkl_ab_x(i,j,i1,j1)
      served Dijkl_aa_x(i2,i,i3,i1)
      served DAHijkl_aa_x(i2,i,i3,i1)

      served Vibja_aaaa(i,a,i1,a1)
      served Dibja_aaaa(i,a,i1,a1)
      served Vibja_abab(i,b,i1,b1)
      served Dibja_abab(i,b,i1,b1)
      served Vibja_baba(j,a,j1,a1)
      served Dibja_baba(j,a,j1,a1)
      served Vibja_bbbb(j,b,j1,b1)
      served Dibja_bbbb(j,b,j1,b1)
      served Dibja_baab(j,a,i,b)
      served Vibja_baab(j,a,i,b)
      served Dibja_abba(i,b,j,a)
      served Vibja_abba(i,b,j,a) 

      served Dabci_aaaa(a,a2,a1,i)
      served Dabci_abab(a,b,a1,j)
      served Dabci_baba(b,a,b1,i)
      served Dabci_bbbb(b,b2,b1,j)

      served Dijka_aaaa(i,i2,i1,a)
      served Dijka_abab(i,j,i1,b)
      served Dijka_baba(j,i,j1,a)
      served Dijka_bbbb(j,j2,j1,b)

      served Dxaai(mu,a,a1,i) 
      served Dxxai(mu,nu,a1,i) 
      served Dxxxi(mu,nu,sigma,i) 
      served Dxbbj(mu,b,b1,j) 
      served Dxxbj(mu,nu,b1,j) 
      served Dxxxj(mu,nu,sigma,j) 
#PV 
      served VSpipi(p1,i,p,i1)
      served Viaai(i,a1,a,i1)
      served Vaaii(a,a1,i,i1)
      served VSaaai(a2,a,a1,i)
      served VSqjqj(q1,j,q,j1)
      served Vjbbj(j,b1,b,j1)
      served Vbbjj(b,b1,j,j1)
      served VSbbbj(b2,b,b1,j)
      served Vjbii(j,b,i,i1)
      served Vbbai(b,b1,a,i)
      served Vbbii(b,b1,i,i1)
      served Vpiqj(p,i,q,j)
      served Vaajj(a,a1,j,j1)
      served Viabj(i,a,b,j)
      served Vaabj(a,a1,b,j)

      served Vibja_aaaa_x(i,a,i1,a1)
      served Dibja_aaaa_x(i,a,i1,a1)
      served DAHibja_aaaa_x(i,a,i1,a1)
      served Vibja_abab_x(i,b,i1,b1)
      served Dibja_abab_x(i,b,i1,b1)
      served DAHibja_abab_x(i,b,i1,b1)
      served Vibja_baba_x(j,a,j1,a1)
      served Dibja_baba_x(j,a,j1,a1)
      served DAHibja_baba_x(j,a,j1,a1)
      served Vibja_bbbb_x(j,b,j1,b1)
      served Dibja_bbbb_x(j,b,j1,b1)
      served DAHibja_bbbb_x(j,b,j1,b1)
      served Dibja_baab_x(j,a,i,b)
      served Vibja_baab_x(j,a,i,b)
      served Dibja_abba_x(i,b,j,a)
      served Vibja_abba_x(i,b,j,a)

      served Dabci_aaaa_x(a,a2,a1,i)
      served Dabci_abab_x(a,b,a1,j)
      served Dabci_baba_x(b,a,b1,i)
      served Dabci_bbbb_x(b,b2,b1,j)

      served Dciab_aaaa_x(a,i,a2,a1)
      served Dciab_abba_x(a,j,b,a1)
      served Dciab_baab_x(b,i,a,b1)
      served Dciab_bbbb_x(b,j,b2,b1)

      served Dijka_aaaa_x(i,i2,i1,a)
      served Dijka_abab_x(i,j,i1,b)
      served Dijka_baba_x(j,i,j1,a)
      served Dijka_bbbb_x(j,j2,j1,b)

      served Dakij_aaaa_x(a,i,i2,i1)
      served Dakij_baba_x(b,i,j,i1)
      served Dakij_abab_x(a,j,i,j1)
      served Dakij_bbbb_x(b,j,j2,j1)

      served Dxaai_x(mu,a,a1,i)
      served Dxxai_x(mu,nu,a1,i)
      served Dxxxi_x(mu,nu,sigma,i)

#      served Dxxxi_aaaa_x(mu,nu,sigma,i)
#      served Dxxxj_bbbb_x(mu,nu,sigma,j)
#      served Dxxxi_baba_x(mu,nu,sigma,i)
#      served Dxxxj_abab_x(mu,nu,sigma,j)
     
#      served Dxxxi_aaaa(mu,nu,sigma,i)
#      served Dxxxj_bbbb(mu,nu,sigma,j)
#      served Dxxxi_baba(mu,nu,sigma,i)
#      served Dxxxj_abab(mu,nu,sigma,j)

      served Dixjx_abba_x(i,nu,j1,sigma)

      served Dxxxx_abab_x(mu,nu,sigma,lambda)
      served Dxxxx_aaaa_x(mu,nu,sigma,lambda)
      served Dxxxx_bbbb_x(mu,nu,sigma,lambda)
      served Dxxxx_baba_x(mu,nu,sigma,lambda)

#      served Djxxx_baba_x(j,nu,sigma,lambda)

#      served Djxjx_baba(j,nu,j1,sigma)
#      served Dixix_abab(i,nu,i1,sigma)
#      served Djxjx_bbbb(j,nu,j1,sigma)
#      served Dixix_aaaa(i,nu,i1,sigma)
#      served Djxxx_baba(j,nu,lambda,sigma)

      served Dxxxx_abab(mu,nu,sigma,lambda)
      served Dxxxx_aaaa(mu,nu,sigma,lambda)
      served Dxxxx_bbbb(mu,nu,sigma,lambda)
      served Dxxxx_baba(mu,nu,sigma,lambda)
      served Dxxxx_baab(mu,nu,sigma,lambda)
      served Dxxxx_abba(mu,nu,sigma,lambda)
      served Dxxxx_baab_x(mu,nu,sigma,lambda)
      served Dxxxx_abba_x(mu,nu,sigma,lambda)

      Served Dxxxx_x(mu,nu,lambda,sigma)

      served Dxbbj_x(mu,b,b1,j)
      served Dxxbj_x(mu,nu,b1,j)
      served Dxxxj_X(mu,nu,sigma,j)
#PV

      served Dxbaj(mu,b,a1,j) 
      served Dxxaj(mu,nu,a1,j) 
      served Dxabi(mu,a,b1,i) 
      served Dxxbi(mu,nu,b1,i) 
      served Dxiii(mu,i,i1,i2) 
      served Dxxii(mu,nu,i1,i2) 
      served Dxjjj(mu,j,j1,j2) 
      served Dxxjj(mu,nu,j1,j2) 
      served Dxjij(mu,j,i1,j2) 
      served Dxxij(mu,nu,i1,j2) 
      served Diaix(i,a,i1,sigma) 
      served Dixix(i,nu,i1,sigma) 
      served Dxiix(nu,i,i1,sigma) 
      served Dixxx(i,nu,lambda,sigma) 
      served Djbjx(j,b,j1,sigma) 
      served Djxjx(j,nu,j1,sigma) 
      served Dxjjx(nu,j,j1,sigma) 
      served Djxxx(j,nu,lambda,sigma) 

      served Dibix(i,b,i1,sigma) 
      served Djajx(j,a,j1,sigma) 
      served Dibjx(i,b,j1,sigma) 
      served Dixjx(i,nu,j1,sigma) 
      served Dixxj(i,nu,sigma,j1) 
      served Djaix(j,a,i1,sigma) 
      served Djxix(j,nu,i1,sigma) 
      served Diiax(i,i1,a,sigma) 
      served Diixx(i,i1,lambda,sigma) 
      served Djjbx(j,j1,b,sigma) 
      served Djjxx(j,j1,lambda,sigma) 
      served Dijax(i,j1,a,sigma) 
      served Dijxx(i,j1,lambda,sigma) 
      served Diiix(i,i1,i2,sigma) 
      served Djjjx(j,j1,j2,sigma) 
      served Dijix(i,j1,i2,sigma) 
      served Djijx(j,i1,j2,sigma) 
      served Djixx(j,i1,lambda,sigma) 


      served Dxbaj_x(mu,b,a1,j)
      served Dxxaj_x(mu,nu,a1,j)
      served Dxabi_x(mu,a,b1,i)
      served Dxxbi_x(mu,nu,b1,i)
      served Dxiii_x(mu,i,i1,i2)
      served Dxxii_x(mu,nu,i1,i2)
      served Dxjjj_x(mu,j,j1,j2)
      served Dxxjj_x(mu,nu,j1,j2)
      served Dxjij_x(mu,j,i1,j2)
      served Dxxij_x(mu,nu,i1,j2)
      served Diaix_x(i,a,i1,sigma)
      served Dixix_x(i,nu,i1,sigma)

      served Dixix_aaaa_x(i,nu,i1,sigma)
      served Djxjx_bbbb_x(j,nu,j1,sigma)
      served Dixix_abab_x(i,nu,i1,sigma)
      served Djxjx_baba_x(j,nu,j1,sigma)
      served Dxiix_aaaa_x(nu,i,i1,sigma)
      served Dxjjx_bbbb_x(nu,j,j1,sigma)

      served Dxiix_x(nu,i,i1,sigma)
      served Dixxx_x(i,nu,lambda,sigma)
      served Djbjx_x(j,b,j1,sigma)
      served Djxjx_x(j,nu,j1,sigma)
      served Dxjjx_x(nu,j,j1,sigma)
      served Djxxx_x(j,nu,lambda,sigma)

      served Dibix_x(i,b,i1,sigma)
      served Djajx_x(j,a,j1,sigma)
      served Dibjx_x(i,b,j1,sigma)
      served Dixjx_x(i,nu,j1,sigma)
      served Dixxj_x(i,nu,sigma,j1)
      served Djaix_x(j,a,i1,sigma)
      served Djxix_x(j,nu,i1,sigma)
      served Diiax_x(i,i1,a,sigma)
      served Diixx_x(i,i1,lambda,sigma)

      served Diixx_aaaa_x(i,i1,lambda,sigma)
      served Djjxx_bbbb_x(j,j1,lambda,sigma)
      served Dijxx_abab_x(i,j1,lambda,sigma)
      served Dijxx_baba_x(i,j1,lambda,sigma)
      served Djxix_baab_x(j,nu,i1,sigma)
      served Dixxj_abba_x(i,nu,sigma,j1)

      served Dixxj_abba(i,nu,sigma,j1)
      served Djxix_baab(j,nu,i1,sigma)
      served Dijxx_abab(i,j1,lambda,sigma)
      served Dijxx_baba(i,j1,lambda,sigma)
      served Diixx_aaaa(i,i1,lambda,sigma)
      served Djjxx_bbbb(j,j1,lambda,sigma)
      served Dxiix_aaaa(nu,i,i1,sigma)
      served Dxjjx_bbbb(nu,j,j1,sigma)

      served Djjbx_x(j,j1,b,sigma)
      served Djjxx_x(j,j1,lambda,sigma)
      served Dijax_x(i,j1,a,sigma)
      served Dijxx_x(i,j1,lambda,sigma)
      served Diiix_x(i,i1,i2,sigma)
      served Djjjx_x(j,j1,j2,sigma)
      served Dijix_x(i,j1,i2,sigma)
      served Djijx_x(j,i1,j2,sigma)
      served Djixx_x(j,i1,lambda,sigma)

      served I3AA(i,a,i1,i2) 
      served I3AB(i,a,j,j1) 
      served I3BA(j,b,i,i1) 
      served I3BB(j,b,j1,j2) 

      served TAO_aa(mu,i,nu,i1)  
      served TAO_ab(mu,i,nu,j)  
      served TAO_bb(mu,j,nu,j1)  
      served LAO_aa(i,mu,i1,nu)  
      served LAO_ab(i,mu,j,nu)  
      served LAO_bb(j,mu,j1,nu)  
      served Tau_aa(a,i,a1,i1)
      served Tau_bb(b,j,b1,j1)
      served Tau_ab(a,i,b,j)
#PV.........................................Start

      served I3AA_x(i,a,i1,i2)
      served I3AB_x(i,a,j,j1)
      served I3BA_x(j,b,i,i1)
      served I3BB_x(j,b,j1,j2)

      served TAO_aa_x(mu,i,nu,i1)
      served TAO_ab_x(mu,i,nu,j)
      served TAO_bb_x(mu,j,nu,j1)
      served LAO_aa_x(i,mu,i1,nu)
      served LAO_ab_x(i,mu,j,nu)
      served LAO_bb_x(j,mu,j1,nu)
      served Tau_aa_x(a,i,a1,i1)
      served Tau_bb_x(b,j,b1,j1)
      served Tau_ab_x(a,i,b,j)

      distributed t1a_old_x(a,i)
      distributed t1b_old_x(b,j)
      distributed l1a_old_x(i,a)
      distributed l1b_old_x(j,b)

      distributed t1a_x(a,i)
      distributed t1b_x(b,j)
      distributed l1a_x(i,a)
      distributed l1b_x(j,b)

      distributed t1a_y(a,i)
      distributed t1b_y(b,j)
      distributed l1a_y(i,a)
      distributed l1b_y(j,b)

      distributed t1a_z(a,i)
      distributed t1b_z(b,j)
      distributed l1a_z(i,a)
      distributed l1b_z(j,b)

      served T2old_aa_x(a,i,a1,i1)
      served T2old_bb_x(b,j,b1,j1)
      served T2old_ab_x(a,i,b,j)
      served L2old_aa_x(i,a,i1,a1)
      served L2old_bb_x(j,b,j1,b1)
      served L2old_ab_x(i,a,j,b)

      served T2aa_x(a,i,a1,i1)
      served T2bb_x(b,j,b1,j1)
      served T2ab_x(a,i,b,j)
      served L2aa_x(i,a,i1,a1)
      served L2bb_x(j,b,j1,b1)
      served L2ab_x(i,a,j,b)

      served T2aa_y(a,i,a1,i1)
      served T2bb_y(b,j,b1,j1)
      served T2ab_y(a,i,b,j)
      served L2aa_y(i,a,i1,a1)
      served L2bb_y(j,b,j1,b1)
      served L2ab_y(i,a,j,b)

      served T2aa_z(a,i,a1,i1)
      served T2bb_z(b,j,b1,j1)
      served T2ab_z(a,i,b,j)
      served L2aa_z(i,a,i1,a1)
      served L2bb_z(j,b,j1,b1)
      served L2ab_z(i,a,j,b)

      distributed Gmi_a_x(i,i1)
      distributed Gmi_b_x(j,j1)
      distributed Gae_a_x(a,a1)
      distributed Gae_b_x(b,b1)

      distributed Dij_a_x(i,i1)
      distributed Dij_b_x(j,j1)
      distributed Dab_a_x(a,a1)
      distributed Dab_b_x(b,b1)
      distributed Dii_x(i,i1)
      distributed Daa_x(a1,a)
      distributed Djj_x(j,j1)
      distributed Dbb_x(b1,b)

      distributed HF_SPN_DEN(mu,nu)
      distributed COR_SPN_DEN(mu,nu)

      distributed HF_TOT_DEN(mu,nu)
      distributed COR_TOT_DEN(mu,nu)

      Temp TAO_2P_SOI_X(mu, nu, lambda, sigma)
      Temp TAO_2P_SOI_Y(mu, nu, lambda, sigma)
      Temp TAO_2P_SOI_Z(mu, nu, lambda, sigma)

      Served AO_2P_SOI_X(mu, nu, lambda, sigma)
      Served AO_2P_SOI_Y(mu, nu, lambda, sigma)
      Served AO_2P_SOI_Z(mu, nu, lambda, sigma)

      Temp TAO_ERI_INTS(mu, nu, lambda, sigma) 
      Served AO_ERI_INTS(mu, nu, lambda, sigma)

      Temp TAO_2P_DSHIELD_XX(mu, nu, lambda, sigma)
      Temp TAO_2P_DSHIELD_XY(mu, nu, lambda, sigma)
      Temp TAO_2P_DSHIELD_XZ(mu, nu, lambda, sigma)
      Temp TAO_2P_DSHIELD_YX(mu, nu, lambda, sigma)
      Temp TAO_2P_DSHIELD_YY(mu, nu, lambda, sigma)
      Temp TAO_2P_DSHIELD_YZ(mu, nu, lambda, sigma)
      Temp TAO_2P_DSHIELD_ZX(mu, nu, lambda, sigma)
      Temp TAO_2P_DSHIELD_ZY(mu, nu, lambda, sigma)
      Temp TAO_2P_DSHIELD_ZZ(mu, nu, lambda, sigma)
    
      Served AO_2P_DSHIELD_XX(mu, nu, lambda, sigma)
      Served AO_2P_DSHIELD_XY(mu, nu, lambda, sigma)
      Served AO_2P_DSHIELD_XZ(mu, nu, lambda, sigma)
      Served AO_2P_DSHIELD_YX(mu, nu, lambda, sigma)
      Served AO_2P_DSHIELD_YY(mu, nu, lambda, sigma)
      Served AO_2P_DSHIELD_YZ(mu, nu, lambda, sigma)
      Served AO_2P_DSHIELD_ZX(mu, nu, lambda, sigma)
      Served AO_2P_DSHIELD_ZY(mu, nu, lambda, sigma)
      Served AO_2P_DSHIELD_ZZ(mu, nu, lambda, sigma)

      temp PXXXX_x(mu,nu,lambda,sigma)

      temp TXXXX_aa(mu,nu,lambda,sigma)
      temp TXXXX_bb(mu,nu,lambda,sigma)
      temp TXXXX_ab(mu,nu,lambda,sigma)
      temp TXXXX_aa_x(mu,nu,lambda,sigma)
      temp TXXXX_ab_x(mu,nu,lambda,sigma)
      temp TXXXX_bb_x(mu,nu,lambda,sigma)

      temp Txxix(mu,nu,i,sigma)
      temp T1xxix(mu,nu,i,sigma)

      temp TSxxxx(mu,nu,lambda,sigma)
      temp TASxxxx(mu,nu,lambda,sigma)
      temp TAHxxxx(mu,nu,lambda,sigma)
      temp AO_INTS(mu,nu,lambda,sigma)

#..........................................PV----END

# Done declare served arrays
# --------------------------
#
      distributed t1a_old(a,i)
      distributed t1b_old(b,j)
      distributed l1a_old(i,a)
      distributed l1b_old(j,b)
# 
      distributed Gmi_a(i,i1) 
      distributed Gmi_b(j,j1) 
      distributed Gae_a(a,a1) 
      distributed Gae_b(b,b1) 

 
      distributed Doldai_a(a,i)
      distributed Doldai_b(b,j)
      distributed DpqA(mu,nu) 
      distributed DpqB(mu,nu) 
      distributed DHFA(mu,nu) 
      distributed DHFB(mu,nu) 

      distributed DpqA_x(mu,nu) 
      distributed DpqB_x(mu,nu) 

      distributed DpqA_y(mu,nu) 
      distributed DpqB_y(mu,nu) 

      distributed DpqA_z(mu,nu) 
      distributed DpqB_z(mu,nu) 

      temp Tpq(mu,nu) 
      temp Txx(mu,nu) 
      temp T1xx(mu,nu) 
      temp Txi(mu,i) 
      temp Txj(mu,j) 
#
      distributed Dij_a(i,i1) 
      distributed Dij_b(j,j1) 
      distributed Dab_a(a,a1) 
      distributed Dab_b(b,b1) 
      distributed Dii(i,i1)
      distributed Daa(a1,a)
      distributed Djj(j,j1)
      distributed Dbb(b1,b)
#
      temp PXXXX(mu,nu,lambda,sigma) 
      temp TXXXX(mu,nu,lambda,sigma) 
      temp T1XXXX(mu,nu,lambda,sigma) 
      temp T2XXXX(mu,nu,lambda,sigma) 
      temp T3XXXX(mu,nu,lambda,sigma) 
      temp P1XXXX(mu,nu,lambda,sigma) 
#
      temp Txaai(mu,a,a1,i) 
      temp Txxai(mu,nu,a1,i) 
      temp Txxxi(mu,nu,sigma,i) 
      temp T1xxxi(mu,nu,sigma,i) 
      temp Txixx(mu,i,lambda,sigma) 
      temp T1xixx(mu,i,lambda,sigma) 
#
      temp Txbbj(mu,b,b1,j) 
      temp Txxbj(mu,nu,b1,j) 
      temp Txxxj(mu,nu,sigma,j) 
      temp T1xxxj(mu,nu,sigma,j) 
      temp Txjxx(mu,j,lambda,sigma) 
      temp T1xjxx(mu,j,lambda,sigma) 
#
      temp Txbaj(mu,b,a1,j) 
      temp Txxaj(mu,nu,a1,j) 
#
      temp Txabi(mu,a,b1,i) 
      temp Txxbi(mu,nu,b1,i) 
#
      temp Txiii(mu,i,i1,i2) 
      temp T1xiii(mu,i,i1,i2) 
      temp Txxii(mu,nu,i1,i2) 
      temp T1xxii(mu,nu,i1,i2) 
#
      temp Txjjj(mu,j,j1,j2) 
      temp T1xjjj(mu,j,j1,j2) 
      temp Txxjj(mu,nu,j1,j2) 
      temp T1xxjj(mu,nu,j1,j2) 
#
      temp Txjij(mu,j,i1,j2) 
      temp T1xjij(mu,j,i1,j2) 
      temp Txxij(mu,nu,i1,j2) 
      temp T1xxij(mu,nu,i1,j2) 
#
      temp Tiaix(i,a,i1,sigma) 
      temp T1iaix(i,a,i1,sigma) 
      temp Tixix(i,nu,i1,sigma) 
      temp T1ixix(i,nu,i1,sigma) 
      temp Tixxx(i,nu,lambda,sigma) 
      temp T1ixxx(i,nu,lambda,sigma) 
      temp Txiix(nu,i,i1,sigma) 
      temp T1xiix(nu,i,i1,sigma) 
#
      temp Tjbjx(j,b,j1,sigma) 
      temp T1jbjx(j,b,j1,sigma) 
      temp Tjxjx(j,nu,j1,sigma) 
      temp T1jxjx(j,nu,j1,sigma) 
      temp Tjxxx(j,nu,lambda,sigma) 
      temp T1jxxx(j,nu,lambda,sigma) 
      temp Txjjx(nu,j,j1,sigma) 
      temp T1xjjx(nu,j,j1,sigma) 
#
      temp Tibix(i,b,i1,sigma) 
      temp T1ibix(i,b,i1,sigma) 
#
      temp Tjajx(j,a,j1,sigma) 
      temp T1jajx(j,a,j1,sigma) 

      temp Tibjx(i,b,j1,sigma) 
      temp T1ibjx(i,b,j1,sigma) 
      temp Tixjx(i,nu,j1,sigma) 
      temp Tixxj(i,nu,sigma,j1)    
      temp T1ixxj(i,nu,sigma,j1)    
#
      temp Tjaix(j,a,i1,sigma) 
      temp T1jaix(j,a,i1,sigma) 
      temp Tjxix(j,nu,i1,sigma) 

      temp T1jxix(j,nu,i1,sigma)          #PV

      temp Tiiax(i,i1,a,sigma) 
      temp T1iiax(i,i1,a,sigma) 
      temp Tiixx(i,i1,lambda,sigma) 
      temp T1iixx(i,i1,lambda,sigma) 
#
      temp Tjjbx(j,j1,b,sigma) 
      temp T1jjbx(j,j1,b,sigma) 
      temp Tjjxx(j,j1,lambda,sigma) 
      temp T1jjxx(j,j1,lambda,sigma) 
#
      temp Tijax(i,j1,a,sigma) 
      temp T1ijax(i,j1,a,sigma) 
      temp Tijxx(i,j1,lambda,sigma) 
      temp T1ijxx(i,j1,lambda,sigma) 
#
      temp Tiiix(i,i1,i2,sigma) 
      temp TTiiix(i,i1,i2,sigma)
#
      temp Tjjjx(j,j1,j2,sigma) 
#
      temp Tijix(i,j1,i2,sigma) 
#
      temp Tjijx(j,i1,j2,sigma) 
#
      temp Tjixx(j,i1,lambda,sigma) 
#
# Define Local arrays 
# ------------------- 
#
     local Laa(a,a1) 
     distributed L1aa(a1,a) 

     distributed L1aa_x(a1,a)           #PV
     distributed L1ai_x(a1,i)           #PV
     local Laa_x(a,a1)
     local Laa_xx(a,a1)


     local Lbb(b,b1) 
     local L1bb(b1,b) 
     local L1bb_x(b1,b)
     local L1bb_xx(b1,b)
     local Lbb_x(b,b1)
     local Lbb_xx(b,b1)

     local Lai(a,i) 
     distributed L1ai(a1,i) 
     local Lbj(b,j) 

     local Lbj_x(b,j)
     local Lbj_xx1(b,j)
     local Lbj_xx2(b,j)

     local L1bj(b1,j) 
     local L1bj_x(b1,j)
     local L1bj_xx(b1,j)

     local Lai_x(a,i)
     local Lai_xx1(a,i)
     local Lai_xx2(a,i)


     local Lxxai(mu,nu,a2,i) 
     local Lxxaj(mu,nu,a1,j) 
     local Lxxbj(mu,nu,b2,j) 
     local Lxxbi(mu,nu,b,i) 
#
     Static G_TENSOR_2E_SOI(XYZ, XYZ1)
     Static G_TENSOR_2E_DSH(XYZ, XYZ1)
#
#    ------------------------------------------------------------------------
#
# Declare temporary arrays
# ------------------------
#
      temp Taiai(p,i,p1,i1)
    
      temp Taiai_x(p,i,p1,i1)

      temp Laiai(p,i,p1,i1)

      temp  Tiaia(i,a,i1,a1)
      temp  Tiaia_x(i,a,i1,a1)

      temp T1iaia(i,a,i1,a1)
      temp T2iaia(i,a,i1,a1)
      temp T3iaia(i,a,i1,a1)
      temp T4iaia(i,a,i1,a1)

      temp TAiaia(i,a,i1,a1)
      temp TAHiaia(i,a,i1,a1)
      temp T1AHiaia(i,a,i1,a1)

      temp  Tjbjb(j,b,j1,b1)
      temp  TAHjbjb(j,b,j1,b1)
      temp  T1AHjbjb(j,b,j1,b1)

      temp T1jbjb(j,b,j1,b1)
      temp T2jbjb(j,b,j1,b1)
      temp T3jbjb(j,b,j1,b1)
      temp T4jbjb(j,b,j1,b1)
      temp TAjbjb(j,b,j1,b1)
      temp  Tiajb(i,a,j,b)
      temp T1iajb(i,a,j,b)
      temp T2iajb(i,a,j,b)
      temp TAiajb(i,a,j,b)
      temp T1ibib(i,b,i1,b1)
      temp T2ibib(i,b,i1,b1)

      temp  Tibib(i,b,i1,b1)
      temp TAibib(i,b,i1,b1)
      temp TAHibib(i,b,i1,b1)
      temp T1AHibib(i,b,i1,b1)

      temp  Tjaja(j,a,j1,a1)
      temp  TAHjaja(j,a,j1,a1)
      temp  T1AHjaja(j,a,j1,a1)
      temp T1jaja(j,a,j1,a1)

      temp T2jaja(j,a,j1,a1)
      temp TAjaja(j,a,j1,a1)
#
      temp Tbjbj(q,j,q1,j1)
       temp Tbjbj_x(q,j,q1,j1)

      temp Lbjbj(q,j,q1,j1)
      temp Taibj(p,i,q,j)

     temp Taibj_x(p,i,q,j)

      temp T1aibj(p,i,q,j)
#
      temp tmp1_aiai(a,i,a1,i1)
      temp tmp2_aiai(a,i,a1,i1)
      temp tmp1_bjbj(b,j,b1,j1)
      temp tmp2_bjbj(b,j,b1,j1)
      temp tmp1_aibj(a,i,b,j)

      temp tmp1PV_aiai(a,i,a1,i1)
      temp tmp2PV_aiai(a,i,a1,i1)
      temp tmp1PV_bjbj(b,j,b1,j1)
      temp tmp2PV_bjbj(b,j,b1,j1)
      temp tmp1PV_aibj(a,i,b,j)

      temp Tai(a,i)
      temp T1ai(a,i)
      temp Tai_x(a,i)
      temp Tbj(b,j)
      temp Tbj_x(b,j)
      temp T1bj(b,j)
#
      temp Taa(a,a1)
      temp T1aa(a,a1)
      temp Tbb(b,b1)
      temp T1bb(b,b1)
      temp Tae_a(a,a1)
      temp Tae_b(b,b1)
      temp Tia(i,a)
      temp T1ia(i,a)
      temp T2ia(i,a)
      temp T3ia(i,a)
      temp T4ia(i,a)
      temp Tjb(j,b)
      temp T1jb(j,b)
      temp T2jb(j,b)
      temp T3jb(j,b)
      temp T4jb(j,b)
      temp Tme_a(i,a)
      temp Tme_b(j,b)
#
      temp Tii(i,i1)
      temp T1ii(i,i1)
      temp Tjj(j,j1)
      temp T1jj(j,j1)
      temp Tmi_a(i,i1)
      temp Tmi_b(j,j1)
#
      temp Liaai(i,a,a1,i1) 

      temp Liaai_x(i,a,a1,i1)
      temp Liaai_x1(i,a,a1,i1)

      temp Ljbbj_x(j,b,b1,j1)
      temp Ljbbj_x1(j,b,b1,j1)

      temp Tiaai(i,a,a1,i1) 
      temp T1iaai(i,a,a1,i1) 
      temp Ljbbj(j,b,b1,j1) 
      temp Tjbbj(j,b,b1,j1) 
      temp T1jbbj(j,b,b1,j1) 
      temp Liabj(i,a,b,j) 
       temp Liabj_x(i,a,b,j)
      temp Liabj_x1(i,a,b,j)


      temp Tiabj(i,a,b,j) 
      temp Lbjai(b,j,a,i) 
      temp Tbjai(b,j,a,i) 
      temp Tbjai_x(b,j,a,i)
      temp Ljbai(j,b,a,i) 

      temp Ljbai_x(j,b,a,i)
      temp Ljbai_x1(j,b,a,i)

      temp Tjbai(j,b,a,i) 
       temp Tjbai_x(j,b,a,i)


      temp Taaaa(a,a1,a2,a3) 
      temp T1aaaa(a,a1,a2,a3) 
      temp Taabb(a,a1,b,b1) 
      temp T1aabb(a,a1,b,b1) 
      temp Tbbbb(b,b1,b2,b3) 
      temp T1bbbb(b,b1,b2,b3) 
      temp Tiijj(i,i1,j,j1) 
      temp T1iijj(i,i1,j,j1) 
      temp T2iiaa(i,i1,a,a1) 
      temp T2iiaa_x(i,i1,a,a1)           

      temp Tiiii(i,i1,i2,i3) 
      temp T1iiii(i,i1,i2,i3) 
      temp TAiiii(i,i1,i2,i3)
      temp TAHiiii(i,i1,i2,i3)
      temp T1AHiiii(i,i1,i2,i3)

      temp Tjjjj(j,j1,j2,j3) 
      temp T1jjjj(j,j1,j2,j3) 
      temp TAjjjj(j,j1,j2,j3) 
      temp TAHjjjj(j,j1,j2,j3) 
      temp T1AHjjjj(j,j1,j2,j3) 

      temp  Tijij(i,j,i1,j1)
      temp T1ijij(i,j,i1,j1)
      temp  TAijij(i,j,i1,j1)
      temp  TAHijij(i,j,i1,j1)
      temp T1AHijij(i,j,i1,j1)
      
      temp Tiiaa(i,i1,a,a1) 
      temp T1iiaa(i,i1,a,a1) 
      temp Taaii(a,a1,i,i1)
      temp T1aaii(a,a1,i,i1) 
      temp T1AHiiaa(i,i1,a,a1) 
      temp T2AHiiaa(i,i1,a,a1) 

      temp Tiiaa_x(i,i1,a,a1)

      temp Tiibb(i,i1,b,b1) 
      temp T1iibb(i,i1,b,b1) 
      temp T2iibb(i,i1,b,b1) 
      temp TAiibb(i,i1,b,b1) 
      temp Tjjaa(j,j1,a,a1) 
      temp T1jjaa(j,j1,a,a1) 
      temp T2jjaa(j,j1,a,a1) 
      temp TAjjaa(j,j1,a,a1) 

      temp Tjjbb(j,j1,b,b1)
      temp T1jjbb(j,j1,b,b1)
      temp Tbbij(b,b1,j,j1)
      temp T1bbjj(b,b1,j,j1)
      temp TAHjjbb(j,j1,b,b1)
      temp T1AHjjbb(j,j1,b,b1)

      temp Tjjbb_x(j,j1,b,b1)

      temp TAjjbb(j,j1,b,b1) 
      temp T2jjbb(j,j1,b,b1) 
      temp T2jjbb_x(j,j1,b,b1)

      temp T1iabj(i,a,b,j) 
      temp T1jbai(j,b,a,i) 
      temp T1bjia(b,j,i,a) 
      temp Tiaii(i,a,i1,i2) 
      temp Tjbjj(j,b,j1,j2) 
      temp Tiajj(i,a,j,j1) 
      temp Tjbii(j,b,i,i1) 

      temp Taaai(a,a1,a2,i) 
      temp T1aaai(a,a1,a2,i) 
      temp Taiaa(a,i,a1,a2) 
      temp T1aiaa(a,i,a1,a2) 
      temp TAHaaai(a,a1,a2,i) 
      temp T1AHaaai(a,a1,a2,i) 

      temp Tbbbj(b,b1,b2,j) 
      temp T1bbbj(b,b1,b2,j) 
      temp Tbjbb(b,j,b1,b2) 
      temp T1bjbb(b,j,b1,b2) 
      temp TAHbbbj(b,b1,b2,j) 
      temp T1AHbbbj(b,b1,b2,j) 

      temp Taabj(a,a1,b,j) 
      temp T1aabj(a,a1,b,j) 
      temp Tajab(a,j,a1,b) 
      temp T1ajab(a,j,a1,b) 
      temp TAHaabj(a,a1,b,j) 
      temp T1AHaabj(a,a1,b,j) 

      temp Tbbai(b,b1,a,i) 
      temp T1bbai(b,b1,a,i) 
      temp Tbiba(b,i,b1,a) 
      temp T1biba(b,i,b1,a) 
      temp TAHbbai(b,b1,a,i) 
      temp T1AHbbai(b,b1,a,i) 

      temp Tiiia(i,i1,i2,a) 
      temp T1iiia(i,i1,i2,a) 
      temp Taiii(a,i,i1,i2)
      temp T1aiii(a,i,i1,i2)
      temp TAHiiia(i,i1,i2,a)
      temp T1AHiiia(i,i1,i2,a)

      temp  Tjjjb(j,j1,j2,b) 
      temp T1jjjb(j,j1,j2,b) 
      temp  Tbjjj(b,j,j1,j2)
      temp  T1bjjj(b,j,j1,j2)
      temp  TAHjjjb(j,j1,j2,b) 
      temp  T1AHjjjb(j,j1,j2,b) 

      temp  Tijib(i,j,i1,b)
      temp T1ijib(i,j,i1,b)
      temp  Tbiji(b,i,j,i1)
      temp T1biji(b,i,j,i1)
      temp  TAHijib(i,j,i1,b)
      temp  T1AHijib(i,j,i1,b)

      temp  Tjija(j,i,j1,a)
      temp T1jija(j,i,j1,a)
      temp  Tajij(a,j,i,j1)
      temp T1ajij(a,j,i,j1)
      temp  TAHjija(j,i,j1,a)
      temp T1AHjija(j,i,j1,a)

      temp  Tbabi(b,a,b1,i) 
      temp T1babi(b,a,b1,i) 
      temp  Tbiab(b,i,a,b1) 
      temp T1biab(b,i,a,b1)
      temp  TAHbabi(b,a,b1,i)
      temp T1AHbabi(b,a,b1,i)

      temp  Tabaj(a,b,a1,j) 
      temp T1abaj(a,b,a1,j) 
      temp  Tajba(a,j,b,a1) 
      temp T1ajba(a,j,b,a1)
      temp  TAHabaj(a,b,a1,j)
      temp T1AHabaj(a,b,a1,j)

      temp  Tijab(i,j,a,b) 
      temp T1ijab(i,j,a,b) 
      temp  Tabij(a,b,i,j)
      temp T1abij(a,b,i,j) 
      temp  TAHijab(i,j,a,b) 
      temp T1AHijab(i,j,a,b) 

      temp  Tiijb(i,i1,j,b) 
      temp T1iijb(i,i1,j,b) 
      temp TTiiia(a,i2,i1,i)
      temp  Tjjia(j,j1,i,a) 
      temp T1jjia(j,j1,i,a) 
      temp T2ijab(i,j,a,b) 

      temp T2ijab_x(i,j,a,b)
      temp  Tijab_x(i,j,a,b)

      temp  Tabab(a,b,a1,b1) 
      temp T1abab(a,b,a1,b1) 
      temp  Tjbia(j,b,i,a) 
      temp T1jbia(j,b,i,a) 
      temp T2jbia(j,b,i,a) 
      temp  Tjaib(j,a,i,b) 
      temp  Tibja(i,b,j,a) 
      temp  Tbibi(b,i1,b1,i) 

      temp  Tbibi_x(b,i1,b1,i)

      temp T1bibi(b,i1,b1,i) 
      temp  Lbibi(b,i1,b1,i) 

      temp  Lbibi_x(b,i1,b1,i)

      temp  Tajaj(a,j1,a1,j)  
      temp  Lajaj(a,j1,a1,j) 


      temp  Lajaj_x(a,j1,a1,j)

      temp Tiixa(i,i1,sigma,a1)
      temp Tibaj(i,b,a,j1)        
      temp Tjaaj(j,a1,a,j1)       

      temp Taijb(a,i,j,b)    
      temp Tbbjj(b,b1,j,j1) 

      temp Tabij_x(a,b,i1,j1)
      temp Taaii_x(a,a1,i,i1)

      temp Tbaji(b,a,j,i) 
      temp Tiiai(i,i1,a,i2) 
      temp Tjjbj(j,j1,b,j2) 
      temp Tijaj(i,j,a,j1) 
      temp Tjibi(j,i,b,i1) 
      temp Tbiaj(b,i,a,j)    
      temp Tajbi(a,j,b1,i1)  

       temp Tbbjj_x(b,b1,j,j1)


      temp Jxi(mu,i) 
      temp Jxj(mu,j) 
      temp Ixa(mu,a) 
      temp Ixb(mu,b) 
      temp Ixx(mu,mu) 
      temp I1xx(mu,mu) 
#
      temp Zaa(lambda,i,a1,i1) 
      temp ZZaa(lambda,i,sigma,i1)  
      temp Zbb(lambda,j,b1,j1) 
      temp ZZbb(lambda,j,sigma,j1)  
      temp Zab(lambda,i,b1,j1) 
      temp ZZab(lambda,i,sigma,j1)  
#
      temp Qaa(i,lambda,i1,a1) 
      temp QQaa(i,lambda,i1,sigma) 
      temp Qbb(j,lambda,j1,b1)
      temp QQbb(j,lambda,j1,sigma) 
      temp  Qab(i,lambda,j,b) 
      temp QQab(i,lambda,j,sigma) 
#
# Define scalar quantities 
# ------------------------ 
#
      scalar one
      scalar etemp 
      scalar esum 
      scalar etmp
      scalar eacbd 
      scalar esuma                   
      scalar ecorraa          
      scalar esumb                
      scalar ecorrbb          
      
      scalar sum0
      scalar tmp
      scalar suma
      scalar sumb
      scalar sumaa
      scalar sumbb
      scalar sumab 
      scalar rank
      scalar ipol

      Scalar property
      Scalar beta_is_minus
      scalar do_pols
      scalar do_aten
      scalar do_gten
      scalar do_dten

      Scalar NCOUNT
      Scalar X_COMP
      Scalar Y_COMP
      Scalar Z_COMP
#
      Scalar D2SO_PX
      Scalar D2SO_PY
      Scalar D2SO_PZ

      Scalar D2SO_XX
      Scalar D2SO_XY
      Scalar D2SO_XZ

      Scalar D2SO_YX
      Scalar D2SO_YY
      Scalar D2SO_YZ

      Scalar D2SO_ZX
      Scalar D2SO_ZY
      Scalar D2SO_ZZ

      Scalar D2AO_PP
      Scalar D2AO_ZZ
      Scalar D2DISO_PSUM
      Scalar D2DISO_0
      Scalar ASYM
      Scalar Fact
      Scalar Pone
      Scalar Mone
      Scalar Pthalf 
      Scalar Mthalf 
      Scalar Phalf 
      Scalar Mhalf 
      Scalar Null 

      Scalar E2GC_INTMD    
      Scalar E2GC_XX_YY_ZZ 
      Scalar E2GC_XX_INTMD
      Scalar E2GC_XY_INTMD
      Scalar E2GC_XZ_INTMD
      Scalar E2GC_YX_INTMD
      Scalar E2GC_YY_INTMD
      Scalar E2GC_YZ_INTMD
      Scalar E2GC_ZX_INTMD
      Scalar E2GC_ZY_INTMD
      Scalar E2GC_ZZ_INTMD

      Scalar E2GC_XX_SAVE
      Scalar E2GC_YY_SAVE
      Scalar E2GC_ZZ_SAVE

      Scalar E2GC_XX_HF
      Scalar E2GC_XY_HF
      Scalar E2GC_XZ_HF
      Scalar E2GC_YX_HF
      Scalar E2GC_YY_HF
      Scalar E2GC_YZ_HF
      Scalar E2GC_ZX_HF
      Scalar E2GC_ZY_HF
      Scalar E2GC_ZZ_HF

      Scalar E2GC_XX
      Scalar E2GC_XY
      Scalar E2GC_XZ
      Scalar E2GC_YX
      Scalar E2GC_YY
      Scalar E2GC_YZ
      Scalar E2GC_ZX
      Scalar E2GC_ZY
      Scalar E2GC_ZZ
      Scalar ONETHIRD

      PROC CREATE1ARRAY 
#     -----------------
           CREATE Gmi_a 
           CREATE Gmi_b 
           CREATE Gae_a 
           CREATE Gae_b 

           CREATE Dij_a
           CREATE Dij_b
           CREATE Dab_a
           CREATE Dab_b
           CREATE DpqA 
           CREATE DpqB 
           CREATE DhfA  
           CREATE DhfB  
      ENDPROC CREATE1ARRAY 
#     ---------------------
# 
      PROC CREATEARRAY 
#     ----------------
           CREATE Dii
           CREATE Daa
           CREATE Djj
           CREATE Dbb
      ENDPROC CREATEARRAY 
#     -------------------

      PROC TAUAA
#     ----------
      PARDO a, i, a1, i1
            REQUEST T2old_aa(a,i,a1,i1) i1 

            GET t1a_old(a1,i1)
            GET t1a_old(a1,i)
            GET t1a_old(a,i1)
            GET t1a_old(a,i)

            tai(a1,i1) = t1a_old(a1,i1)
            tmp1_aiai(a,i,a1,i1)  = t1a_old(a,i)^tai(a1,i1)
            tai(a1,i) = t1a_old(a1,i)
            tmp2_aiai(a,i,a1,i1)  = t1a_old(a,i1)^tai(a1,i)

            tmp1_aiai(a,i,a1,i1) += T2old_aa(a,i,a1,i1)
            tmp1_aiai(a,i,a1,i1) -= tmp2_aiai(a,i,a1,i1)
            PREPARE Tau_aa(a,i,a1,i1) = tmp1_aiai(a,i,a1,i1)

      ENDPARDO a, i, a1, i1
#bgn_debug
#       execute server_barrier
#       esum =0.0
#       PARDO a, i, a1, i1
#             REQUEST T2old_aa(a,i,a1,i1) i1
#             tmp1_aiai(a,i,a1,i1)  = T2old_aa(a,i,a1,i1)
#             tmp = tmp1_aiai(a,i,a1,i1)*tmp1_aiai(a,i,a1,i1)
#             esum += tmp
#      ENDPARDO a, i, a1, i1
#      execute print_scalar esum 
#end_debug

      ENDPROC TAUAA
#---------------------------------------------------------------------
      PROC TAUAA_x
#     ------------
      PARDO a, i, a1, i1
            REQUEST T2old_aa_x(a,i,a1,i1) i1
            
            GET t1a_old(a1,i1)
            GET t1a_old(a1,i)
            GET t1a_old(a,i1)
            GET t1a_old(a,i)

            GET t1a_old_x(a1,i1)
            GET t1a_old_x(a1,i)
            GET t1a_old_x(a,i1)
            GET t1a_old_x(a,i)


            tai(a1,i1) = t1a_old_x(a1,i1)
            tmp1_aiai(a,i,a1,i1)  = t1a_old(a,i)^tai(a1,i1)

            tai(a1,i1) = t1a_old(a1,i1)
            tmp1PV_aiai(a,i,a1,i1)  = t1a_old_x(a,i)^tai(a1,i1)
            tmp1_aiai(a,i,a1,i1) +=tmp1PV_aiai(a,i,a1,i1)
#bgn_debug
#            tmp1_aiai(a,i,a1,i1) *= 1.0
#end_debug
            tai(a1,i) = t1a_old_x(a1,i)
            tmp2_aiai(a,i,a1,i1)  = t1a_old(a,i1)^tai(a1,i)

            tai(a1,i) = t1a_old(a1,i)
            tmp2PV_aiai(a,i,a1,i1)  = t1a_old_x(a,i1)^tai(a1,i)
            tmp2_aiai(a,i,a1,i1)   +=  tmp2PV_aiai(a,i,a1,i1)
#bgn_debug
#           tmp2_aiai(a,i,a1,i1) *= 1.0
#end_debug

            tmp1_aiai(a,i,a1,i1) -= tmp2_aiai(a,i,a1,i1)
            tmp1_aiai(a,i,a1,i1) += T2old_aa_x(a,i,a1,i1)
            
            PREPARE Tau_aa_x(a,i,a1,i1) = tmp1_aiai(a,i,a1,i1)

      ENDPARDO a, i, a1, i1
#bgn_debug
#       execute server_barrier
#       esum =0.0
#       PARDO a, i, a1, i1
#             REQUEST Tau_aa_x(a,i,a1,i1) i1
#             tmp1_aiai(a,i,a1,i1)  = Tau_aa_x(a,i,a1,i1)
#             tmp = tmp1_aiai(a,i,a1,i1)*tmp1_aiai(a,i,a1,i1)
#             esum += tmp
#      ENDPARDO a, i, a1, i1
#      execute print_scalar esum 
#end_debug

      ENDPROC TAUAA_x
#------------------------------------------------------------------
      PROC TAUBB
#     ----------
      PARDO b, j, b1, j1

            REQUEST T2old_bb(b,j,b1,j1) j1 
            GET t1b_old(b1,j1)
            GET t1b_old(b1,j)
            GET t1b_old(b,j1)
            GET t1b_old(b,j)

            tbj(b1,j1) = t1b_old(b1,j1)
            tmp1_bjbj(b,j,b1,j1)  = t1b_old(b,j)^tbj(b1,j1)
            tbj(b1,j) = t1b_old(b1,j)
            tmp2_bjbj(b,j,b1,j1)  = t1b_old(b,j1)^tbj(b1,j)

            tmp1_bjbj(b,j,b1,j1) += T2old_bb(b,j,b1,j1)
            tmp1_bjbj(b,j,b1,j1) -= tmp2_bjbj(b,j,b1,j1)
            PREPARE Tau_bb(b,j,b1,j1) = tmp1_bjbj(b,j,b1,j1)

      ENDPARDO b, j, b1, j1
      ENDPROC TAUBB
#--------------------------------------------------------------------
      PROC TAUBB_x
#     ------------
      PARDO b, j, b1, j1

            REQUEST T2old_bb_x(b,j,b1,j1) j1
            GET t1b_old_x(b1,j1)
            GET t1b_old_x(b1,j)
            GET t1b_old_x(b,j1)
            GET t1b_old_x(b,j)

            GET t1b_old(b1,j1)
            GET t1b_old(b1,j)
            GET t1b_old(b,j1)
            GET t1b_old(b,j)


            tbj(b1,j1) = t1b_old_x(b1,j1)
            tmp1_bjbj(b,j,b1,j1)  = t1b_old(b,j)^tbj(b1,j1)
            
            tbj(b1,j1) = t1b_old(b1,j1)
            tmp1PV_bjbj(b,j,b1,j1)  = t1b_old_x(b,j)^tbj(b1,j1)
            tmp1_bjbj(b,j,b1,j1)   +=  tmp1PV_bjbj(b,j,b1,j1) 
#bgn_debug
#             tmp1_bjbj(b,j,b1,j1) *=1.0
#end_debug

            tbj(b1,j) = t1b_old_x(b1,j)
            tmp2_bjbj(b,j,b1,j1)  = t1b_old(b,j1)^tbj(b1,j)
          
            tbj(b1,j) = t1b_old(b1,j)
            tmp2PV_bjbj(b,j,b1,j1)  = t1b_old_x(b,j1)^tbj(b1,j)
            tmp2_bjbj(b,j,b1,j1)   += tmp2PV_bjbj(b,j,b1,j1)
#bgn_debug
#            tmp2_bjbj(b,j,b1,j1) *=1.0
#end_debug

            tmp1_bjbj(b,j,b1,j1) -= tmp2_bjbj(b,j,b1,j1)
            tmp1_bjbj(b,j,b1,j1) += T2old_bb_x(b,j,b1,j1)

            PREPARE Tau_bb_x(b,j,b1,j1) = tmp1_bjbj(b,j,b1,j1)

      ENDPARDO b, j, b1, j1
      ENDPROC TAUBB_x
#-----------------------------------------------------------------------
      PROC TAUAB
#     ----------
      PARDO a, i, b, j
            REQUEST T2old_ab(a,i,b,j) j 
            GET t1a_old(a,i)
            GET t1b_old(b,j)

            tmp1_aibj(a,i,b,j)  = t1a_old(a,i)^t1b_old(b,j)

            tmp1_aibj(a,i,b,j) += T2old_ab(a,i,b,j)
            PREPARE Tau_ab(a,i,b,j) = tmp1_aibj(a,i,b,j)
      ENDPARDO a, i, b, j
      ENDPROC TAUAB
#-------------------------------------------------------------
      PROC TAUAB_x
#     ------------
      PARDO a, i, b, j
            REQUEST T2old_ab_x(a,i,b,j) j
            GET t1a_old(a,i)
            GET t1b_old(b,j)
        
            GET t1a_old_x(a,i)
            GET t1b_old_x(b,j)

     
            tmp1_aibj(a,i,b,j)  = t1a_old_x(a,i)^t1b_old(b,j)
            tmp1PV_aibj(a,i,b,j)= t1a_old(a,i)^t1b_old_x(b,j)

            tmp1_aibj(a,i,b,j) +=tmp1PV_aibj(a,i,b,j)
#bgn_debug
#            tmp1_aibj(a,i,b,j) *=1.0
#end_debug
            tmp1_aibj(a,i,b,j) += T2old_ab_x(a,i,b,j)

            PREPARE Tau_ab_x(a,i,b,j) = tmp1_aibj(a,i,b,j)
      ENDPARDO a, i, b, j
      ENDPROC TAUAB_x
#-----------------------------------------------------------
      PROC TAU
           CALL TAUAA
           CALL TAUBB
           CALL TAUAB
      ENDPROC TAU
#-----------------------------------------------------------
      PROC TAU_x
           CALL TAUAA_x
           CALL TAUBB_x
           CALL TAUAB_x
      ENDPROC TAU_x
#-------------------------------------------------------------
      PROC GAEA
#     ---------
      PARDO a, a1
            Taa(a,a1) = 0.0

            DO i1
            DO i
            DO a2
               REQUEST T2old_aa(a1,i1,a2,i) i 
               REQUEST L2old_aa(i1,a,i,a2)  i 

               T1aa(a,a1) = L2old_aa(i1,a,i,a2)*T2old_aa(a1,i1,a2,i)
               T1aa(a,a1) *= 0.5
               Taa(a,a1) -= T1aa(a,a1)
            ENDDO a2
            ENDDO i
            ENDDO i1
            DO i
            DO j
            DO b
               REQUEST T2old_ab(a1,i,b,j) j 
               REQUEST L2old_ab(i,a,j,b)  j 

               T1aa(a,a1) = L2old_ab(i,a,j,b)*T2old_ab(a1,i,b,j)
               Taa(a,a1) -= T1aa(a,a1)
            ENDDO b
            ENDDO j
            ENDDO i
            PUT Gae_a(a,a1) += Taa(a,a1)
      ENDPARDO a, a1
#bgn_debug
#      execute sip_barrier
#      sumaa = 0.0
#      do a
#      do a1
#         get Gae_a(a,a1)
#         Taa(a,a1) = Gae_a(a,a1)
#         tmp = Taa(a,a1)*Taa(a,a1)
#         sumaa +=tmp
#       enddo a1
#       enddo a
#       execute print_scalar sumaa
#end_debug

      ENDPROC GAEA
#-------------------------------------------------------------
      PROC GAEA_x
#     -----------
      PARDO a, a1
            Taa(a,a1) = 0.0
            Gae_a_x(a,a1) = Taa(a,a1)
      ENDPARDO a, a1
      execute sip_barrier 

      PARDO a, a1
            Taa(a,a1) = 0.0

            DO i1
            DO i
            DO a2
               REQUEST T2old_aa(a1,i1,a2,i) i
               REQUEST L2old_aa(i1,a,i,a2)  i
               REQUEST T2old_aa_x(a1,i1,a2,i) i
               REQUEST L2old_aa_x(i1,a,i,a2)  i


               T1aa(a,a1) = L2old_aa(i1,a,i,a2)*T2old_aa_x(a1,i1,a2,i)
               T1aa(a,a1) *= 0.5
               Taa(a,a1) -= T1aa(a,a1)

               T1aa(a,a1) = L2old_aa_x(i1,a,i,a2)*T2old_aa(a1,i1,a2,i)
               T1aa(a,a1) *= 0.5
               Taa(a,a1) -= T1aa(a,a1)

            ENDDO a2
            ENDDO i
            ENDDO i1
            DO i
            DO j
            DO b
               REQUEST T2old_ab(a1,i,b,j) j
               REQUEST L2old_ab(i,a,j,b)  j

               REQUEST T2old_ab_x(a1,i,b,j) j
               REQUEST L2old_ab_x(i,a,j,b)  j

               T1aa(a,a1) = L2old_ab_x(i,a,j,b)*T2old_ab(a1,i,b,j)
               Taa(a,a1) -= T1aa(a,a1)

               T1aa(a,a1) = L2old_ab(i,a,j,b)*T2old_ab_x(a1,i,b,j)
               Taa(a,a1) -= T1aa(a,a1) 

            ENDDO b
            ENDDO j
            ENDDO i
            PUT Gae_a_x(a,a1) += Taa(a,a1)
      ENDPARDO a, a1
#bgn_debug
#      execute sip_barrier
#      sumaa = 0.0
#      do a
#      do a1
#         get Gae_a_x(a,a1)
#         Taa(a,a1) = Gae_a_x(a,a1)
#         tmp = Taa(a,a1)*Taa(a,a1)
#         sumaa +=tmp
#       enddo a1
#       enddo a
#       execute print_scalar sumaa
#end_debug
 
      ENDPROC GAEA_x
#-------------------------------------------------------------------
      PROC GAEB
#     ---------
      PARDO b, b1
            Tbb(b,b1) = 0.0
            DO j
            DO j1
            DO b2
               REQUEST T2old_bb(b1,j,b2,j1) j1 
               REQUEST L2old_bb(j,b,j1,b2)  j1 

               T1bb(b,b1) = L2old_bb(j,b,j1,b2)*T2old_bb(b1,j,b2,j1)
               T1bb(b,b1) *= 0.5
               Tbb(b,b1) -= T1bb(b,b1)
            ENDDO b2
            ENDDO j1
            ENDDO j
            DO j
            DO i
            DO a
               REQUEST T2old_ab(a,i,b1,j) j 
               REQUEST L2old_ab(i,a,j,b)  j 

               T1bb(b,b1) = L2old_ab(i,a,j,b)*T2old_ab(a,i,b1,j)
               Tbb(b,b1) -= T1bb(b,b1)
            ENDDO a
            ENDDO i
            ENDDO j
            PUT Gae_b(b,b1) += Tbb(b,b1)
      ENDPARDO b, b1
      ENDPROC GAEB
#---------------------------------------------------------------------

      PROC GAEB_x
#     -----------
      PARDO b, b1
            Tbb(b,b1) = 0.0
            Gae_b_x(b,b1) = Tbb(b,b1) 
      ENDPARDO b, b1
      execute sip_barrier 

      PARDO b, b1
            Tbb(b,b1) = 0.0
            DO j
            DO j1
            DO b2
               REQUEST T2old_bb(b1,j,b2,j1) j1
               REQUEST L2old_bb(j,b,j1,b2)  j1

               REQUEST T2old_bb_x(b1,j,b2,j1) j1
               REQUEST L2old_bb_x(j,b,j1,b2)  j1

               T1bb(b,b1) = L2old_bb(j,b,j1,b2)*T2old_bb_x(b1,j,b2,j1)
               T1bb(b,b1) *= 0.5
               Tbb(b,b1) -= T1bb(b,b1)

               T1bb(b,b1) = L2old_bb_x(j,b,j1,b2)*T2old_bb(b1,j,b2,j1)
               T1bb(b,b1) *= 0.5
               Tbb(b,b1) -= T1bb(b,b1)
            ENDDO b2
            ENDDO j1
            ENDDO j
            DO j
            DO i
            DO a
               REQUEST T2old_ab(a,i,b1,j) j
               REQUEST L2old_ab(i,a,j,b)  j
   
               REQUEST T2old_ab_x(a,i,b1,j) j
               REQUEST L2old_ab_x(i,a,j,b)  j
           
               T1bb(b,b1) = L2old_ab(i,a,j,b)*T2old_ab_x(a,i,b1,j)
               Tbb(b,b1) -= T1bb(b,b1)
               
               T1bb(b,b1) = L2old_ab_x(i,a,j,b)*T2old_ab(a,i,b1,j)
               Tbb(b,b1) -= T1bb(b,b1)
            ENDDO a
            ENDDO i
            ENDDO j
            PUT Gae_b_x(b,b1) += Tbb(b,b1)
      ENDPARDO b, b1
      ENDPROC GAEB_x
#-------------------------------------------------------------
      PROC GAE
         CALL GAEA
         CALL GAEB
      ENDPROC GAE
#-------------------------------------------------------------
       PROC GAE_x
         CALL GAEA_x
         CALL GAEB_x
      ENDPROC GAE_x
#-------------------------------------------------------------
      PROC GMIA
#     ---------
      PARDO a, a1, i, i1
            DO i2
               REQUEST T2old_aa(a,i1,a1,i2) i2 
               REQUEST L2old_aa(i,a,i2,a1)  i2 

               Tii(i1,i)  = T2old_aa(a,i1,a1,i2)*L2old_aa(i,a,i2,a1)
               Tii(i1,i) *= 0.5
               PUT Gmi_a(i1,i) += Tii(i1,i)
            ENDDO i2
      ENDPARDO a, a1, i, i1
      PARDO a, b, i, j
            DO i1
               REQUEST T2old_ab(a,i1,b,j) j 
               REQUEST L2old_ab(i,a,j,b)  j 
               Tii(i1,i) = T2old_ab(a,i1,b,j)*L2old_ab(i,a,j,b)
               PUT Gmi_a(i1,i) += Tii(i1,i)
            ENDDO i1
      ENDPARDO a, b, i, j
      ENDPROC GMIA
#----------------------------------------------------------------
      PROC GMIA_x
#     -----------
      PARDO i, i1
            Tii(i1,i) = 0.0
            Gmi_a_x(i1,i) = Tii(i1,i)
      ENDPARDO i, i1
      execute sip_barrier 
 
      PARDO a, a1, i, i1
            DO i2
               REQUEST T2old_aa(a,i1,a1,i2) i2
               REQUEST L2old_aa(i,a,i2,a1)  i2

               REQUEST T2old_aa_x(a,i1,a1,i2) i2
               REQUEST L2old_aa_x(i,a,i2,a1)  i2

               Tii(i1,i)  = T2old_aa(a,i1,a1,i2)*L2old_aa_x(i,a,i2,a1)
               Tii(i1,i) *= 0.5
               PUT Gmi_a_x(i1,i) += Tii(i1,i)
               Tii(i1,i)  = T2old_aa_x(a,i1,a1,i2)*L2old_aa(i,a,i2,a1)
               Tii(i1,i) *= 0.5
               PUT Gmi_a_x(i1,i) += Tii(i1,i)
            ENDDO i2
      ENDPARDO a, a1, i, i1
      PARDO a, b, i, j
            DO i1
               REQUEST T2old_ab(a,i1,b,j) j
               REQUEST L2old_ab(i,a,j,b)  j

               REQUEST T2old_ab_x(a,i1,b,j) j
               REQUEST L2old_ab_x(i,a,j,b)  j

               Tii(i1,i) = T2old_ab(a,i1,b,j)*L2old_ab_x(i,a,j,b)
               PUT Gmi_a_x(i1,i) += Tii(i1,i)
               Tii(i1,i) = T2old_ab_x(a,i1,b,j)*L2old_ab(i,a,j,b)
               PUT Gmi_a_x(i1,i) += Tii(i1,i)
            ENDDO i1
      ENDPARDO a, b, i, j
      ENDPROC GMIA_x
#--------------------------------------------------------------------
      PROC GMIB
#     ---------
      PARDO b, b1, j, j1
            DO j2
               REQUEST T2old_bb(b,j1,b1,j2) j2 
               REQUEST L2old_bb(j,b,j2,b1)  j2 

               Tjj(j1,j)  = T2old_bb(b,j1,b1,j2)*L2old_bb(j,b,j2,b1)
               Tjj(j1,j) *= 0.5
               PUT Gmi_b(j1,j) += Tjj(j1,j)
            ENDDO j2
      ENDPARDO b, b1, j, j1
      PARDO b, a, j, i
            DO j1
               REQUEST T2old_ab(a,i,b,j1) j1 
               REQUEST L2old_ab(i,a,j,b)  j 
               Tjj(j1,j) = T2old_ab(a,i,b,j1)*L2old_ab(i,a,j,b)
               PUT Gmi_b(j1,j) += Tjj(j1,j)
            ENDDO j1
      ENDPARDO b, a, j, i
      ENDPROC GMIB
#---------------------------------------------------------------------
      PROC GMIB_x
#     -----------
      PARDO j, j1
            Tjj(j1,j) = 0.0
            Gmi_b_x(j1,j) = Tjj(j1,j)
      ENDPARDO j, j1
      execute sip_barrier 

      PARDO b, b1, j, j1
            DO j2
               REQUEST T2old_bb(b,j1,b1,j2) j2
               REQUEST L2old_bb(j,b,j2,b1)  j2

               REQUEST T2old_bb_x(b,j1,b1,j2) j2
               REQUEST L2old_bb_x(j,b,j2,b1)  j2

               Tjj(j1,j)  = T2old_bb(b,j1,b1,j2)*L2old_bb_x(j,b,j2,b1)
               Tjj(j1,j) *= 0.5
               PUT Gmi_b_x(j1,j) += Tjj(j1,j)

               Tjj(j1,j)  = T2old_bb_x(b,j1,b1,j2)*L2old_bb(j,b,j2,b1)
               Tjj(j1,j) *= 0.5
               PUT Gmi_b_x(j1,j) += Tjj(j1,j)
            ENDDO j2
      ENDPARDO b, b1, j, j1
      PARDO b, a, j, i
            DO j1
               REQUEST T2old_ab(a,i,b,j1) j1
               REQUEST L2old_ab(i,a,j,b)  j
               REQUEST T2old_ab_x(a,i,b,j1) j1
               REQUEST L2old_ab_x(i,a,j,b)  j

               Tjj(j1,j) = T2old_ab(a,i,b,j1)*L2old_ab_x(i,a,j,b)
               PUT Gmi_b_x(j1,j) += Tjj(j1,j)

               Tjj(j1,j) = T2old_ab_x(a,i,b,j1)*L2old_ab(i,a,j,b)
               PUT Gmi_b_x(j1,j) += Tjj(j1,j)

            ENDDO j1
      ENDPARDO b, a, j, i
      ENDPROC GMIB_x
#---------------------------------------------------------------------
      PROC GMI
         CALL GMIA
         CALL GMIB
      ENDPROC GMI
# --------------------------------------------------------------------
       PROC GMI_x
         CALL GMIA_x
         CALL GMIB_x
      ENDPROC GMI_x
#---------------------------------------------------------------------
# ___________________________________________________________________________ 
# In this PROCEDURE the D^{ij}_{ab} block of the two-particle 
# density matrix is formed. Only the AA spin case is considered.  

      PROC DIJABAA 

# Dim(i,m) = Gmi_a(i,m) + l1a_old(m,e)*t1a_old(e,i)  
# Dea(e,a) = Gae_a(e,a) - l1a_old(m,e)*t1a_old(a,m) 

# Dii 
      PARDO i, i1 
            GET Gmi_a(i,i1) 
            PUT Dii(i,i1) += Gmi_a(i,i1) 
      ENDPARDO i, i1 

      PARDO i, i1, a       
            GET l1a_old(i1,a) 
            GET t1a_old(a,i) 
            Tii(i,i1)      = l1a_old(i1,a)*t1a_old(a,i) 
            PUT Dii(i,i1) += Tii(i,i1) 
      ENDPARDO i, i1, a       
# Daa 
      PARDO a1, a 
            GET Gae_a(a1,a) 
            PUT Daa(a1,a) += Gae_a(a1,a) 
      ENDPARDO a1, a 

      PARDO a1, a, i 
            GET l1a_old(i,a1) 
            GET t1a_old(a,i) 
            Taa(a1,a)      = t1a_old(a,i)*l1a_old(i,a1) 
            Taa(a1,a)     *= -1.0  
            PUT Daa(a1,a) += Taa(a1,a) 
      ENDPARDO a1, a, i  
      execute sip_barrier ca  

# Done one-particle intermediates 
# Terms 1-5 in Eq. 33 

      PARDO a, a1, i, i1 
            REQUEST Tau_aa(a,i,a1,i1)   i1  
            REQUEST L2old_aa(i,a,i1,a1) i1  

            Tiiaa(i,i1,a,a1)  = Tau_aa(a,i,a1,i1) 
            T1iiaa(i,i1,a,a1) = L2old_aa(i,a,i1,a1)       # PV neeed to rethink 
            Tiiaa(i,i1,a,a1) += T1iiaa(i,i1,a,a1) 
            Tiiaa(i,i1,a,a1) *= 0.125  
#bgn_debug
#            Tiiaa(i,i1,a,a1) *= 1.0
#end_debug
            DO i2 
               REQUEST Tau_aa(a,i2,a1,i)  i2   
               REQUEST Tau_aa(a,i2,a1,i1) i2  
               GET Dii(i1,i2) 
               GET Dii(i,i2) 

               T1iiaa(i,i1,a,a1) = Tau_aa(a,i2,a1,i)*Dii(i1,i2) 
               T1iiaa(i,i1,a,a1)*= 0.125 
#bgn_debug
#               T1iiaa(i,i1,a,a1) *= 1.0
#end_debug
               Tiiaa(i,i1,a,a1) += T1iiaa(i,i1,a,a1) 

               T1iiaa(i,i1,a,a1) = Tau_aa(a,i2,a1,i1)*Dii(i,i2) 
               T1iiaa(i,i1,a,a1)*= -0.125 
#bgn_debug
#               T1iiaa(i,i1,a,a1) *= 1.0
#end_debug
               Tiiaa(i,i1,a,a1) += T1iiaa(i,i1,a,a1) 
               DO i3 
                  REQUEST Tau_aa(a,i2,a1,i3)     i3 
                  REQUEST Vijmn_aaaa(i,i1,i2,i3) i3 
                  T2iiaa(i2,i3,a,a1)  = Tau_aa(a,i2,a1,i3)

                  T1iiaa(i,i1,a,a1)  = Vijmn_aaaa(i,i1,i2,i3)*T2iiaa(i2,i3,a,a1)
                  T1iiaa(i,i1,a,a1) *= 0.0625
#bgn_debug
#                  T1iiaa(i,i1,a,a1) *= 1.0
#end_debug
                  Tiiaa(i,i1,a,a1)  += T1iiaa(i,i1,a,a1)
               ENDDO i3 
            ENDDO i2 
            DO a2 
               REQUEST Tau_aa(a2,i,a1,i1) i1  
               REQUEST Tau_aa(a2,i,a,i1)  i1  
               GET Daa(a2,a) 
               GET Daa(a2,a1) 

               T1iiaa(i,i1,a,a1) = Tau_aa(a2,i,a1,i1)*Daa(a2,a) 
               T1iiaa(i,i1,a,a1)*= 0.125 
#bgn_debug
#               T1iiaa(i,i1,a,a1) *= 1.0
#end_debug
               Tiiaa(i,i1,a,a1) += T1iiaa(i,i1,a,a1) 

               T1iiaa(i,i1,a,a1) = Tau_aa(a2,i,a,i1)*Daa(a2,a1) 
               T1iiaa(i,i1,a,a1)*= -0.125 
#bgn_debug
#               T1iiaa(i,i1,a,a1) *= 1.0
#end_debug
               Tiiaa(i,i1,a,a1) += T1iiaa(i,i1,a,a1) 
            ENDDO a2 
            PREPARE Dijab_aa(i,i1,a,a1) += Tiiaa(i,i1,a,a1) 
      ENDPARDO a, a1, i, i1 
      
# Final term in Eq. 33 
      CREATE L1aa 
      execute sip_barrier 
#......................................................
      PARDO a1, a2, i   
            GET l1a_old(i,a2) 
            GET t1a_old(a1,i) 
            Taa(a1,a2)  = t1a_old(a1,i)*l1a_old(i,a2) 
            PUT L1aa(a1,a2) += Taa(a1,a2)
      ENDPARDO a1, a2, i  
      CREATE L1ai 
      execute sip_barrier 
#..................
      PARDO a1, a2, i      
            GET t1a_old(a2,i) 
            GET L1aa(a1,a2) 
            Tai(a1,i)  = L1aa(a1,a2)*t1a_old(a2,i) 
            PUT L1ai(a1,i) += Tai(a1,i) 
      ENDPARDO a1, a2, i    
      execute sip_barrier 
      DELETE L1aa 

#bgn_debug
#      sumaa = 0.0
#      do a1
#      do i
#         get L1ai(a1,i)
#         Tai(a1,i) = L1ai(a1,i)
#         tmp = Tai(a1,i)*Tai(a1,i)
#         sumaa += tmp
#       enddo i
#       enddo a1
#       execute print_scalar sumaa
#end_debug

#.............................
      PARDO a, a1, i, i1  
            GET t1a_old(a,i) 
            GET L1ai(a1,i1) 

            Tiiaa(i,i1,a,a1)         = t1a_old(a,i)^L1ai(a1,i1) 
            Tiiaa(i,i1,a,a1)        *= 0.375 
#bgn_debug
#            T1iiaa(i,i1,a,a1) = Tiiaa(i,i1,a,a1)
#            T1iiaa(i,i1,a,a1) *= 1.0
#            PREPARE Dijab_aa(i,i1,a,a1) += T1iiaa(i,i1,a,a1)
#end_debug
#            PREPARE Dijab_aa(i,i1,a,a1) += Tiiaa(i,i1,a,a1) 
 
            T1iiaa(i,i1,a1,a)        = Tiiaa(i,i1,a,a1) 
            T1iiaa(i,i1,a1,a)       *= -1.0  
#bgn_debug
#            T1iiaa(i,i1,a1,a) *= 1.0
#end_debug
            PREPARE Dijab_aa(i,i1,a1,a) += T1iiaa(i,i1,a1,a) 
 
            T1iiaa(i1,i,a,a1)        = Tiiaa(i,i1,a,a1) 
            T1iiaa(i1,i,a,a1)       *= -1.0  
#bgn_debug
#            T1iiaa(i1,i,a,a1) *= 1.0
#end_debug
            PREPARE Dijab_aa(i1,i,a,a1) += T1iiaa(i1,i,a,a1) 
 
            T1iiaa(i1,i,a1,a)        = Tiiaa(i,i1,a,a1) 
#bgn_debug
#            T1iiaa(i1,i,a1,a) *= 1.0
#end_debug
            PREPARE Dijab_aa(i1,i,a1,a) += T1iiaa(i1,i,a1,a) 
      ENDPARDO a, a1, i, i1  
      execute sip_barrier 
      execute server_barrier 
      DELETE L1ai 
#........................................................
# Sixth-term in Eq. 33 
      PARDO i2, a2, a1, i1 
            GET l1a_old(i2,a2) 
            GET t1a_old(a1,i1) 
            Liaai(i2,a2,a1,i1)  = l1a_old(i2,a2)^t1a_old(a1,i1) 
            Liaai(i2,a2,a1,i1) *= 2.0  
#bgn_debug
#            Liaai(i2,a2,a1,i1) *= 1.0
#end_debug

            DO i3 
            DO a3 
               REQUEST T2old_aa(a3,i3,a1,i1) a3  
               REQUEST L2old_aa(i2,a2,i3,a3) a3  
               Tiaai(i2,a2,a1,i1)  = L2old_aa(i2,a2,i3,a3)*T2old_aa(a3,i3,a1,i1) 
               Liaai(i2,a2,a1,i1) += Tiaai(i2,a2,a1,i1)  
            ENDDO a3 
            ENDDO i3 
            DO j 
            DO b 
               REQUEST T2old_ab(a1,i1,b,j) b  
               REQUEST L2old_ab(i2,a2,j,b) b  
               Tiaai(i2,a2,a1,i1)  = L2old_ab(i2,a2,j,b)*T2old_ab(a1,i1,b,j) 
               Liaai(i2,a2,a1,i1) += Tiaai(i2,a2,a1,i1)  
            ENDDO b 
            ENDDO j 
            DO i
               GET t1a_old(a2,i)
               tai(a2,i) = t1a_old(a2,i)
               DO a
                  REQUEST T2old_aa(a,i2,a2,i) i 
                  GET t1a_old(a,i2)
                  Tiaia(i,a,i2,a2)         = t1a_old(a,i2)^tai(a2,i)
                  Tiaia(i,a,i2,a2)        *= 2.0
#bgn_debug
#                  Tiaia(i,a,i2,a2) *= 1.0
#end_debug
                  T1iaia(i,a,i2,a2)        = T2old_aa(a,i2,a2,i)
#bgn_debug
#                  T1iaia(i,a,i2,a2) *=1.0
#end_debug
                  Tiaia(i,a,i2,a2)        += T1iaia(i,a,i2,a2)
#                 Tiiaa(i,i1,a,a1)         = Laiai(a,i2,a2,i)*Liaai(i2,a2,a1,i1)
                  Tiaai(i,a,a1,i1)         = Tiaia(i,a,i2,a2)*Liaai(i2,a2,a1,i1)
                  Tiiaa(i,i1,a,a1)         = Tiaai(i,a,a1,i1)
                  Tiiaa(i,i1,a,a1)        *= -0.0625 #-0.125
#bgn_debug
#                  T1iiaa(i,i1,a,a1) = Tiiaa(i,i1,a,a1)
#                  T1iiaa(i,i1,a,a1) *= 1.0
#                  PREPARE Dijab_aa(i,i1,a,a1) += T1iiaa(i,i1,a,a1)
#end_debug
#                  PREPARE Dijab_aa(i,i1,a,a1) += Tiiaa(i,i1,a,a1)
                  T1iiaa(i,i1,a1,a)        = Tiiaa(i,i1,a,a1)
                  T1iiaa(i,i1,a1,a)       *= -1.0
#bgn_debug
#                  T1iiaa(i,i1,a1,a) *= 1.0
#end_debug
                  PREPARE Dijab_aa(i,i1,a1,a) += T1iiaa(i,i1,a1,a)
                  T1iiaa(i1,i,a,a1)        = Tiiaa(i,i1,a,a1)
                  T1iiaa(i1,i,a,a1)       *= -1.0
#bgn_debug
#                  T1iiaa(i,i1,a1,a) *= 1.0
#end_debug
                  PREPARE Dijab_aa(i1,i,a,a1) += T1iiaa(i1,i,a,a1)

                  T1iiaa(i1,i,a1,a)        = Tiiaa(i,i1,a,a1)
#bgn_debug
#                  T1iiaa(i,i1,a1,a) *= 1.0
#end_debug
                  PREPARE Dijab_aa(i1,i,a1,a) += T1iiaa(i1,i,a1,a)
               ENDDO a
            ENDDO i 
      ENDPARDO i2, a2, a1, i1 
#......................................................
# Odd spin combination 
      PARDO j, b, a1, i1 
            GET l1b_old(j,b) 
            GET t1a_old(a1,i1) 
            Ljbai(j,b,a1,i1)  = l1b_old(j,b)^t1a_old(a1,i1) 
            ljbai(j,b,a1,i1) *= 2.0 
            DO i3 
            DO a3 
               REQUEST T2old_aa(a3,i3,a1,i1) a3   
               REQUEST L2old_ab(i3,a3,j,b)   a3  
               Tjbai(j,b,a1,i1)  = L2old_ab(i3,a3,j,b)*T2old_aa(a3,i3,a1,i1) 
               Ljbai(j,b,a1,i1) += Tjbai(j,b,a1,i1)  
            ENDDO a3 
            ENDDO i3 
            DO j1 
            DO b1 
               REQUEST T2old_ab(a1,i1,b1,j1) b1  
               REQUEST L2old_bb(j1,b1,j,b)   b1  
               Tjbai(j,b,a1,i1)  = L2old_bb(j1,b1,j,b)*T2old_ab(a1,i1,b1,j1) 
               Ljbai(j,b,a1,i1) += Tjbai(j,b,a1,i1)  
            ENDDO b1 
            ENDDO j1 
            DO i 
            DO a 
               REQUEST T2old_ab(a,i,b,j) a  
               Taiai(a1,i1,a,i)         = Ljbai(j,b,a1,i1)*T2old_ab(a,i,b,j)
               Tiiaa(i,i1,a,a1)         = Taiai(a1,i1,a,i)
               Tiiaa(i,i1,a,a1)        *= 0.0625
#bgn_debug
#               T1iiaa(i,i1,a,a1) = Tiiaa(i,i1,a,a1)
#               T1iiaa(i,i1,a,a1) *= 1.0
#               PREPARE Dijab_aa(i,i1,a,a1) += T1iiaa(i,i1,a,a1)
#end_debug
#               PREPARE Dijab_aa(i,i1,a,a1) += Tiiaa(i,i1,a,a1)

               T1iiaa(i,i1,a1,a)        = Tiiaa(i,i1,a,a1) 
               T1iiaa(i,i1,a1,a)       *= -1.0  
#bgn_debug
#               T1iiaa(i,i1,a1,a) *= 1.0
#end_debug
               PREPARE Dijab_aa(i,i1,a1,a) += T1iiaa(i,i1,a1,a) 
 
               T1iiaa(i1,i,a,a1)        = Tiiaa(i,i1,a,a1) 
               T1iiaa(i1,i,a,a1)       *= -1.0  
#bgn_debug
#               T1iiaa(i1,i,a,a1) *= 1.0
#end_debug
               PREPARE Dijab_aa(i1,i,a,a1) += T1iiaa(i1,i,a,a1) 
 
               T1iiaa(i1,i,a1,a)        = Tiiaa(i,i1,a,a1) 
#bgn_debug
#               T1iiaa(i1,i,a1,a) *= 1.0
#end_debug
               PREPARE Dijab_aa(i1,i,a1,a) += T1iiaa(i1,i,a1,a) 
            ENDDO a 
            ENDDO i 
      ENDPARDO j, b, a1, i1 
      execute server_barrier 
#.................................................................
# Multiply by 4 to match aces 
# --------------------------- 
#
#     PARDO a, a1, i, i1 
#
#           GET Dijab_aa(i,i1,a,a1) 
#           Tiiaa(i,i1,a,a1) = 4.0*Dijab_aa(i,i1,a,a1)
#           PUT Dijab_aa(i,i1,a,a1) = Tiiaa(i,i1,a,a1) 
#
#     ENDPARDO a, a1, i, i1 
#     execute sip_barrier 
#
# Backtransform to the AO basis 
#.......................................... ......................... 


      PARDO sigma, a, i, i1 
            Tiiax(i,i1,a,sigma) = 0.0  
            DO a1 
               REQUEST Dijab_aa(i,i1,a,a1) a1  
               T1iiax(i,i1,a,sigma) = Dijab_aa(i,i1,a,a1)*ca(sigma,a1) 
               Tiiax(i,i1,a,sigma) += T1iiax(i,i1,a,sigma)  
            ENDDO a1  
            PREPARE Diiax(i,i1,a,sigma) = Tiiax(i,i1,a,sigma) 
      ENDPARDO sigma, a, i, i1 
      execute server_barrier 
      PARDO lambda, sigma, i, i1 
            Tiixx(i,i1,lambda,sigma) = 0.0  
            DO a  
               REQUEST Diiax(i,i1,a,sigma) a  
               T1iixx(i,i1,lambda,sigma) = Diiax(i,i1,a,sigma)*ca(lambda,a) 
               Tiixx(i,i1,lambda,sigma)  += T1iixx(i,i1,lambda,sigma)  
            ENDDO a 
            Tiixx(i,i1,lambda,sigma)         *= 4.0  
            PREPARE Diixx(i,i1,lambda,sigma) += Tiixx(i,i1,lambda,sigma) 
      ENDPARDO lambda, sigma, i, i1 
      execute server_barrier 
# Done backtransformation 
      
      ENDPROC DIJABAA 
#_____________________________________________________________________________
# In this PROCEDURE the D^{ij}_{ab} clock of the two-particle 
# density matrix is formed.  
# --------------------------------------------------------------------------- 
# First form one-particle intermediates 
# --------------------------------------------------------------------------- 
# Dim(i,m) = Gmi_a(i,m) + l1a_old(m,e)*t1a_old(e,i)  
# Dea(e,a) = Gae_a(e,a) - l1a_old(m,e)*t1a_old(a,m) 
# --------------------------------------------------------------------------- 

      PROC DIJABAB 
# Terms 1-5 in Eq. 33 
      PARDO a, b, i, j 
            REQUEST Tau_ab(a,i,b,j)   j  
            REQUEST L2old_ab(i,a,j,b) j  

            Tijab(i,j,a,b)  = Tau_ab(a,i,b,j) 
            T1ijab(i,j,a,b) = L2old_ab(i,a,j,b) 
            Tijab(i,j,a,b) += T1ijab(i,j,a,b)  
            Tijab(i,j,a,b) *= 0.125  
#bgn_debug
#            Tijab(i,j,a,b) *= 1.0
#end_debug
            DO i1 
               REQUEST Tau_ab(a,i1,b,j) i1  
               GET Dii(i,i1) 

               T1ijab(i,j,a,b) = Tau_ab(a,i1,b,j)*Dii(i,i1) 
               T1ijab(i,j,a,b)*= -0.125 
#bgn_debug
#               T1ijab(i,j,a,b) *= 1.0
#end_debug
               Tijab(i,j,a,b) += T1ijab(i,j,a,b) 
               DO j1 
                  REQUEST Tau_ab(a,i1,b,j1)     j1 
                  REQUEST Vijmn_abab(i,j,i1,j1) j1 
                  T2ijab(i1,j1,a,b)= Tau_ab(a,i1,b,j1)

                  T1ijab(i,j,a,b)  = Vijmn_abab(i,j,i1,j1)*T2ijab(i1,j1,a,b)
                  T1ijab(i,j,a,b) *= 0.125
#bgn_debug
#                  T1ijab(i,j,a,b) *= 1.0
#end_debug
                  Tijab(i,j,a,b)  += T1ijab(i,j,a,b)
               ENDDO j1 
            ENDDO i1 
            DO j1 
               REQUEST Tau_ab(a,i,b,j1) j1  
               GET Djj(j,j1) 

               T1ijab(i,j,a,b) = Tau_ab(a,i,b,j1)*Djj(j,j1) 
               T1ijab(i,j,a,b)*= -0.125 
#bgn_debug
#               T1ijab(i,j,a,b) *= 1.0
#end_debug
               Tijab(i,j,a,b) += T1ijab(i,j,a,b) 
            ENDDO j1 
            DO a1 
               REQUEST Tau_ab(a1,i,b,j) a1  
               GET Daa(a1,a) 

               T1ijab(i,j,a,b) = Tau_ab(a1,i,b,j)*Daa(a1,a) 
               T1ijab(i,j,a,b)*= 0.125 
#bgn_debug
#               T1ijab(i,j,a,b) *= 1.0
#end_debug
               Tijab(i,j,a,b) += T1ijab(i,j,a,b) 
            ENDDO a1 
            DO b1 
               REQUEST Tau_ab(a,i,b1,j) b1  
               GET Dbb(b1,b) 

               T1ijab(i,j,a,b) = Tau_ab(a,i,b1,j)*Dbb(b1,b) 
               T1ijab(i,j,a,b)*= 0.125 
#bgn_debug
#               T1ijab(i,j,a,b) *= 1.0
#end_debug
               Tijab(i,j,a,b) += T1ijab(i,j,a,b) 
            ENDDO b1 
            PREPARE Dijab_ab(i,j,a,b) += Tijab(i,j,a,b) 
      ENDPARDO a, b, i, j 
# Final term in Eq. 33 
#........................................................
      PARDO a, b 
            allocate Lbb(b,*) 
            DO j 
            DO b1 
               GET l1b_old(j,b1) 
               GET t1b_old(b,j) 
               Tbb(b,b1)  = t1b_old(b,j)*l1b_old(j,b1) 
               Lbb(b,b1) += Tbb(b,b1)
            ENDDO b1 
            ENDDO j 
            allocate Lbj(b,*) 
            DO b1 
            DO j 
               GET t1b_old(b1,j) 
               Tbj(b,j)  = Lbb(b,b1)*t1b_old(b1,j) 
               Lbj(b,j) += Tbj(b,j) 
            ENDDO j 
            ENDDO b1 
            deallocate Lbb(b,*) 
            DO i 
               GET t1a_old(a,i) 
               DO j 
                  Tijab(i,j,a,b)  = t1a_old(a,i)^Lbj(b,j) 
                  Tijab(i,j,a,b) *= 0.375  
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab(i,j,a,b) += Tijab(i,j,a,b) 
               ENDDO j 
            ENDDO i 
            deallocate Lbj(b,*) 
      ENDPARDO a, b 
      PARDO a, b 
            allocate Laa(a,*) 
            DO i 
               GET t1a_old(a,i) 
               DO a1 
                  GET l1a_old(i,a1) 
                  Taa(a,a1)  = t1a_old(a,i)*l1a_old(i,a1) 
                  Laa(a,a1) += Taa(a,a1)
               ENDDO a1 
            ENDDO i 
            allocate Lai(a,*) 
            DO a1 
            DO i 
               GET t1a_old(a1,i) 
               Tai(a,i)  = Laa(a,a1)*t1a_old(a1,i) 
               Lai(a,i) += Tai(a,i) 
            ENDDO i 
            ENDDO a1 
            deallocate Laa(a,*) 
            DO j 
               GET t1b_old(b,j) 
               DO i 
                  Tijab(i,j,a,b)  = t1b_old(b,j)^Lai(a,i) 
                  Tijab(i,j,a,b) *= 0.375  
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab(i,j,a,b) += Tijab(i,j,a,b) 
               ENDDO i 
            ENDDO j 
            deallocate Lai(a,*) 
      ENDPARDO a, b 
# Sixth-term in Eq. 33 
      PARDO i1, a1, b, j
            GET l1a_old(i1,a1)
            GET t1b_old(b,j)
            Liabj(i1,a1,b,j)  = l1a_old(i1,a1)^t1b_old(b,j)
            Liabj(i1,a1,b,j) *= 2.0  
            DO j1 
            DO b1  
               REQUEST T2old_bb(b,j,b1,j1)   b1  
               REQUEST L2old_ab(i1,a1,j1,b1) b1 
               Tiabj(i1,a1,b,j)  = L2old_ab(i1,a1,j1,b1)*T2old_bb(b,j,b1,j1)
               Liabj(i1,a1,b,j) += Tiabj(i1,a1,b,j)
            ENDDO b1  
            ENDDO j1 
            DO i 
            DO a  
               REQUEST T2old_ab(a,i,b,j)   a  
               REQUEST L2old_aa(i1,a1,i,a) a 
               Tiabj(i1,a1,b,j)  = L2old_aa(i1,a1,i,a)*T2old_ab(a,i,b,j)
               Liabj(i1,a1,b,j) += Tiabj(i1,a1,b,j)
            ENDDO a  
            ENDDO i 
            DO i 
               GET t1a_old(a1,i) 
               DO a 
                  REQUEST T2old_aa(a,i1,a1,i) a 
                  GET t1a_old(a,i1)

                  tai(a1,i)              = t1a_old(a1,i)
                  Tiaia(i,a,i1,a1)       = t1a_old(a,i1)^tai(a1,i)
                  Tiaia(i,a,i1,a1)      *= 2.0
#bgn_debug
#                  Tiaia(i,a,i1,a1) *= 1.0
#end_debug
                  T1iaia(i,a,i1,a1)      = T2old_aa(a,i1,a1,i)
#bgn_debug
#                  T1iaia(i,a,i1,a1) *= 1.0
#end_debug
                  Tiaia(i,a,i1,a1)      += T1iaia(i,a,i1,a1)

                  Tiabj(i,a,b,j)         = Tiaia(i,a,i1,a1)*Liabj(i1,a1,b,j)
                  Tijab(i,j,a,b)         = Tiabj(i,a,b,j)
                  Tijab(i,j,a,b)        *= -0.0625
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab(i,j,a,b) += Tijab(i,j,a,b)
               ENDDO a 
            ENDDO i 
      ENDPARDO i1, a1, b, j 
#............................................
      PARDO j2, b2, b, j
            GET l1b_old(j2,b2)
            GET t1b_old(b,j)
            Ljbbj(j2,b2,b,j)  = l1b_old(j2,b2)^t1b_old(b,j)
            Ljbbj(j2,b2,b,j) *= 2.0  

            DO j1 
            DO b1  
               REQUEST T2old_bb(b,j,b1,j1)   b1  
               REQUEST L2old_bb(j2,b2,j1,b1) b1 
               Tjbbj(j2,b2,b,j)  = L2old_bb(j2,b2,j1,b1)*T2old_bb(b,j,b1,j1)
               Ljbbj(j2,b2,b,j) += Tjbbj(j2,b2,b,j)
            ENDDO b1  
            ENDDO j1 
            DO i 
            DO a  
               REQUEST T2old_ab(a,i,b,j)   a  
               REQUEST L2old_ab(i,a,j2,b2) a 
               Tjbbj(j2,b2,b,j)  = L2old_ab(i,a,j2,b2)*T2old_ab(a,i,b,j)
               Ljbbj(j2,b2,b,j) += Tjbbj(j2,b2,b,j)
            ENDDO a  
            ENDDO i 
            Tbjbj(b2,j2,b,j) = Ljbbj(j2,b2,b,j)
            DO i 
            DO a 
               REQUEST T2old_ab(a,i,b2,j2) a 
               Taibj(a,i,b,j)         = T2old_ab(a,i,b2,j2)*Tbjbj(b2,j2,b,j)
               Tijab(i,j,a,b)         = Taibj(a,i,b,j)
               Tijab(i,j,a,b)        *= 0.0625 #-0.125
#bgn_debug
#               Tijab(i,j,a,b) *= 1.0
#end_debug
               PREPARE Dijab_ab(i,j,a,b) += Tijab(i,j,a,b)
            ENDDO a 
            ENDDO i 
      ENDPARDO j2, b2, b, j 
#...........................................
      PARDO j1, b1, a, i
            GET l1b_old(j1,b1)
            GET t1a_old(a,i)
            Ljbai(j1,b1,a,i)  = l1b_old(j1,b1)^t1a_old(a,i)
            Ljbai(j1,b1,a,i) *= 2.0  
            DO i1 
            DO a1  
               REQUEST T2old_aa(a,i,a1,i1)   a1  
               REQUEST L2old_ab(i1,a1,j1,b1) a1 
               Tjbai(j1,b1,a,i)  = L2old_ab(i1,a1,j1,b1)*T2old_aa(a,i,a1,i1)
               Ljbai(j1,b1,a,i) += Tjbai(j1,b1,a,i)
            ENDDO a1  
            ENDDO i1 
            DO j 
            DO b  
               REQUEST T2old_ab(a,i,b,j)   b  
               REQUEST L2old_bb(j,b,j1,b1) b 
               Tjbai(j1,b1,a,i)  = L2old_bb(j,b,j1,b1)*T2old_ab(a,i,b,j)
               Ljbai(j1,b1,a,i) += Tjbai(j1,b1,a,i)
            ENDDO b  
            ENDDO j 
            DO j 
               GET t1b_old(b1,j) 
               tbj(b1,j) = t1b_old(b1,j) 
               DO b 
                  REQUEST T2old_bb(b,j1,b1,j) j 
                  GET t1b_old(b,j1)

                  Tjbjb(j,b,j1,b1)       = t1b_old(b,j1)^tbj(b1,j)
                  Tjbjb(j,b,j1,b1)      *= 2.0
#bgn_debug
#                  Tjbjb(j,b,j1,b1) *= 1.0
#end_debug
                  T1jbjb(j,b,j1,b1)      = T2old_bb(b,j1,b1,j)
#bgn_debug
#                  T1jbjb(j,b,j1,b1) *= 1.0
#end_debug
                  Tjbjb(j,b,j1,b1)      += T1jbjb(j,b,j1,b1)
#                 Tijab(i,j,a,b)         = Lbjbj(b,j1,b1,j)*Ljbai(j1,b1,a,i)
                  Tjbai(j,b,a,i)         = Tjbjb(j,b,j1,b1)*Ljbai(j1,b1,a,i)
                  Tijab(i,j,a,b)         = Tjbai(j,b,a,i)
                  Tijab(i,j,a,b)        *= -0.0625 #-0.125
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab(i,j,a,b) += Tijab(i,j,a,b)
               ENDDO b 
            ENDDO j 
      ENDPARDO j1, b1, a, i 
#......................................................
      PARDO i2, a2, a, i
            GET l1a_old(i2,a2)
            GET t1a_old(a,i)
            Liaai(i2,a2,a,i)  = l1a_old(i2,a2)^t1a_old(a,i)
            Liaai(i2,a2,a,i) *= 2.0  
            DO i1 
            DO a1  
               REQUEST T2old_aa(a,i,a1,i1)   a1  
               REQUEST L2old_aa(i2,a2,i1,a1) a1 
               Tiaai(i2,a2,a,i)  = L2old_aa(i2,a2,i1,a1)*T2old_aa(a,i,a1,i1)
               Liaai(i2,a2,a,i) += Tiaai(i2,a2,a,i)
            ENDDO a1  
            ENDDO i1 
            DO j 
            DO b  
               REQUEST T2old_ab(a,i,b,j)   b  
               REQUEST L2old_ab(i2,a2,j,b) b 
               Tiaai(i2,a2,a,i)  = L2old_ab(i2,a2,j,b)*T2old_ab(a,i,b,j)
               Liaai(i2,a2,a,i) += Tiaai(i2,a2,a,i)
            ENDDO b  
            ENDDO j 
            Taiai(a,i,a2,i2) = Liaai(i2,a2,a,i)
            DO j 
            DO b 
               REQUEST T2old_ab(a2,i2,b,j) b 
#              Tijab(i,j,a,b)      = T2old_ab(a2,i2,b,j)*Liaai(i2,a2,a,i)
               Taibj(a,i,b,j)      = Taiai(a,i,a2,i2)*T2old_ab(a2,i2,b,j)
               Tijab(i,j,a,b)      = Taibj(a,i,b,j)
               Tijab(i,j,a,b)     *= 0.0625 #-0.125
#bgn_debug
#               Tijab(i,j,a,b) *= 1.0
#end_debug
               PREPARE Dijab_ab(i,j,a,b) += Tijab(i,j,a,b)
            ENDDO b 
            ENDDO j 
      ENDPARDO i2, a2, a, i 
#.......................................................
      PARDO b, b1, i1, i 
            Tbibi(b,i,b1,i1) = 0.0
            DO j
            DO a
               REQUEST T2old_ab(a,i,b,j)   a 
               REQUEST L2old_ab(i1,a,j,b1) a 
#              Tbibi(b,i1,b1,i)  = T2old_ab(a,i,b,j)*L2old_ab(i1,a,j,b1)
               Tbiaj(b,i,a,j)    = T2old_ab(a,i,b,j)
               Tajbi(a,j,b1,i1)  = L2old_ab(i1,a,j,b1)
               T1bibi(b,i,b1,i1) = Tbiaj(b,i,a,j)*Tajbi(a,j,b1,i1)
               Tbibi(b,i,b1,i1) += T1bibi(b,i,b1,i1)
            ENDDO a
            ENDDO j 
            Lbibi(b,i1,b1,i) = Tbibi(b,i,b1,i1)   
            DO a 
               GET t1a_old(a,i1) 
               DO j 
                  REQUEST T2old_ab(a,i1,b1,j) j  
                  GET t1b_old(b1,j) 

                  Taibj(a,i1,b1,j)      = t1a_old(a,i1)^t1b_old(b1,j) 
                  Taibj(a,i1,b1,j)      *= 2.0  
#bgn_debug
#                  Taibj(a,i1,b1,j) *= 1.0
#                  Taibj(a,i1,b1,j)      += T2old_ab(a,i1,b1,j) 
#end_debug
                  Taibj(a,i1,b1,j)      += T2old_ab(a,i1,b1,j) 

                  Tijab(i,j,a,b)         = Taibj(a,i1,b1,j)*Lbibi(b,i1,b1,i) 
                  Tijab(i,j,a,b)        *= 0.0625 #-0.125  
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab(i,j,a,b) += Tijab(i,j,a,b) 
               ENDDO j 
            ENDDO a 
      ENDPARDO b, b1, i1, i 
#.......................................
      PARDO a, a1, j1, j 
            Lajaj(a,j1,a1,j) = 0.0  
            DO i 
            DO b 
               REQUEST T2old_ab(a,i,b,j)   b  
               REQUEST L2old_ab(i,a1,j1,b) b  

               Tajaj(a,j1,a1,j)  = T2old_ab(a,i,b,j)*L2old_ab(i,a1,j1,b) 
               Lajaj(a,j1,a1,j) += Tajaj(a,j1,a1,j) 
            ENDDO b 
            ENDDO i 
            DO b 
               GET t1b_old(b,j1) 
               DO i 
                  REQUEST T2old_ab(a1,i,b,j1) i  
                  GET t1a_old(a1,i) 

                  Taibj(a1,i,b,j1)       = t1a_old(a1,i)^t1b_old(b,j1) 
                  Taibj(a1,i,b,j1)      *= 2.0  
#bgn_debug
#                  Taibj(a1,i,b,j1) *= 1.0
#                  Taibj(a1,i,b,j1)      += T2old_ab(a1,i,b,j1) 
#end_debug
                  Taibj(a1,i,b,j1)      += T2old_ab(a1,i,b,j1) 
                  Tijab(i,j,a,b)         = Taibj(a1,i,b,j1)*Lajaj(a,j1,a1,j) 
                  Tijab(i,j,a,b)        *= 0.0625 #-0.125  
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab(i,j,a,b) += Tijab(i,j,a,b) 
               ENDDO i 
            ENDDO b 
      ENDPARDO a, a1, j1, j 
#................................................................
      execute server_barrier 
# Multiply by 4 to match aces 
#     PARDO b, a, j, i 
#           GET Dijab_ab(i,j,a,b) 
#           Tijab(i,j,a,b) = 4.0*Dijab_ab(i,j,a,b)
#           PUT Dijab_ab(i,j,a,b) = Tijab(i,j,a,b) 
#     ENDPARDO b, a, j, i 
# Backtransform to the AO basis 
      PARDO a, sigma, i, j1 
            Tijax(i,j1,a,sigma) = 0.0  
            DO b1  
               REQUEST Dijab_ab(i,j1,a,b1) b1  
               T1ijax(i,j1,a,sigma) = Dijab_ab(i,j1,a,b1)*cb(sigma,b1) 
               Tijax(i,j1,a,sigma) += T1ijax(i,j1,a,sigma)  
            ENDDO b1  
            PREPARE Dijax(i,j1,a,sigma) = Tijax(i,j1,a,sigma) 
      ENDPARDO a, sigma, i, j1 
      execute server_barrier 
      PARDO lambda, sigma, i, j1 
            Tijxx(i,j1,lambda,sigma) = 0.0  
            DO a  
               REQUEST Dijax(i,j1,a,sigma) a  
               T1ijxx(i,j1,lambda,sigma)  = Dijax(i,j1,a,sigma)*ca(lambda,a) 
               Tijxx(i,j1,lambda,sigma)  += T1ijxx(i,j1,lambda,sigma)  
            ENDDO a 
            Tijxx(i,j1,lambda,sigma)         *= 8.0  
            PREPARE Dijxx(i,j1,lambda,sigma) += Tijxx(i,j1,lambda,sigma) 
      ENDPARDO lambda, sigma, i, j1 
      execute server_barrier 
# Done backtransformation 
      ENDPROC DIJABAB 
#_____________________________________________________________________________
# In this PROCEDURE the D^{ij}_{ab} block of the two-particle 
# density matrix is formed. Only the BB spin case is considered.  
# First form one-particle intermediates 
#
# Dim(i,m) = Gmi_b(i,m) + l1b_old(m,e)*t1b_old(e,i)  
# Dea(e,a) = Gae_b(e,a) - l1b_old(m,e)*t1b_old(a,m) 
# --------------------------------------------------------------------------- 

      PROC DIJABBB 
# Djj 
      PARDO j, j1 
            GET Gmi_b(j,j1) 
            PUT Djj(j,j1) += Gmi_b(j,j1) 
      ENDPARDO j, j1 
      PARDO j, j1, b       
            GET l1b_old(j1,b) 
            GET t1b_old(b,j) 
            Tjj(j,j1)      = l1b_old(j1,b)*t1b_old(b,j)  
            PUT Djj(j,j1) += Tjj(j,j1) 
      ENDPARDO j, j1, b       
#.................
# Dbb 
      PARDO b1, b 
            GET Gae_b(b1,b) 
            PUT Dbb(b1,b) += Gae_b(b1,b) 
      ENDPARDO b1, b 
      PARDO b1, b, j 
            GET l1b_old(j,b1) 
            GET t1b_old(b,j) 
            Tbb(b1,b)      = t1b_old(b,j)*l1b_old(j,b1) 
            Tbb(b1,b)     *= -1.0  
            PUT Dbb(b1,b) += Tbb(b1,b) 
      ENDPARDO b1, b, j  
      execute sip_barrier ca  
# Done one-particle intermediates 
# Terms 1-5 in Eq. 33 
      PARDO b, b1, j, j1 
            REQUEST Tau_bb(b,j,b1,j1)   b  
            REQUEST L2old_bb(j,b,j1,b1) b  

            Tjjbb(j,j1,b,b1)  = Tau_bb(b,j,b1,j1) 
            T1jjbb(j,j1,b,b1) = L2old_bb(j,b,j1,b1) 
            Tjjbb(j,j1,b,b1) += T1jjbb(j,j1,b,b1)  
            Tjjbb(j,j1,b,b1) *= 0.125  
            DO j2  
               REQUEST Tau_bb(b,j2,b1,j1) j2  
               GET Djj(j,j2) 

               T1jjbb(j,j1,b,b1) = Tau_bb(b,j2,b1,j1)*Djj(j,j2) 
               T1jjbb(j,j1,b,b1)*= -0.125 
               Tjjbb(j,j1,b,b1) += T1jjbb(j,j1,b,b1) 
               DO j3 
                  REQUEST Tau_bb(b,j2,b1,j3)     j3 
                  REQUEST Vijmn_bbbb(j,j1,j2,j3) j3 
                  T2jjbb(j2,j3,b,b1) = Tau_bb(b,j2,b1,j3)

                  T1jjbb(j,j1,b,b1)  = Vijmn_bbbb(j,j1,j2,j3)*T2jjbb(j2,j3,b,b1)
                  T1jjbb(j,j1,b,b1) *= 0.0625
                  Tjjbb(j,j1,b,b1)  += T1jjbb(j,j1,b,b1)
               ENDDO j3 
            ENDDO j2 
            DO j2 
               REQUEST Tau_bb(b,j2,b1,j) j2  
               GET Djj(j1,j2) 

               T1jjbb(j,j1,b,b1) = Tau_bb(b,j2,b1,j)*Djj(j1,j2) 
               T1jjbb(j,j1,b,b1)*= 0.125 
               Tjjbb(j,j1,b,b1) += T1jjbb(j,j1,b,b1) 
            ENDDO j2 
            DO b2 
               REQUEST Tau_bb(b2,j,b1,j1) b2  
               GET Dbb(b2,b) 

               T1jjbb(j,j1,b,b1) = Tau_bb(b2,j,b1,j1)*Dbb(b2,b) 
               T1jjbb(j,j1,b,b1)*= 0.125 
               Tjjbb(j,j1,b,b1) += T1jjbb(j,j1,b,b1) 
            ENDDO b2 
            DO b2 
               REQUEST Tau_bb(b2,j,b,j1) b2  
               GET Dbb(b2,b1) 

               T1jjbb(j,j1,b,b1) = Tau_bb(b2,j,b,j1)*Dbb(b2,b1) 
               T1jjbb(j,j1,b,b1)*= -0.125 
               Tjjbb(j,j1,b,b1) += T1jjbb(j,j1,b,b1) 
            ENDDO b2 
            PREPARE Dijab_bb(j,j1,b,b1) += Tjjbb(j,j1,b,b1) 
      ENDPARDO b, b1, j, j1 
# Final term in Eq. 33 
      PARDO b, b1 
            allocate L1bb(b1,*) 
            DO j 
            DO b2 
               GET l1b_old(j,b2) 
               GET t1b_old(b1,j) 
               Tbb(b1,b2)   = t1b_old(b1,j)*l1b_old(j,b2) 
               L1bb(b1,b2) += Tbb(b1,b2)
            ENDDO b2 
            ENDDO j 
            allocate L1bj(b1,*) 
            DO j 
            DO b2 
               GET t1b_old(b2,j) 
               Tbj(b1,j)   = L1bb(b1,b2)*t1b_old(b2,j) 
               L1bj(b1,j) += Tbj(b1,j) 
            ENDDO b2 
            ENDDO j 
            deallocate L1bb(b1,*) 
            DO j 
               GET t1b_old(b,j) 
               DO j1 
                  Tjjbb(j,j1,b,b1)         = t1b_old(b,j)^L1bj(b1,j1) 
                  Tjjbb(j,j1,b,b1)        *= 0.375 
                  PREPARE Dijab_bb(j,j1,b,b1) += Tjjbb(j,j1,b,b1) 
 
                  T1jjbb(j,j1,b1,b)        = Tjjbb(j,j1,b,b1) 
                  T1jjbb(j,j1,b1,b)       *= -1.0  
                  PREPARE Dijab_bb(j,j1,b1,b) += T1jjbb(j,j1,b1,b) 
 
                  T1jjbb(j1,j,b,b1)        = Tjjbb(j,j1,b,b1) 
                  T1jjbb(j1,j,b,b1)       *= -1.0  
                  PREPARE Dijab_bb(j1,j,b,b1) += T1jjbb(j1,j,b,b1) 
 
                  T1jjbb(j1,j,b1,b)        = Tjjbb(j,j1,b,b1) 
                  PREPARE Dijab_bb(j1,j,b1,b) += T1jjbb(j1,j,b1,b) 
               ENDDO j1 
            ENDDO j 
            deallocate L1bj(b1,*) 
      ENDPARDO b, b1 
# Sixth-term in Eq. 33 
      PARDO j2, b2, b1, j1 
            GET l1b_old(j2,b2) 
            GET t1b_old(b1,j1) 
            Ljbbj(j2,b2,b1,j1)  = l1b_old(j2,b2)^t1b_old(b1,j1) 
            Ljbbj(j2,b2,b1,j1) *= 2.0  

            DO j3 
            DO b3 
               REQUEST T2old_bb(b3,j3,b1,j1) b3  
               REQUEST L2old_bb(j2,b2,j3,b3) b3  
               Tjbbj(j2,b2,b1,j1)  = L2old_bb(j2,b2,j3,b3)*T2old_bb(b3,j3,b1,j1) 
               Ljbbj(j2,b2,b1,j1) += Tjbbj(j2,b2,b1,j1)  
            ENDDO b3 
            ENDDO j3 
            DO i 
            DO a 
               REQUEST T2old_ab(a,i,b1,j1) a  
               REQUEST L2old_ab(i,a,j2,b2) a  
               Tjbbj(j2,b2,b1,j1)  = L2old_ab(i,a,j2,b2)*T2old_ab(a,i,b1,j1)  
               Ljbbj(j2,b2,b1,j1) += Tjbbj(j2,b2,b1,j1)  
            ENDDO a 
            ENDDO i 
            DO j 
               GET t1b_old(b2,j) 
               tbj(b2,j) = t1b_old(b2,j) 
               DO b 
                  REQUEST T2old_bb(b,j2,b2,j) b 
                  GET t1b_old(b,j2)

                  Tjbjb(j,b,j2,b2)         = t1b_old(b,j2)^tbj(b2,j)
                  Tjbjb(j,b,j2,b2)        *= 2.0
                  T1jbjb(j,b,j2,b2)        = T2old_bb(b,j2,b2,j)
                  Tjbjb(j,b,j2,b2)        += T1jbjb(j,b,j2,b2)

                  Tjbbj(j,b,b1,j1)         = Tjbjb(j,b,j2,b2)*Ljbbj(j2,b2,b1,j1)
                  Tjjbb(j,j1,b,b1)         = Tjbbj(j,b,b1,j1)

                  Tjjbb(j,j1,b,b1)        *= -0.0625
                  PREPARE Dijab_bb(j,j1,b,b1) += Tjjbb(j,j1,b,b1)

                  T1jjbb(j,j1,b1,b)        = Tjjbb(j,j1,b,b1)
                  T1jjbb(j,j1,b1,b)       *= -1.0
                  PREPARE Dijab_bb(j,j1,b1,b) += T1jjbb(j,j1,b1,b)

                  T1jjbb(j1,j,b,b1)        = Tjjbb(j,j1,b,b1)
                  T1jjbb(j1,j,b,b1)       *= -1.0
                  PREPARE Dijab_bb(j1,j,b,b1) += T1jjbb(j1,j,b,b1)

                  T1jjbb(j1,j,b1,b)        = Tjjbb(j,j1,b,b1)
                  PREPARE Dijab_bb(j1,j,b1,b) += T1jjbb(j1,j,b1,b)
               ENDDO b 
            ENDDO j 
      ENDPARDO j2, b2, b1, j1 
# Odd spin combination
      PARDO i, a, b1, j1
            GET l1a_old(i,a)
            GET t1b_old(b1,j1)
            Liabj(i,a,b1,j1)  = l1a_old(i,a)^t1b_old(b1,j1)
            Liabj(i,a,b1,j1) *= 2.0  
            DO j3
            DO b3
               REQUEST T2old_bb(b3,j3,b1,j1) b3 
               REQUEST L2old_ab(i,a,j3,b3)   b3 
               Tiabj(i,a,b1,j1)  = L2old_ab(i,a,j3,b3)*T2old_bb(b3,j3,b1,j1)
               Liabj(i,a,b1,j1) += Tiabj(i,a,b1,j1)
            ENDDO b3
            ENDDO j3
            DO i1
            DO a1
               REQUEST T2old_ab(a1,i1,b1,j1) a1 
               REQUEST L2old_aa(i1,a1,i,a)   a1 
               Tiabj(i,a,b1,j1)  = L2old_aa(i1,a1,i,a)*T2old_ab(a1,i1,b1,j1)
               Liabj(i,a,b1,j1) += Tiabj(i,a,b1,j1)
            ENDDO a1
            ENDDO i1
            Tbjai(b1,j1,a,i) = Liabj(i,a,b1,j1)
            DO j
            DO b
               REQUEST T2old_ab(a,i,b,j) b 

               Tbjbj(b1,j1,b,j)      = Tbjai(b1,j1,a,i)*T2old_ab(a,i,b,j)
               Tjjbb(j,j1,b,b1)      = Tbjbj(b1,j1,b,j)

               Tjjbb(j,j1,b,b1)     *= 0.0625
               PREPARE Dijab_bb(j,j1,b,b1) += Tjjbb(j,j1,b,b1)

               T1jjbb(j,j1,b1,b)     = Tjjbb(j,j1,b,b1)
               T1jjbb(j,j1,b1,b)    *= -1.0
               PREPARE Dijab_bb(j,j1,b1,b) += T1jjbb(j,j1,b1,b)

               T1jjbb(j1,j,b,b1)     = Tjjbb(j,j1,b,b1)
               T1jjbb(j1,j,b,b1)    *= -1.0
               PREPARE Dijab_bb(j1,j,b,b1) += T1jjbb(j1,j,b,b1)

               T1jjbb(j1,j,b1,b)     = Tjjbb(j,j1,b,b1)
               PREPARE Dijab_bb(j1,j,b1,b) += T1jjbb(j1,j,b1,b)
            ENDDO b
            ENDDO j
      ENDPARDO i, a, b1, j1
      execute server_barrier 
# Multiply by 4 to match aces 
#     PARDO b, b1, j, j1 
#           GET Dijab_bb(j,j1,b,b1) 
#           Tjjbb(j,j1,b,b1) = 4.0*Dijab_bb(j,j1,b,b1)
#           PUT Dijab_bb(j,j1,b,b1) = Tjjbb(j,j1,b,b1) 
#     ENDPARDO b, b1, j, j1 
# Backtransform to the AO basis 
      PARDO b, sigma, j, j1 
            Tjjbx(j,j1,b,sigma) = 0.0  
            DO b1 
               REQUEST Dijab_bb(j,j1,b,b1) b1  
               T1jjbx(j,j1,b,sigma) = Dijab_bb(j,j1,b,b1)*cb(sigma,b1) 
               Tjjbx(j,j1,b,sigma) += T1jjbx(j,j1,b,sigma)  
            ENDDO b1 
            PREPARE Djjbx(j,j1,b,sigma) = Tjjbx(j,j1,b,sigma) 
      ENDPARDO b, sigma, j, j1 
      execute server_barrier 
      PARDO lambda, sigma, j, j1 
            Tjjxx(j,j1,lambda,sigma) = 0.0  
            DO b  
               REQUEST Djjbx(j,j1,b,sigma) b  
               T1jjxx(j,j1,lambda,sigma)  = Djjbx(j,j1,b,sigma)*cb(lambda,b) 
               Tjjxx(j,j1,lambda,sigma)  += T1jjxx(j,j1,lambda,sigma)    
            ENDDO b 
            Tjjxx(j,j1,lambda,sigma)         *= 4.0  
            PREPARE Djjxx(j,j1,lambda,sigma) += Tjjxx(j,j1,lambda,sigma) 
      ENDPARDO lambda, sigma, j, j1 
      execute server_barrier 
# Done backtransformation 
      ENDPROC DIJABBB 
#     ---------------
#--------------------------------------------------------------------
#bgn_debug
#      PROC DIJABAA_TEST_X
#     -------------------
#      PARDO i1,i,a1,a
#            T1iiaa(i1,i,a1,a) = 0.0
#            T1aaii(a1,a,i,i1) = 0.0
#            PREPARE Dijab_aa_x(i1,i,a1,a) = T1iiaa(i1,i,a1,a)
#      ENDPARDO i1,i,a1,a
#      execute server_barrier 
#
#      PARDO a, a1, i, i1
#
#            REQUEST L2old_aa_x(i,a,i1,a1) i1          
#            T1aaii(a,a1,i,i1)  = L2old_aa_x(i,a,i1,a1)  
#            Taaii(a,a1,i,i1)   = T1aaii(a,a1,i,i1)
#            Taaii(a,a1,i,i1)  *= 0.125
#
#            REQUEST Tau_aa_x(a,i,a1,i1) i1
#            Tiiaa(i,i1,a,a1)  = Tau_aa_x(a,i,a1,i1)
#            Tiiaa(i,i1,a,a1) *= 0.125
#
#            T1AHiiaa(i,i1,a,a1)  = Taaii(a,a1,i,i1)
#            T1AHiiaa(i,i1,a,a1) *= Fact
#            Tiiaa(i,i1,a,a1)    += T1AHiiaa(i,i1,a,a1)
#
#            PREPARE Dijab_aa_x(i,i1,a,a1) += Tiiaa(i,i1,a,a1)
#
#      ENDPARDO  a, a1, i, i1
#      execute server_barrier 
#      ENDPROC DIJABAA_TEST_X
#     ----------------------
#end_debug

      PROC DIJABAA_X
#     --------------
      PARDO i1,i,a1,a
            T1iiaa(i1,i,a1,a) = 0.0
            PREPARE Dijab_aa_x(i1,i,a1,a) = T1iiaa(i1,i,a1,a)
      ENDPARDO i1,i,a1,a

      EXECUTE SERVER_BARRIER

# Dim(i,m) = Gmi_a(i,m) + l1a_old(m,e)*t1a_old(e,i)
# Dea(e,a) = Gae_a(e,a) - l1a_old(m,e)*t1a_old(a,m)
# Dii_x
      PARDO i, i1
            GET Gmi_a_x(i,i1)
            PUT Dii_x(i,i1) += Gmi_a_x(i,i1)
      ENDPARDO i, i1

      PARDO i, i1, a
            GET l1a_old(i1,a)
            GET t1a_old(a,i)
            GET l1a_old_x(i1,a)
            GET t1a_old_x(a,i)

            Tii(i,i1)        = l1a_old(i1,a)*t1a_old_x(a,i)
            PUT Dii_x(i,i1) += Tii(i,i1)

            Tii(i,i1)        = l1a_old_x(i1,a)*t1a_old(a,i)
            PUT Dii_x(i,i1) += Tii(i,i1)
      ENDPARDO i, i1, a
# Daa_x
      PARDO a1, a
            GET Gae_a_x(a1,a)
            PUT Daa_x(a1,a) += Gae_a_x(a1,a)
      ENDPARDO a1, a
      PARDO a1, a, i
            GET l1a_old(i,a1)
            GET t1a_old(a,i)
            GET l1a_old_x(i,a1)
            GET t1a_old_x(a,i)

            Taa(a1,a)      = t1a_old(a,i)*l1a_old_x(i,a1)
            Taa(a1,a)     *= -1.0
            PUT Daa_x(a1,a) += Taa(a1,a)

            Taa(a1,a)      = t1a_old_x(a,i)*l1a_old(i,a1)
            Taa(a1,a)     *= -1.0
            PUT Daa_x(a1,a) += Taa(a1,a)
      ENDPARDO a1, a, i
      execute sip_barrier

# Done one-particle intermediates
# Terms 1-5 in Eq. 33
      PARDO a, a1, i, i1
            REQUEST Tau_aa_x(a,i,a1,i1)   i1
            REQUEST L2old_aa_x(i,a,i1,a1) i1

# Terms 1 and 2 in Eqn 33.
            Tiiaa(i,i1,a,a1)  = Tau_aa_x(a,i,a1,i1)
            Tiiaa(i,i1,a,a1) *= 0.125
#bgn_debug
#            Tiiaa(i,i1,a,a1) *=1.0
#end_debug

# DABIJ_X begin

            T1aaii(a,a1,i,i1)  = L2old_aa_x(i,a,i1,a1)
            Taaii(a,a1,i,i1)   = T1aaii(a,a1,i,i1)
            Taaii(a,a1,i,i1)   *= 0.125
#bgn_debug
#            Taaii(a,a1,i,i1) *=1.0
#end_debug
# DABIJ_X end

            DO i2
               REQUEST Tau_aa(a,i2,a1,i)  i2
               REQUEST Tau_aa(a,i2,a1,i1) i2
               GET Dii(i1,i2)
               GET Dii(i,i2)

               REQUEST Tau_aa_x(a,i2,a1,i)  i2
               REQUEST Tau_aa_x(a,i2,a1,i1) i2
               GET Dii_x(i1,i2)
               GET Dii_x(i,i2)

# Term 4:Eqn 33
# -1/4P_(ij)[Tau(mj,ab)*t1(i,e)*l1_x(e,m)+Tau(mj,ab)*l1(e,m)*t1_x(e,i) +
#         1/2Tau(mj,ab)*t2(in,ef)*l2_x(ef,mn) + 1/2Tau(mj,ab)*t2_x(mn,af)
#           *l2(ef,mn)]
# Factor??

               T1iiaa(i,i1,a,a1) = Tau_aa(a,i2,a1,i)*Dii_x(i1,i2)
               T1iiaa(i,i1,a,a1)*= 0.125
#bgn_debug
               T1iiaa(i,i1,a,a1) *=1.0
#end_debug
               Tiiaa(i,i1,a,a1) += T1iiaa(i,i1,a,a1)

               T1iiaa(i,i1,a,a1) = Tau_aa(a,i2,a1,i1)*Dii_x(i,i2)
               T1iiaa(i,i1,a,a1)*= -0.125
#bgn_debug
               T1iiaa(i,i1,a,a1) *=1.0
#end_debug
               Tiiaa(i,i1,a,a1) += T1iiaa(i,i1,a,a1)

# -1/4P_ij[Tau_x(mj,ab)*t1(i,e)*l1(e,m) - 1/2Tau_x(mj,ab)*t2(in,ef)*l2(ef,mn)]

               T1iiaa(i,i1,a,a1) = Tau_aa_x(a,i2,a1,i)*Dii(i1,i2)
               T1iiaa(i,i1,a,a1)*= 0.125
#bgn_debug
               T1iiaa(i,i1,a,a1) *=1.0
#end_debug
               Tiiaa(i,i1,a,a1) += T1iiaa(i,i1,a,a1)

               T1iiaa(i,i1,a,a1) = Tau_aa_x(a,i2,a1,i1)*Dii(i,i2)
               T1iiaa(i,i1,a,a1)*= -0.125
#bgn_debug
               T1iiaa(i,i1,a,a1) *=1.0
#end_debug
               Tiiaa(i,i1,a,a1) += T1iiaa(i,i1,a,a1)

               DO i3
                  REQUEST Tau_aa(a,i2,a1,i3)     i3
                  REQUEST Vijmn_aaaa(i,i1,i2,i3) i3
                  REQUEST Tau_aa_x(a,i2,a1,i3)     i3
                  REQUEST Vijmn_aaaa_x(i,i1,i2,i3) i3

#Term 3: Eqn 33.
# 1/16[Tau(ij,ef)*L2(ef,mn)*Tau_x(mj,ab) + Tau_x(ij,ef)*l2(ef,mn)*Tau(mn,ab) +
#      Tau(ij,ef)*Tau(mn,ab)L2_x(ef,mn)]
# Here the factor is right!
                 T2iiaa(i2,i3,a,a1)    = Tau_aa(a,i2,a1,i3)
                  T2iiaa_x(i2,i3,a,a1)  = Tau_aa_x(a,i2,a1,i3)

                  T1iiaa(i,i1,a,a1)  = Vijmn_aaaa(i,i1,i2,i3)*T2iiaa_x(i2,i3,a,a1)
                  T1iiaa(i,i1,a,a1) *= 0.0625
#bgn_debug
                  T1iiaa(i,i1,a,a1) *=1.0
#end_debug
                  Tiiaa(i,i1,a,a1)  += T1iiaa(i,i1,a,a1)

                  T1iiaa(i,i1,a,a1)  = Vijmn_aaaa_x(i,i1,i2,i3)*T2iiaa(i2,i3,a,a1)
                  T1iiaa(i,i1,a,a1) *= 0.0625
#bgn_debug
                  T1iiaa(i,i1,a,a1) *=1.0
#end_debug
                  Tiiaa(i,i1,a,a1)  += T1iiaa(i,i1,a,a1)
               ENDDO i3
            ENDDO i2
            DO a2
               REQUEST Tau_aa(a2,i,a1,i1) i1
               REQUEST Tau_aa(a2,i,a,i1)  i1
               GET Daa(a2,a)
               GET Daa(a2,a1)

               REQUEST Tau_aa_x(a2,i,a1,i1) i1
               REQUEST Tau_aa_x(a2,i,a,i1)  i1
               GET Daa_x(a2,a)
               GET Daa_x(a2,a1)
# Term:5 Eqn.33
# -1/4_(ab)[Tau(ij,eb)*l1(e,m)*t1_x(a,m) + Tau(ij,eb)*t1(m,a)*l1_x(e,m) +
#        1/2Tau_x(ij,eb)*t2(mn,af)*l2(ef,mn) + 1//2Tau(ij,eb)*t2(mn,af)*
#        l2_x(ef,mn)]
# Factor??
               T1iiaa(i,i1,a,a1) = Tau_aa(a2,i,a1,i1)*Daa_x(a2,a)
               T1iiaa(i,i1,a,a1)*= 0.125
#bgn_debug
               T1iiaa(i,i1,a,a1) *=1.0
#end_debug
               Tiiaa(i,i1,a,a1) += T1iiaa(i,i1,a,a1)

               T1iiaa(i,i1,a,a1) = Tau_aa(a2,i,a,i1)*Daa_x(a2,a1)
               T1iiaa(i,i1,a,a1)*= -0.125
#bgn_debug
               T1iiaa(i,i1,a,a1) *=1.0
#end_debug
               Tiiaa(i,i1,a,a1) += T1iiaa(i,i1,a,a1)

               T1iiaa(i,i1,a,a1) = Tau_aa_x(a2,i,a1,i1)*Daa(a2,a)
               T1iiaa(i,i1,a,a1)*= 0.125
#bgn_debug
               T1iiaa(i,i1,a,a1) *=1.0
#end_debug
               Tiiaa(i,i1,a,a1) += T1iiaa(i,i1,a,a1)

               T1iiaa(i,i1,a,a1) = Tau_aa_x(a2,i,a,i1)*Daa(a2,a1)
               T1iiaa(i,i1,a,a1)*= -0.125
#bgn_debug
               T1iiaa(i,i1,a,a1) *=1.0
#end_debug
               Tiiaa(i,i1,a,a1) += T1iiaa(i,i1,a,a1)
            ENDDO a2

            T1AHiiaa(i,i1,a,a1)  = Taaii(a,a1,i,i1)
            T1AHiiaa(i,i1,a,a1) *= Fact
            Tiiaa(i,i1,a,a1)    += T1AHiiaa(i,i1,a,a1)

            PREPARE Dijab_aa_x(i,i1,a,a1) += Tiiaa(i,i1,a,a1)
      ENDPARDO a, a1, i, i1

# Term  5 in Eqn 33.
      CREATE L1aa
      CREATE L1aa_x
      execute sip_barrier
      PARDO a1, a2, i
            GET l1a_old(i,a2)
            GET t1a_old(a1,i)

            GET l1a_old_x(i,a2)
            GET t1a_old_x(a1,i)

            Taa(a1,a2)  = t1a_old(a1,i)*l1a_old(i,a2)
            PUT L1aa(a1,a2) += Taa(a1,a2)

            Taa(a1,a2)  = t1a_old_x(a1,i)*l1a_old(i,a2)
            PUT L1aa_x(a1,a2) += Taa(a1,a2)

            Taa(a1,a2)  = t1a_old(a1,i)*l1a_old_x(i,a2)
            PUT L1aa_x(a1,a2) += Taa(a1,a2)
      ENDPARDO a1, a2, i
      CREATE L1ai
      CREATE L1ai_x
      execute sip_barrier

      PARDO a1, a2, i
            GET t1a_old(a2,i)
            GET L1aa(a1,a2)

            GET t1a_old_x(a2,i)
            GET L1aa_x(a1,a2)

            Tai(a1,i)  = L1aa(a1,a2)*t1a_old(a2,i)
            PUT L1ai(a1,i) += Tai(a1,i)

            Tai(a1,i)  = L1aa(a1,a2)*t1a_old_x(a2,i)
            PUT L1ai_x(a1,i) += Tai(a1,i)

            Tai(a1,i)  = L1aa_x(a1,a2)*t1a_old(a2,i)
            PUT L1ai_x(a1,i) += Tai(a1,i)
      ENDPARDO a1, a2, i
      execute sip_barrier
      DELETE L1aa
      DELETE L1aa_x
#bgn_debug
#      sumaa = 0.0
#      do a1
#      do i
#         get L1ai_x(a1,i)
#         Tai(a1,i) = L1ai_x(a1,i)
#         tmp = Tai(a1,i)*Tai(a1,i)
#         sumaa += tmp
#       enddo i
#       enddo a1
#       sumaa *= 0.111111
#       execute print_scalar sumaa
#end_debug
      PARDO a, a1, i, i1
            GET t1a_old(a,i)
            GET L1ai(a1,i1)

            GET t1a_old_x(a,i)
            GET L1ai_x(a1,i1)

# 3/4P(ij)P(ab)[l1_x(e,m)*t1(i,a)*t1(j,e)*t(m,b) + t1_x(m,b)*l1(e,m)*
#               t1(i,a)*t1(j,e) + t1_x(i,a)*t1(j,e)*l1(e,m)*t(m,b) +
#               t1(i,a)*t1_x(j,e)*l1(e,m)*t1(m,b)]
# Factor is right; no assumptions

            Tiiaa(i,i1,a,a1)         = t1a_old(a,i)^L1ai_x(a1,i1)
            Tiiaa(i,i1,a,a1)        *= 0.375
#bgn_debug
            T1iiaa(i,i1,a,a1) = Tiiaa(i,i1,a,a1)
            T1iiaa(i,i1,a,a1) *= 1.0
            PREPARE Dijab_aa_x(i,i1,a,a1) += T1iiaa(i,i1,a,a1)
#end_debug
#            PREPARE Dijab_aa_x(i,i1,a,a1) += Tiiaa(i,i1,a,a1)

            T1iiaa(i,i1,a1,a)        = Tiiaa(i,i1,a,a1)
            T1iiaa(i,i1,a1,a)       *= -1.0
#bgn_debug
            T1iiaa(i,i1,a1,a) *= 1.0
#end_debug
            PREPARE Dijab_aa_x(i,i1,a1,a) += T1iiaa(i,i1,a1,a)

            T1iiaa(i1,i,a,a1)        = Tiiaa(i,i1,a,a1)
            T1iiaa(i1,i,a,a1)       *= -1.0
#bgn_debug
            T1iiaa(i1,i,a,a1) *= 1.0
#end_debug
            PREPARE Dijab_aa_x(i1,i,a,a1) += T1iiaa(i1,i,a,a1)

            T1iiaa(i1,i,a1,a)        = Tiiaa(i,i1,a,a1)
#bgn_debug
            T1iiaa(i1,i,a1,a) *= 1.0
#end_debug
            PREPARE Dijab_aa_x(i1,i,a1,a) += T1iiaa(i1,i,a1,a)

            Tiiaa(i,i1,a,a1)         = t1a_old_x(a,i)^L1ai(a1,i1)
            Tiiaa(i,i1,a,a1)        *= 0.375
#bgn_debug
            T1iiaa(i,i1,a,a1) = Tiiaa(i,i1,a,a1)
            T1iiaa(i,i1,a,a1) *= 1.0
            PREPARE Dijab_aa_x(i,i1,a,a1) += T1iiaa(i,i1,a,a1)
#end_debug
#            PREPARE Dijab_aa_x(i,i1,a,a1) += Tiiaa(i,i1,a,a1)

            T1iiaa(i,i1,a1,a)        = Tiiaa(i,i1,a,a1)
            T1iiaa(i,i1,a1,a)       *= -1.0
#bgn_debug
            T1iiaa(i,i1,a1,a) *= 1.0
#end_debug
            PREPARE Dijab_aa_x(i,i1,a1,a) += T1iiaa(i,i1,a1,a)

            T1iiaa(i1,i,a,a1)        = Tiiaa(i,i1,a,a1)
            T1iiaa(i1,i,a,a1)       *= -1.0
#bgn_debug
            T1iiaa(i1,i,a,a1) *= 1.0
#end_debug
            PREPARE Dijab_aa_x(i1,i,a,a1) += T1iiaa(i1,i,a,a1)

            T1iiaa(i1,i,a1,a)        = Tiiaa(i,i1,a,a1)
#bgn_debug
            T1iiaa(i1,i,a1,a) *= 1.0
#end_debug
            PREPARE Dijab_aa_x(i1,i,a1,a) += T1iiaa(i1,i,a1,a)

      ENDPARDO a, a1, i, i1
      execute sip_barrier
      execute server_barrier

      DELETE L1ai
      DELETE L1ai_x
#.
# Sixth-term in Eq. 33

# 1/8P_(ij)P_(ab){(l1_x(e,m)*t1(m,a) + l1(e,m)*t1_x(m,a) + l2_x(ef,mn)t2(mi,ae)
#                 + l2(ef,mn)t2_x(mi,ae)] piece
# A question about factor 2

      PARDO i2, a2, a1, i1
            GET l1a_old(i2,a2)
            GET t1a_old(a1,i1)
            GET l1a_old_x(i2,a2)
            GET t1a_old_x(a1,i1)

            Liaai(i2,a2,a1,i1)  = l1a_old(i2,a2)^t1a_old(a1,i1)
            Liaai(i2,a2,a1,i1) *= 2.0

            Liaai_x(i2,a2,a1,i1)   = l1a_old_x(i2,a2)^t1a_old(a1,i1)
            Liaai_x1(i2,a2,a1,i1)  = l1a_old(i2,a2)^t1a_old_x(a1,i1)
            Liaai_x(i2,a2,a1,i1)  += Liaai_x1(i2,a2,a1,i1)
            Liaai_x(i2,a2,a1,i1) *= 2.0
#bgn_debug
            Liaai(i2,a2,a1,i1) *= 1.0
            Liaai_x(i2,a2,a1,i1) *= 1.0
#end_debug

            DO i3
            DO a3
               REQUEST T2old_aa(a3,i3,a1,i1) a3
               REQUEST L2old_aa(i2,a2,i3,a3) a3
               REQUEST T2old_aa_x(a3,i3,a1,i1) a3
               REQUEST L2old_aa_x(i2,a2,i3,a3) a3

               Tiaai(i2,a2,a1,i1)  = L2old_aa(i2,a2,i3,a3)*T2old_aa(a3,i3,a1,i1)
               Liaai(i2,a2,a1,i1) += Tiaai(i2,a2,a1,i1)

               Tiaai(i2,a2,a1,i1)  = L2old_aa_x(i2,a2,i3,a3)*T2old_aa(a3,i3,a1,i1)
               Liaai_x(i2,a2,a1,i1) += Tiaai(i2,a2,a1,i1)

               Tiaai(i2,a2,a1,i1)    = L2old_aa(i2,a2,i3,a3)*T2old_aa_x(a3,i3,a1,i1)
               Liaai_x(i2,a2,a1,i1) += Tiaai(i2,a2,a1,i1)

            ENDDO a3
            ENDDO i3
            DO j
            DO b
               REQUEST T2old_ab(a1,i1,b,j) b
               REQUEST L2old_ab(i2,a2,j,b) b
               Tiaai(i2,a2,a1,i1)  = L2old_ab(i2,a2,j,b)*T2old_ab(a1,i1,b,j)
               Liaai(i2,a2,a1,i1) += Tiaai(i2,a2,a1,i1)
               REQUEST T2old_ab_x(a1,i1,b,j) b
               REQUEST L2old_ab_x(i2,a2,j,b) b
               Tiaai(i2,a2,a1,i1)  = L2old_ab(i2,a2,j,b)*T2old_ab_x(a1,i1,b,j)
               Liaai_x(i2,a2,a1,i1) += Tiaai(i2,a2,a1,i1)

               Tiaai(i2,a2,a1,i1)  = L2old_ab_x(i2,a2,j,b)*T2old_ab(a1,i1,b,j)
               Liaai_x(i2,a2,a1,i1) += Tiaai(i2,a2,a1,i1)
            ENDDO b
            ENDDO j
            DO i
               GET t1a_old(a2,i)
               tai(a2,i) = t1a_old(a2,i)
               GET t1a_old_x(a2,i)                      #PV
               tai_x(a2,i) = t1a_old_x(a2,i)            #PV

               DO a
                  REQUEST T2old_aa(a,i2,a2,i) i
                  GET t1a_old(a,i2)

                  REQUEST T2old_aa_x(a,i2,a2,i) i      #PV
                  GET t1a_old_x(a,i2)                  #PV

# 2.0 t1_x(m,a)t(e,i) + t1(m,a)t1_x(e,i) + t2(mi,ae)
# multiplication of these two pieces should complete this contribution

                  Tiaia(i,a,i2,a2)         = t1a_old(a,i2)^tai(a2,i)
                  Tiaia(i,a,i2,a2)        *= 2.0
#bgn_debug
                  Tiaia(i,a,i2,a2)  *= 1.0
#end_debug
                  T1iaia(i,a,i2,a2)        = T2old_aa(a,i2,a2,i)
#bgn_debug
                  T1iaia(i,a,i2,a2) *= 1.0
#end_debug
                  Tiaia(i,a,i2,a2)        += T1iaia(i,a,i2,a2)
                  Tiaai(i,a,a1,i1)         = Tiaia(i,a,i2,a2)*Liaai_x(i2,a2,a1,i1)
# What is the origin of 0.0625??
                  Tiiaa(i,i1,a,a1)         = Tiaai(i,a,a1,i1)
                  Tiiaa(i,i1,a,a1)        *= -0.0625 #-0.125
#bgn_debug
                  T1iiaa(i,i1,a,a1) = Tiiaa(i,i1,a,a1)
                  T1iiaa(i,i1,a,a1) *= 1.0
                  PREPARE Dijab_aa_x(i,i1,a,a1) += T1iiaa(i,i1,a,a1)
#end_debug
#                  PREPARE Dijab_aa_x(i,i1,a,a1) += Tiiaa(i,i1,a,a1)

                  T1iiaa(i,i1,a1,a)        = Tiiaa(i,i1,a,a1)
                  T1iiaa(i,i1,a1,a)       *= -1.0
#bgn_debug
#bgn_debug
                  T1iiaa(i,i1,a,a1) *= 1.0
#end_debug
                  PREPARE Dijab_aa_x(i,i1,a1,a) += T1iiaa(i,i1,a1,a)
                  T1iiaa(i1,i,a,a1)        = Tiiaa(i,i1,a,a1)
                  T1iiaa(i1,i,a,a1)       *= -1.0
#bgn_debug
                  T1iiaa(i1,i,a,a1) *= 1.0
#end_debug
                  PREPARE Dijab_aa_x(i1,i,a,a1) += T1iiaa(i1,i,a,a1)

                  T1iiaa(i1,i,a1,a)        = Tiiaa(i,i1,a,a1)
#bgn_debug
                  T1iiaa(i1,i,a1,a) *= 1.0
#end_debug
                  PREPARE Dijab_aa_x(i1,i,a1,a) += T1iiaa(i1,i,a1,a)

                  Tiaia(i,a,i2,a2)         = t1a_old_x(a,i2)^tai(a2,i)
                  Tiaia_x(i,a,i2,a2)       = t1a_old(a,i2)^tai_x(a2,i)
                  Tiaia(i,a,i2,a2)        += Tiaia_x(i,a,i2,a2)
                  Tiaia(i,a,i2,a2)        *= 2.0
#bgn_debug
                  Tiaia(i,a,i2,a2) *= 1.0
#end_debug

                  T1iaia(i,a,i2,a2)        = T2old_aa_x(a,i2,a2,i)
#bgn_debug
                  T1iaia(i,a,i2,a2) *= 1.0
#end_debug
                  Tiaia(i,a,i2,a2)        += T1iaia(i,a,i2,a2)

                  Tiaai(i,a,a1,i1)         = Tiaia(i,a,i2,a2)*Liaai(i2,a2,a1,i1)
                  Tiiaa(i,i1,a,a1)         = Tiaai(i,a,a1,i1)

                  Tiiaa(i,i1,a,a1)        *= -0.0625 #-0.125
#bgn_debug
#bgn_debug
                  T1iiaa(i,i1,a,a1) = Tiiaa(i,i1,a,a1)
                  T1iiaa(i,i1,a,a1) *= 1.0
                  PREPARE Dijab_aa_x(i,i1,a,a1) += T1iiaa(i,i1,a,a1)
#end_debug
#                  PREPARE Dijab_aa_x(i,i1,a,a1) += Tiiaa(i,i1,a,a1)

                  T1iiaa(i,i1,a1,a)        = Tiiaa(i,i1,a,a1)
                  T1iiaa(i,i1,a1,a)       *= -1.0
#bgn_debug
                  T1iiaa(i,i1,a1,a) *= 1.0
#end_debug
                  PREPARE Dijab_aa_x(i,i1,a1,a) += T1iiaa(i,i1,a1,a)
                  T1iiaa(i1,i,a,a1)        = Tiiaa(i,i1,a,a1)
                  T1iiaa(i1,i,a,a1)       *= -1.0
#bgn_debug
                  T1iiaa(i1,i,a,a1) *= 1.0
#end_debug
                  PREPARE Dijab_aa_x(i1,i,a,a1) += T1iiaa(i1,i,a,a1)

                  T1iiaa(i1,i,a1,a)        = Tiiaa(i,i1,a,a1)
#bgn_debug
                  T1iiaa(i1,i,a1,a) *= 1.0
#end_debug
                  PREPARE Dijab_aa_x(i1,i,a1,a) += T1iiaa(i1,i,a1,a)
               ENDDO a
            ENDDO i
      ENDPARDO i2, a2, a1, i1
# Odd spin combination

      PARDO j, b, a1, i1
            GET l1b_old(j,b)
            GET t1a_old(a1,i1)

            GET l1b_old_x(j,b)
            GET t1a_old_x(a1,i1)

            Ljbai(j,b,a1,i1)  = l1b_old(j,b)^t1a_old(a1,i1)
            ljbai(j,b,a1,i1) *= 2.0

            Ljbai_x(j,b,a1,i1)    = l1b_old(j,b)^t1a_old_x(a1,i1)
            Ljbai_x1(j,b,a1,i1)   = l1b_old_x(j,b)^t1a_old(a1,i1)
            Ljbai_x(j,b,a1,i1)   += Ljbai_x1(j,b,a1,i1)
            ljbai_x(j,b,a1,i1) *= 2.0

            DO i3
            DO a3
               REQUEST T2old_aa(a3,i3,a1,i1) a3
               REQUEST L2old_ab(i3,a3,j,b)   a3
               Tjbai(j,b,a1,i1)  = L2old_ab(i3,a3,j,b)*T2old_aa(a3,i3,a1,i1)
               Ljbai(j,b,a1,i1) += Tjbai(j,b,a1,i1)

               REQUEST T2old_aa_x(a3,i3,a1,i1) a3
               REQUEST L2old_ab_x(i3,a3,j,b)   a3
               Tjbai_x(j,b,a1,i1)  = L2old_ab(i3,a3,j,b)*T2old_aa_x(a3,i3,a1,i1)
               Ljbai_x(j,b,a1,i1) += Tjbai_x(j,b,a1,i1)
               Tjbai_x(j,b,a1,i1)  = L2old_ab_x(i3,a3,j,b)*T2old_aa(a3,i3,a1,i1)
               Ljbai_x(j,b,a1,i1) += Tjbai_x(j,b,a1,i1)
            ENDDO a3
            ENDDO i3
            DO j1
            DO b1
               REQUEST T2old_ab(a1,i1,b1,j1) b1
               REQUEST L2old_bb(j1,b1,j,b)   b1
               Tjbai(j,b,a1,i1)  = L2old_bb(j1,b1,j,b)*T2old_ab(a1,i1,b1,j1)
               Ljbai(j,b,a1,i1) += Tjbai(j,b,a1,i1)
               REQUEST T2old_ab_x(a1,i1,b1,j1) b1
               REQUEST L2old_bb_x(j1,b1,j,b)   b1
               Tjbai_x(j,b,a1,i1)  = L2old_bb(j1,b1,j,b)*T2old_ab_x(a1,i1,b1,j1)
               Ljbai_x(j,b,a1,i1) += Tjbai_x(j,b,a1,i1)
               Tjbai_x(j,b,a1,i1)  = L2old_bb_x(j1,b1,j,b)*T2old_ab(a1,i1,b1,j1)
               Ljbai_x(j,b,a1,i1) += Tjbai_x(j,b,a1,i1)
            ENDDO b1
            ENDDO j1
            DO i
            DO a
               REQUEST T2old_ab(a,i,b,j) a
               REQUEST T2old_ab_x(a,i,b,j) a
               Taiai(a1,i1,a,i)         = Ljbai_x(j,b,a1,i1)*T2old_ab(a,i,b,j)
               Tiiaa(i,i1,a,a1)         = Taiai(a1,i1,a,i)
               Tiiaa(i,i1,a,a1)        *= 0.0625
#bgn_debug
               T1iiaa(i,i1,a,a1) = Tiiaa(i,i1,a,a1)
               T1iiaa(i,i1,a,a1) *= 1.0
               PREPARE Dijab_aa_x(i,i1,a,a1) += T1iiaa(i,i1,a,a1)
#end_debug
#               PREPARE Dijab_aa_x(i,i1,a,a1) += Tiiaa(i,i1,a,a1)

               T1iiaa(i,i1,a1,a)        = Tiiaa(i,i1,a,a1)
               T1iiaa(i,i1,a1,a)       *= -1.0
#bgn_debug
               T1iiaa(i,i1,a1,a) *= 1.0
#end_debug
               PREPARE Dijab_aa_x(i,i1,a1,a) += T1iiaa(i,i1,a1,a)

               T1iiaa(i1,i,a,a1)        = Tiiaa(i,i1,a,a1)
               T1iiaa(i1,i,a,a1)       *= -1.0
#bgn_debug
               T1iiaa(i1,i,a,a1) *= 1.0
#end_debug
               PREPARE Dijab_aa_x(i1,i,a,a1) += T1iiaa(i1,i,a,a1)

               T1iiaa(i1,i,a1,a)        = Tiiaa(i,i1,a,a1)
#bgn_debug
               T1iiaa(i1,i,a1,a) *= 1.0
#end_debug
               PREPARE Dijab_aa_x(i1,i,a1,a) += T1iiaa(i1,i,a1,a)

               Taiai(a1,i1,a,i)         = Ljbai(j,b,a1,i1)*T2old_ab_x(a,i,b,j)
               Tiiaa(i,i1,a,a1)         = Taiai(a1,i1,a,i)
               Tiiaa(i,i1,a,a1)        *= 0.0625
#bgn_debug
               T1iiaa(i,i1,a,a1) = Tiiaa(i,i1,a,a1)
               T1iiaa(i,i1,a,a1) *= 1.0
               PREPARE Dijab_aa_x(i,i1,a,a1) += T1iiaa(i,i1,a,a1)
#end_debug
#               PREPARE Dijab_aa_x(i,i1,a,a1) += Tiiaa(i,i1,a,a1)
               T1iiaa(i,i1,a1,a)        = Tiiaa(i,i1,a,a1)
               T1iiaa(i,i1,a1,a)       *= -1.0
#bgn_debug
               T1iiaa(i,i1,a1,a) *= 1.0
#end_debug
               PREPARE Dijab_aa_x(i,i1,a1,a) += T1iiaa(i,i1,a1,a)

               T1iiaa(i1,i,a,a1)        = Tiiaa(i,i1,a,a1)
               T1iiaa(i1,i,a,a1)       *= -1.0
#bgn_debug
               T1iiaa(i1,i,a,a1) *= 1.0
#end_debug
               PREPARE Dijab_aa_x(i1,i,a,a1) += T1iiaa(i1,i,a,a1)

               T1iiaa(i1,i,a1,a)        = Tiiaa(i,i1,a,a1)
#bgn_debug
               T1iiaa(i1,i,a1,a) *= 1.0
#end_debug
               PREPARE Dijab_aa_x(i1,i,a1,a) += T1iiaa(i1,i,a1,a)
            ENDDO a
            ENDDO i
      ENDPARDO j, b, a1, i1
      execute server_barrier

#  Back transformation of two indices
#  Two particle contribution to G-tensor: O(pq,rs)*<|S_z(1)+S_z(2)pqsr|>
#  DAAAA = 1/2 DAAAA + DAAAA

      PARDO sigma, a, i, i1
            Tiiax(i,i1,a,sigma) = 0.0
            DO a1
               REQUEST Dijab_aa_x(i,i1,a,a1) a1

               T1iiaa(i,i1,a,a1)  = Dijab_aa_x(i,i1,a,a1)
               T1iiaa(i,i1,a,a1) *= 1.5
#bgn_debug
#               T1iiaa(i,i1,a,a1) *= 1.5
#               T1iiaa(i,i1,a,a1) *= 1.0
#end_debug
               T1iiax(i,i1,a,sigma) = T1iiaa(i,i1,a,a1)*ca(sigma,a1)
               Tiiax(i,i1,a,sigma) += T1iiax(i,i1,a,sigma)
            ENDDO a1
            PREPARE Diiax_x(i,i1,a,sigma) = Tiiax(i,i1,a,sigma)
      ENDPARDO sigma, a, i, i1
      execute server_barrier

#dgn_debug
#      esum = 0.0
#      PARDO sigma, a, i, i1
#            request Diiax_x(i,i1,a,sigma) i
#            tmp = Diiax_x(i,i1,a,sigma) * Diiax_x(i,i1,a,sigma)
#            esum += tmp
#      ENDPARDO sigma, a, i, i1
#      execute print_scalar esum
#end_debug

      PARDO lambda, sigma, i, i1
            Tiixx(i,i1,lambda,sigma) = 0.0
            DO a
               REQUEST Diiax_x(i,i1,a,sigma) a
               T1iixx(i,i1,lambda,sigma) = Diiax_x(i,i1,a,sigma)*ca(lambda,a)
               Tiixx(i,i1,lambda,sigma)  += T1iixx(i,i1,lambda,sigma)
            ENDDO a
            Tiixx(i,i1,lambda,sigma)         *= 4.0

            PREPARE Diixx_x(i,i1,lambda,sigma) += Tiixx(i,i1,lambda,sigma)
      ENDPARDO lambda, sigma, i, i1
      execute server_barrier

      ENDPROC DIJABAA_X
#     -----------------

#      PROC DIJABAB_TEST_X
#     -------------------
#      PARDO i,j,a,b
#            Tijab(i,j,a,b) = 0.0
#            Tabij(a,b,i,j) = 0.0
#            PREPARE Dijab_ab_x(i,j,a,b) = Tijab(i,j,a,b)
#      ENDPARDO i,j,a,b
#
#      EXECUTE SERVER_BARRIER
#
#      PARDO a, b, i, j
#            REQUEST Tau_ab_x(a,i,b,j)   j
#            REQUEST L2old_ab_x(i,a,j,b) j
#
#            Tijab(i,j,a,b)  = Tau_ab_x(a,i,b,j)
#            Tijab(i,j,a,b) *= 0.125
#
#            T1abij(a,b,i,j) = L2old_ab_x(i,a,j,b)
#            Tabij(a,b,i,j)  = T1abij(a,b,i,j)
#            Tabij(a,b,i,j) *= 0.125
#
#            T1AHijab(i,j,a,b)  = Tabij(a,b,i,j)
#            T1AHijab(i,j,a,b) *= Fact
#            Tijab(i,j,a,b)    += T1AHijab(i,j,a,b)
#
#            PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)
#      ENDPARDO a, b, i, j
#      execute server_barrier
#
#      ENDPROC DIJABAB_TEST_X
#     ----------------------

      PROC DIJABAB_X
#     ---------------
      PARDO i,j,a,b 
            Tijab(i,j,a,b) = 0.0
            Tabij(a,b,i,j) = 0.0
            PREPARE Dijab_ab_x(i,j,a,b) = Tijab(i,j,a,b)
      ENDPARDO i,j,a,b 

      EXECUTE SERVER_BARRIER

#bgn_debug
#      pardo b1, b
#            get  Dbb_x(b1,b) 
#            execute dump_amp Dbb_x(b1,b)
#      endpardo b1, b
#end_debug

# Terms 1-5 in Eq. 33 
      PARDO a, b, i, j
            REQUEST Tau_ab_x(a,i,b,j)   j
            REQUEST L2old_ab_x(i,a,j,b) j

            Tijab(i,j,a,b)  = Tau_ab_x(a,i,b,j)
            Tijab(i,j,a,b) *= 0.125

# DABIJ_X begin

            T1abij(a,b,i,j) = L2old_ab_x(i,a,j,b)
            Tabij(a,b,i,j)  = T1abij(a,b,i,j)
            Tabij(a,b,i,j) *= 0.125
#bgn_debug
#            Tabij(a,b,i,j) *= 1.0
#end_debug
# DABIJ_X end

            DO i1
               REQUEST Tau_ab(a,i1,b,j) i1
               GET Dii(i,i1)

               REQUEST Tau_ab_x(a,i1,b,j) i1
               GET Dii_x(i,i1)

               T1ijab(i,j,a,b) = Tau_ab(a,i1,b,j)*Dii_x(i,i1)
               T1ijab(i,j,a,b)*= -0.125
#bgn_debug
#               T1ijab(i,j,a,b) *= 1.0
#end_debug
               Tijab(i,j,a,b) += T1ijab(i,j,a,b)

               T1ijab(i,j,a,b) = Tau_ab_x(a,i1,b,j)*Dii(i,i1)
               T1ijab(i,j,a,b)*= -0.125
#bgn_debug
#               T1ijab(i,j,a,b) *= 1.0
#end_debug
               Tijab(i,j,a,b) += T1ijab(i,j,a,b)

               DO j1
                  REQUEST Tau_ab(a,i1,b,j1)     j1
                  REQUEST Vijmn_abab(i,j,i1,j1) j1

                  REQUEST Tau_ab_x(a,i1,b,j1)     j1
                  REQUEST Vijmn_abab_x(i,j,i1,j1) j1

                  T2ijab(i1,j1,a,b)   = Tau_ab(a,i1,b,j1)
                  T2ijab_x(i1,j1,a,b) = Tau_ab_x(a,i1,b,j1)

                  T1ijab(i,j,a,b)  = Vijmn_abab(i,j,i1,j1)*T2ijab_x(i1,j1,a,b)
                  T1ijab(i,j,a,b) *= 0.125
#bgn_debug
#                  T1ijab(i,j,a,b) *= 1.0
#end_debug
                  Tijab(i,j,a,b)  += T1ijab(i,j,a,b)

                  T1ijab(i,j,a,b)  = Vijmn_abab_x(i,j,i1,j1)*T2ijab(i1,j1,a,b)
                  T1ijab(i,j,a,b) *= 0.125
#bgn_debug
#                  T1ijab(i,j,a,b) *= 1.0
#end_debug
                  Tijab(i,j,a,b)  += T1ijab(i,j,a,b)

               ENDDO j1
            ENDDO i1

            DO j1
               REQUEST Tau_ab(a,i,b,j1) j1
               GET Djj(j,j1)
             
               REQUEST Tau_ab_x(a,i,b,j1) j1
               GET Djj_x(j,j1)

               T1ijab(i,j,a,b) = Tau_ab(a,i,b,j1)*Djj_x(j,j1)
               T1ijab(i,j,a,b)*= -0.125
#bgn_debug
#               T1ijab(i,j,a,b) *= 1.0
#end_debug
               Tijab(i,j,a,b) += T1ijab(i,j,a,b)

               T1ijab(i,j,a,b) = Tau_ab_x(a,i,b,j1)*Djj(j,j1)
               T1ijab(i,j,a,b)*= -0.125
#bgn_debug
#               T1ijab(i,j,a,b) *= 1.0
#end_debug
               Tijab(i,j,a,b) += T1ijab(i,j,a,b)
            ENDDO j1

            DO a1
               REQUEST Tau_ab(a1,i,b,j) a1
               GET Daa(a1,a)
  
               REQUEST Tau_ab_x(a1,i,b,j) a1
               GET Daa_x(a1,a)

               T1ijab(i,j,a,b) = Tau_ab(a1,i,b,j)*Daa_x(a1,a)
               T1ijab(i,j,a,b)*= 0.125
#bgn_debug
#               T1ijab(i,j,a,b) *= 1.0
#end_debug
               Tijab(i,j,a,b) += T1ijab(i,j,a,b)

               T1ijab(i,j,a,b) = Tau_ab_x(a1,i,b,j)*Daa(a1,a)
               T1ijab(i,j,a,b)*= 0.125
#bgn_debug
#               T1ijab(i,j,a,b) *= 1.0
#end_debug
               Tijab(i,j,a,b) += T1ijab(i,j,a,b)

            ENDDO a1
            DO b1
               REQUEST Tau_ab(a,i,b1,j) b1
               GET Dbb(b1,b)

               REQUEST Tau_ab_x(a,i,b1,j) b1
               GET Dbb_x(b1,b)

               T1ijab(i,j,a,b) = Tau_ab(a,i,b1,j)*Dbb_x(b1,b)
               T1ijab(i,j,a,b)*= 0.125
#bgn_debug
#               T1ijab(i,j,a,b) *= 1.0
#end_debug
               Tijab(i,j,a,b) += T1ijab(i,j,a,b)

               T1ijab(i,j,a,b) = Tau_ab_x(a,i,b1,j)*Dbb(b1,b)
               T1ijab(i,j,a,b)*= 0.125
#bgn_debug
#               T1ijab(i,j,a,b) *= 1.0
#end_debug
               Tijab(i,j,a,b) += T1ijab(i,j,a,b)

            ENDDO b1

            T1AHijab(i,j,a,b)  = Tabij(a,b,i,j)
            T1AHijab(i,j,a,b) *= Fact
            Tijab(i,j,a,b)    += T1AHijab(i,j,a,b)

            PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)
      ENDPARDO a, b, i, j

# Final term in Eq. 33 

      PARDO a, b
            allocate Lbb(b,*)
            allocate Lbb_x(b,*)
            allocate Lbb_xx(b,*)

            DO j
            DO b1
               GET l1b_old(j,b1)
               GET t1b_old(b,j)
               Tbb(b,b1)  = t1b_old(b,j)*l1b_old(j,b1)
               Lbb(b,b1) += Tbb(b,b1)

               GET l1b_old_x(j,b1)
               GET t1b_old_x(b,j)
               Tbb(b,b1)  = t1b_old(b,j)*l1b_old_x(j,b1)
               Lbb_x(b,b1) += Tbb(b,b1)

               Tbb(b,b1)  = t1b_old_x(b,j)*l1b_old(j,b1)
               Lbb_xx(b,b1) += Tbb(b,b1)
            ENDDO b1
            ENDDO j
            allocate Lbj(b,*)
            allocate Lbj_x(b,*)
            allocate Lbj_xx1(b,*)
            allocate Lbj_xx2(b,*)
            DO b1
            DO j
               GET t1b_old(b1,j)
               Tbj(b,j)  = Lbb_x(b,b1)*t1b_old(b1,j)
               Lbj_x(b,j) += Tbj(b,j)
                 
               Tbj(b,j)  = Lbb(b,b1)*t1b_old(b1,j)
               Lbj(b,j) += Tbj(b,j)
 
               Tbj(b,j)  = Lbb_xx(b,b1)*t1b_old(b1,j)
               Lbj_xx2(b,j) += Tbj(b,j)

               GET t1b_old_x(b1,j)
               Tbj(b,j)    = Lbb(b,b1)*t1b_old_x(b1,j)
               Lbj_xx1(b,j) += Tbj(b,j)
            ENDDO j
            ENDDO b1
            deallocate Lbb(b,*)
            deallocate Lbb_x(b,*)
            deallocate Lbb_xx(b,*)
            DO i
               GET t1a_old(a,i)
               GET t1a_old_x(a,i)
               DO j
                  Tijab(i,j,a,b)  = t1a_old_x(a,i)^Lbj(b,j)
                  Tijab(i,j,a,b) *= 0.375
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)

                  Tijab(i,j,a,b)  = t1a_old(a,i)^Lbj_x(b,j)
                  Tijab(i,j,a,b) *= 0.375
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)

                  Tijab(i,j,a,b)  = t1a_old(a,i)^Lbj_xx1(b,j)
                  Tijab(i,j,a,b) *= 0.375
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)

                  Tijab(i,j,a,b)  = t1a_old(a,i)^Lbj_xx2(b,j)
                  Tijab(i,j,a,b) *= 0.375
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)

               ENDDO j
            ENDDO i
            deallocate Lbj(b,*)
            deallocate Lbj_x(b,*)
            deallocate Lbj_xx1(b,*)
            deallocate Lbj_xx2(b,*)
      ENDPARDO a, b

      PARDO a, b
            allocate Laa(a,*)
            allocate Laa_x(a,*)
            allocate Laa_xx(a,*)
            DO i
               GET t1a_old(a,i)
               GET t1a_old_x(a,i)
               DO a1
                  GET l1a_old(i,a1)
                  GET l1a_old_x(i,a1)
                  Taa(a,a1)  = t1a_old(a,i)*l1a_old(i,a1)
                  Laa(a,a1) += Taa(a,a1)
               
                  Taa(a,a1)  = t1a_old(a,i)*l1a_old_x(i,a1)
                  Laa_x(a,a1) += Taa(a,a1)

                  Taa(a,a1)  = t1a_old_x(a,i)*l1a_old(i,a1)
                  Laa_xx(a,a1) += Taa(a,a1)
               ENDDO a1
            ENDDO i
            allocate Lai(a,*)
            allocate Lai_x(a,*)
            allocate Lai_xx1(a,*)
            allocate Lai_xx2(a,*)
            DO a1
            DO i
               GET t1a_old(a1,i)
               GET t1a_old_x(a1,i)
               Tai(a,i)  = Laa(a,a1)*t1a_old(a1,i)
               Lai(a,i) += Tai(a,i)

               Tai(a,i)    = Laa(a,a1)*t1a_old_x(a1,i)
               Lai_x(a,i) += Tai(a,i)

               Tai(a,i)    = Laa_x(a,a1)*t1a_old(a1,i)
               Lai_xx1(a,i) += Tai(a,i)

               Tai(a,i)    = Laa_xx(a,a1)*t1a_old(a1,i)
               Lai_xx2(a,i) += Tai(a,i)

            ENDDO i
            ENDDO a1
            deallocate Laa(a,*)
            deallocate Laa_x(a,*)
            deallocate Laa_xx(a,*)
            DO j
               GET t1b_old(b,j)
               GET t1b_old_x(b,j)
               DO i
                  Tijab(i,j,a,b)  = t1b_old(b,j)^Lai_x(a,i)
                  Tijab(i,j,a,b) *= 0.375
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)

                  Tijab(i,j,a,b)  = t1b_old(b,j)^Lai_xx1(a,i)
                  Tijab(i,j,a,b) *= 0.375
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)

                  Tijab(i,j,a,b)  = t1b_old_x(b,j)^Lai(a,i)
                  Tijab(i,j,a,b) *= 0.375
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)

                  Tijab(i,j,a,b)  = t1b_old(b,j)^Lai_xx2(a,i)
                  Tijab(i,j,a,b) *= 0.375
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)

               ENDDO i
            ENDDO j
            deallocate Lai(a,*)
            deallocate Lai_x(a,*)
            deallocate Lai_xx1(a,*)
            deallocate Lai_xx2(a,*)
      ENDPARDO a, b

# Sixth-term in Eq. 33 

      PARDO i1, a1, b, j
            GET l1a_old(i1,a1)
            GET t1b_old(b,j)
            GET l1a_old_x(i1,a1)
            GET t1b_old_x(b,j)

            Liabj(i1,a1,b,j)  = l1a_old(i1,a1)^t1b_old(b,j)
            Liabj(i1,a1,b,j) *= 2.0

            Liabj_x(i1,a1,b,j)   = l1a_old_x(i1,a1)^t1b_old(b,j)
            Liabj_x1(i1,a1,b,j)  = l1a_old(i1,a1)^t1b_old_x(b,j)
            Liabj_x(i1,a1,b,j)  += Liabj_x1(i1,a1,b,j) 
            Liabj_x(i1,a1,b,j)  *= 2.0

            DO j1
            DO b1
               REQUEST T2old_bb(b,j,b1,j1)   b1
               REQUEST L2old_ab(i1,a1,j1,b1) b1
               REQUEST T2old_bb_x(b,j,b1,j1)   b1
               REQUEST L2old_ab_x(i1,a1,j1,b1) b1

               Tiabj(i1,a1,b,j)    = L2old_ab(i1,a1,j1,b1)*T2old_bb(b,j,b1,j1)
               Liabj(i1,a1,b,j)   += Tiabj(i1,a1,b,j)

               Tiabj(i1,a1,b,j)    = L2old_ab(i1,a1,j1,b1)*T2old_bb_x(b,j,b1,j1)
               Liabj_x(i1,a1,b,j) += Tiabj(i1,a1,b,j)

               Tiabj(i1,a1,b,j)    = L2old_ab_x(i1,a1,j1,b1)*T2old_bb(b,j,b1,j1)
               Liabj_x(i1,a1,b,j) += Tiabj(i1,a1,b,j)
            ENDDO b1
            ENDDO j1
            DO i
            DO a
               REQUEST T2old_ab(a,i,b,j)   a
               REQUEST L2old_aa(i1,a1,i,a) a

               REQUEST T2old_ab_x(a,i,b,j)   a
               REQUEST L2old_aa_x(i1,a1,i,a) a

               Tiabj(i1,a1,b,j)  = L2old_aa(i1,a1,i,a)*T2old_ab(a,i,b,j)
               Liabj(i1,a1,b,j) += Tiabj(i1,a1,b,j)

               Tiabj(i1,a1,b,j)  = L2old_aa(i1,a1,i,a)*T2old_ab_x(a,i,b,j)
               Liabj_x(i1,a1,b,j) += Tiabj(i1,a1,b,j)

               Tiabj(i1,a1,b,j)  = L2old_aa_x(i1,a1,i,a)*T2old_ab(a,i,b,j)
               Liabj_x(i1,a1,b,j) += Tiabj(i1,a1,b,j) 
            ENDDO a
            ENDDO i
            DO i
               GET t1a_old(a1,i)
               GET t1a_old_x(a1,i)
               DO a
                  REQUEST T2old_aa(a,i1,a1,i) a
                  REQUEST T2old_aa_x(a,i1,a1,i) a
                  GET t1a_old(a,i1)
                  GET t1a_old_x(a,i1)

                  tai(a1,i)              = t1a_old(a1,i)
                  Tiaia(i,a,i1,a1)       = t1a_old(a,i1)^tai(a1,i)
                  Tiaia(i,a,i1,a1)      *= 2.0
#bgn_debug
#                  Tiaia(i,a,i1,a1) *= 1.0
#end_debug
                  T1iaia(i,a,i1,a1)      = T2old_aa(a,i1,a1,i)
#bgn_debug
#                  T1iaia(i,a,i1,a1) *= 1.0
#end_debug
                  Tiaia(i,a,i1,a1)      += T1iaia(i,a,i1,a1)

                  Tiabj(i,a,b,j)         = Tiaia(i,a,i1,a1)*Liabj_x(i1,a1,b,j)
                  Tijab(i,j,a,b)         = Tiabj(i,a,b,j)
                  Tijab(i,j,a,b)        *= -0.0625
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)

                  tai(a1,i)              = t1a_old_x(a1,i)
                  Tiaia(i,a,i1,a1 )      = t1a_old(a,i1)^tai(a1,i)
                  tai(a1,i)              = t1a_old(a1,i)
                  T1iaia(i,a,i1,a1)      = t1a_old_x(a,i1)^tai(a1,i)
                  Tiaia(i,a,i1,a1)      += T1iaia(i,a,i1,a1) 
                  Tiaia(i,a,i1,a1)      *= 2.0
#bgn_debug
#                  Tiaia(i,a,i1,a1) *= 1.0
#end_debug
                  T1iaia(i,a,i1,a1)      = T2old_aa_x(a,i1,a1,i)
#bgn_debug
#                  T1iaia(i,a,i1,a1) *= 1.0
#end_debug
                  Tiaia(i,a,i1,a1)      += T1iaia(i,a,i1,a1)

                  Tiabj(i,a,b,j)         = Tiaia(i,a,i1,a1)*Liabj(i1,a1,b,j)
                  Tijab(i,j,a,b)         = Tiabj(i,a,b,j)
                  Tijab(i,j,a,b)        *= -0.0625
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)

               ENDDO a
            ENDDO i
      ENDPARDO i1, a1, b, j

      PARDO j2, b2, b, j
            GET l1b_old(j2,b2)
            GET t1b_old(b,j)

            GET l1b_old_x(j2,b2)
            GET t1b_old_x(b,j)

            Ljbbj(j2,b2,b,j)  = l1b_old(j2,b2)^t1b_old(b,j)
            Ljbbj(j2,b2,b,j) *= 2.0

            Ljbbj_x(j2,b2,b,j)  = l1b_old(j2,b2)^t1b_old_x(b,j)
            Ljbbj_x1(j2,b2,b,j) = l1b_old_x(j2,b2)^t1b_old(b,j)
            Ljbbj_x(j2,b2,b,j) += Ljbbj_x1(j2,b2,b,j)
            Ljbbj_x(j2,b2,b,j) *= 2.0

            DO j1
            DO b1  
               REQUEST T2old_bb(b,j,b1,j1)   b1
               REQUEST L2old_bb(j2,b2,j1,b1) b1
               REQUEST T2old_bb_x(b,j,b1,j1)   b1
               REQUEST L2old_bb_x(j2,b2,j1,b1) b1

               Tjbbj(j2,b2,b,j)    = L2old_bb(j2,b2,j1,b1)*T2old_bb(b,j,b1,j1)
               Ljbbj(j2,b2,b,j)   += Tjbbj(j2,b2,b,j)

               Tjbbj(j2,b2,b,j)    = L2old_bb(j2,b2,j1,b1)*T2old_bb_x(b,j,b1,j1)
               Ljbbj_x(j2,b2,b,j) += Tjbbj(j2,b2,b,j)

               Tjbbj(j2,b2,b,j)    = L2old_bb_x(j2,b2,j1,b1)*T2old_bb(b,j,b1,j1)
               Ljbbj_x(j2,b2,b,j) += Tjbbj(j2,b2,b,j)

            ENDDO b1  
            ENDDO j1 
            DO i 
            DO a  
               REQUEST T2old_ab(a,i,b,j)   a 
               REQUEST L2old_ab(i,a,j2,b2) a 

               REQUEST T2old_ab_x(a,i,b,j)   a
               REQUEST L2old_ab_x(i,a,j2,b2) a

               Tjbbj(j2,b2,b,j)  = L2old_ab(i,a,j2,b2)*T2old_ab(a,i,b,j)
               Ljbbj(j2,b2,b,j) += Tjbbj(j2,b2,b,j)

               Tjbbj(j2,b2,b,j)  = L2old_ab(i,a,j2,b2)*T2old_ab_x(a,i,b,j)
               Ljbbj_x(j2,b2,b,j) += Tjbbj(j2,b2,b,j)

               Tjbbj(j2,b2,b,j)  = L2old_ab_x(i,a,j2,b2)*T2old_ab(a,i,b,j)
               Ljbbj_x(j2,b2,b,j) += Tjbbj(j2,b2,b,j)
            ENDDO a  
            ENDDO i 
            Tbjbj(b2,j2,b,j) = Ljbbj(j2,b2,b,j)
            Tbjbj_x(b2,j2,b,j) = Ljbbj_x(j2,b2,b,j)
            DO i 
            DO a 
               REQUEST T2old_ab(a,i,b2,j2) a 
               REQUEST T2old_ab_x(a,i,b2,j2) a

               Taibj(a,i,b,j)         = T2old_ab(a,i,b2,j2)*Tbjbj_x(b2,j2,b,j)
               Tijab(i,j,a,b)         = Taibj(a,i,b,j)
               Tijab(i,j,a,b)        *= 0.0625 #-0.125
#bgn_debug
#               Tijab(i,j,a,b) *= 1.0
#end_debug
               PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)

               Taibj(a,i,b,j)         = T2old_ab_x(a,i,b2,j2)*Tbjbj(b2,j2,b,j)
               Tijab(i,j,a,b)         = Taibj(a,i,b,j)
               Tijab(i,j,a,b)        *= 0.0625 #-0.125
#bgn_debug
#               Tijab(i,j,a,b) *= 1.0
#end_debug
               PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)
            ENDDO a 
            ENDDO i 
      ENDPARDO j2, b2, b, j 

      PARDO j1, b1, a, i
            GET l1b_old(j1,b1)
            GET t1a_old(a,i)

            GET l1b_old_x(j1,b1)
            GET t1a_old_x(a,i)

            Ljbai(j1,b1,a,i)  = l1b_old(j1,b1)^t1a_old(a,i)
            Ljbai(j1,b1,a,i) *= 2.0

            Ljbai_x(j1,b1,a,i)   = l1b_old(j1,b1)^t1a_old_x(a,i)
            Ljbai_x1(j1,b1,a,i)  = l1b_old_x(j1,b1)^t1a_old(a,i)
            Ljbai_x(j1,b1,a,i)  += Ljbai_x1(j1,b1,a,i)
            Ljbai_x(j1,b1,a,i) *= 2.0

            DO i1 
            DO a1  
               REQUEST T2old_aa(a,i,a1,i1)   a1
               REQUEST L2old_ab(i1,a1,j1,b1) a1

               REQUEST T2old_aa_x(a,i,a1,i1)   a1
               REQUEST L2old_ab_x(i1,a1,j1,b1) a1

               Tjbai(j1,b1,a,i)  = L2old_ab(i1,a1,j1,b1)*T2old_aa(a,i,a1,i1)
               Ljbai(j1,b1,a,i) += Tjbai(j1,b1,a,i)

               Tjbai(j1,b1,a,i)  = L2old_ab(i1,a1,j1,b1)*T2old_aa_x(a,i,a1,i1)
               Ljbai_x(j1,b1,a,i) += Tjbai(j1,b1,a,i)

               Tjbai(j1,b1,a,i)  = L2old_ab_x(i1,a1,j1,b1)*T2old_aa(a,i,a1,i1)
               Ljbai_x(j1,b1,a,i) += Tjbai(j1,b1,a,i)
            ENDDO a1  
            ENDDO i1 
            DO j 
            DO b  
               REQUEST T2old_ab(a,i,b,j)   b 
               REQUEST L2old_bb(j,b,j1,b1) b 

               REQUEST T2old_ab_x(a,i,b,j)   b
               REQUEST L2old_bb_x(j,b,j1,b1) b

               Tjbai(j1,b1,a,i)  = L2old_bb(j,b,j1,b1)*T2old_ab(a,i,b,j)
               Ljbai(j1,b1,a,i) += Tjbai(j1,b1,a,i)

               Tjbai(j1,b1,a,i)    = L2old_bb(j,b,j1,b1)*T2old_ab_x(a,i,b,j)
               Ljbai_x(j1,b1,a,i) += Tjbai(j1,b1,a,i)

               Tjbai(j1,b1,a,i)    = L2old_bb_x(j,b,j1,b1)*T2old_ab(a,i,b,j)
               Ljbai_x(j1,b1,a,i) += Tjbai(j1,b1,a,i)
 
            ENDDO b  
            ENDDO j 
            DO j 
               GET t1b_old(b1,j) 
               tbj(b1,j) = t1b_old(b1,j) 
               GET t1b_old_x(b1,j)
               tbj_x(b1,j) = t1b_old_x(b1,j)
               DO b 
                  REQUEST T2old_bb(b,j1,b1,j) j
                  GET t1b_old(b,j1)
    
                  REQUEST T2old_bb_x(b,j1,b1,j) j
                  GET t1b_old_x(b,j1)
 
                  Tjbjb(j,b,j1,b1)       = t1b_old(b,j1)^tbj(b1,j)
                  Tjbjb(j,b,j1,b1)      *= 2.0
#bgn_debug
#                  Tjbjb(j,b,j1,b1) *= 1.0
#end_debug
                  T1jbjb(j,b,j1,b1)      = T2old_bb(b,j1,b1,j)
#bgn_debug
#                  T1jbjb(j,b,j1,b1) *= 1.0
#end_debug
                  Tjbjb(j,b,j1,b1)      += T1jbjb(j,b,j1,b1)
                  Tjbai(j,b,a,i)         = Tjbjb(j,b,j1,b1)*Ljbai_x(j1,b1,a,i)
                  Tijab(i,j,a,b)         = Tjbai(j,b,a,i)
                  Tijab(i,j,a,b)        *= -0.0625 #-0.125
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)

                  Tjbjb(j,b,j1,b1)       = t1b_old(b,j1)^tbj_x(b1,j)
                  T1jbjb(j,b,j1,b1)      = t1b_old_x(b,j1)^tbj(b1,j)
                  Tjbjb(j,b,j1,b1)      += T1jbjb(j,b,j1,b1)
                  Tjbjb(j,b,j1,b1)      *= 2.0
#bgn_debug
#                  Tjbjb(j,b,j1,b1) *= 1.0
#end_debug
                  T1jbjb(j,b,j1,b1)      = T2old_bb_x(b,j1,b1,j)
#bgn_debug
#                  T1jbjb(j,b,j1,b1) *= 1.0
#end_debug
                  Tjbjb(j,b,j1,b1)      += T1jbjb(j,b,j1,b1)
                  Tjbai(j,b,a,i)         = Tjbjb(j,b,j1,b1)*Ljbai(j1,b1,a,i)
                  Tijab(i,j,a,b)         = Tjbai(j,b,a,i)
                  Tijab(i,j,a,b)        *= -0.0625 #-0.125
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)
               ENDDO b 
            ENDDO j 
      ENDPARDO j1, b1, a, i 

      PARDO i2, a2, a, i
            GET l1a_old(i2,a2)
            GET t1a_old(a,i)
            
            GET l1a_old_x(i2,a2)
            GET t1a_old_x(a,i)

            Liaai(i2,a2,a,i)  = l1a_old(i2,a2)^t1a_old(a,i)
            Liaai(i2,a2,a,i) *= 2.0  

            Liaai_x(i2,a2,a,i)   = l1a_old(i2,a2)^t1a_old_x(a,i)
            Liaai_x1(i2,a2,a,i)  = l1a_old_x(i2,a2)^t1a_old(a,i)
            Liaai_x(i2,a2,a,i)  += Liaai_x1(i2,a2,a,i)
            Liaai_x(i2,a2,a,i) *= 2.0
       
            DO i1 
            DO a1  
               REQUEST T2old_aa(a,i,a1,i1)   a1
               REQUEST L2old_aa(i2,a2,i1,a1) a1

               REQUEST T2old_aa_x(a,i,a1,i1)   a1
               REQUEST L2old_aa_x(i2,a2,i1,a1) a1

               Tiaai(i2,a2,a,i)  = L2old_aa(i2,a2,i1,a1)*T2old_aa(a,i,a1,i1)
               Liaai(i2,a2,a,i) += Tiaai(i2,a2,a,i)

               Tiaai(i2,a2,a,i)    = L2old_aa(i2,a2,i1,a1)*T2old_aa_x(a,i,a1,i1)
               Liaai_x(i2,a2,a,i) += Tiaai(i2,a2,a,i)

              Tiaai(i2,a2,a,i)    = L2old_aa_x(i2,a2,i1,a1)*T2old_aa(a,i,a1,i1)
              Liaai_x(i2,a2,a,i) += Tiaai(i2,a2,a,i)
            ENDDO a1
            ENDDO i1
            DO j
            DO b
               REQUEST T2old_ab(a,i,b,j)   b
               REQUEST L2old_ab(i2,a2,j,b) b
         
               REQUEST T2old_ab_x(a,i,b,j)   b
               REQUEST L2old_ab_x(i2,a2,j,b) b

               Tiaai(i2,a2,a,i)  = L2old_ab(i2,a2,j,b)*T2old_ab(a,i,b,j)
               Liaai(i2,a2,a,i) += Tiaai(i2,a2,a,i)

               Tiaai(i2,a2,a,i)  = L2old_ab(i2,a2,j,b)*T2old_ab_x(a,i,b,j)
               Liaai_x(i2,a2,a,i) += Tiaai(i2,a2,a,i)

               Tiaai(i2,a2,a,i)  = L2old_ab_x(i2,a2,j,b)*T2old_ab(a,i,b,j)
               Liaai_x(i2,a2,a,i) += Tiaai(i2,a2,a,i)
            ENDDO b
            ENDDO j
            Taiai(a,i,a2,i2) = Liaai(i2,a2,a,i)
            Taiai_x(a,i,a2,i2) = Liaai_x(i2,a2,a,i)
            DO j
            DO b
               REQUEST T2old_ab(a2,i2,b,j) b
               REQUEST T2old_ab_x(a2,i2,b,j) b
#              Tijab(i,j,a,b)      = T2old_ab(a2,i2,b,j)*Liaai(i2,a2,a,i)
               Taibj(a,i,b,j)      = Taiai(a,i,a2,i2)*T2old_ab_x(a2,i2,b,j)
               Tijab(i,j,a,b)      = Taibj(a,i,b,j)
               Tijab(i,j,a,b)     *= 0.0625 #-0.125
#bgn_debug
#               Tijab(i,j,a,b) *= 1.0
#end_debug
               PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)
              
               Taibj(a,i,b,j)      = Taiai_x(a,i,a2,i2)*T2old_ab(a2,i2,b,j)
               Tijab(i,j,a,b)      = Taibj(a,i,b,j)
               Tijab(i,j,a,b)     *= 0.0625 #-0.125
#bgn_debug
#               Tijab(i,j,a,b) *= 1.0
#end_debug
               PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)
            ENDDO b
            ENDDO j
      ENDPARDO i2, a2, a, i

#------------------------------------------------------------------

      PARDO b, b1, i1, i
            Tbibi(b,i,b1,i1) = 0.0
            Tbibi_x(b,i,b1,i1) = 0.0

            DO j
            DO a
               REQUEST T2old_ab(a,i,b,j)   a
               REQUEST L2old_ab(i1,a,j,b1) a
               REQUEST T2old_ab_x(a,i,b,j)   a
               REQUEST L2old_ab_x(i1,a,j,b1) a

               Tbiaj(b,i,a,j)    = T2old_ab(a,i,b,j)
               Tajbi(a,j,b1,i1)  = L2old_ab(i1,a,j,b1)
               T1bibi(b,i,b1,i1) = Tbiaj(b,i,a,j)*Tajbi(a,j,b1,i1)
               Tbibi(b,i,b1,i1) += T1bibi(b,i,b1,i1)

               Tbiaj(b,i,a,j)    = T2old_ab_x(a,i,b,j)
               T1bibi(b,i,b1,i1) = Tbiaj(b,i,a,j)*Tajbi(a,j,b1,i1)
               Tbibi_x(b,i,b1,i1) += T1bibi(b,i,b1,i1)

               Tajbi(a,j,b1,i1)  = L2old_ab_x(i1,a,j,b1)
               Tbiaj(b,i,a,j)    = T2old_ab(a,i,b,j)
               T1bibi(b,i,b1,i1) = Tajbi(a,j,b1,i1)*Tbiaj(b,i,a,j)
               Tbibi_x(b,i,b1,i1) += T1bibi(b,i,b1,i1)

            ENDDO a
            ENDDO j
            Lbibi(b,i1,b1,i)   = Tbibi(b,i,b1,i1)
            Lbibi_x(b,i1,b1,i) = Tbibi_x(b,i,b1,i1)
            DO a
               GET t1a_old(a,i1)
               GET t1a_old_x(a,i1)
               DO j
                  REQUEST T2old_ab(a,i1,b1,j) j 
                  GET t1b_old(b1,j)
        
                  REQUEST T2old_ab_x(a,i1,b1,j) j
                  GET t1b_old_x(b1,j)

                  Taibj(a,i1,b1,j)      = t1a_old(a,i1)^t1b_old(b1,j)
                  Taibj(a,i1,b1,j)      *= 2.0 
#bgn_debug
#                  Taibj(a,i1,b1,j) *= 1.0
#                  Taibj(a,i1,b1,j)      += T2old_ab(a,i1,b1,j)
#end_debug
                  Taibj(a,i1,b1,j)      += T2old_ab(a,i1,b1,j)

                  Tijab(i,j,a,b)         = Taibj(a,i1,b1,j)*Lbibi_x(b,i1,b1,i)
                  Tijab(i,j,a,b)        *= 0.0625 #-0.125  
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)

                  Taibj(a,i1,b1,j)        = t1a_old(a,i1)^t1b_old_x(b1,j)
                  Taibj_x(a,i1,b1,j)      = t1a_old_x(a,i1)^t1b_old(b1,j)
                  Taibj(a,i1,b1,j)       += Taibj_x(a,i1,b1,j)
                  Taibj(a,i1,b1,j)       *= 2.0
#bgn_debug
#                  Taibj(a,i1,b1,j) *= 1.0
#                  Taibj(a,i1,b1,j)       += T2old_ab_x(a,i1,b1,j)
#end_debug
                  Taibj(a,i1,b1,j)       += T2old_ab_x(a,i1,b1,j)
                  Tijab(i,j,a,b)         = Taibj(a,i1,b1,j)*Lbibi(b,i1,b1,i)
                  Tijab(i,j,a,b)        *= 0.0625 #-0.125  
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)
               ENDDO j
            ENDDO a
      ENDPARDO b, b1, i1, i

      PARDO a, a1, j1, j
            Lajaj(a,j1,a1,j) = 0.0 
            Lajaj_x(a,j1,a1,j) = 0.0

            DO i
            DO b
               REQUEST T2old_ab(a,i,b,j)   b 
               REQUEST L2old_ab(i,a1,j1,b) b 

               REQUEST T2old_ab_x(a,i,b,j)   b
               REQUEST L2old_ab_x(i,a1,j1,b) b

               Tajaj(a,j1,a1,j)    = T2old_ab(a,i,b,j)*L2old_ab(i,a1,j1,b)
               Lajaj(a,j1,a1,j)   += Tajaj(a,j1,a1,j)

               Tajaj(a,j1,a1,j)    = T2old_ab(a,i,b,j)*L2old_ab_x(i,a1,j1,b)
               Lajaj_x(a,j1,a1,j) += Tajaj(a,j1,a1,j)       
       
               Tajaj(a,j1,a1,j)    = T2old_ab_x(a,i,b,j)*L2old_ab(i,a1,j1,b)
               Lajaj_x(a,j1,a1,j) += Tajaj(a,j1,a1,j) 
 
            ENDDO b
            ENDDO i
            DO b
               GET t1b_old(b,j1)
               GET t1b_old_x(b,j1)
               DO i
                  REQUEST T2old_ab(a1,i,b,j1) i
                  GET t1a_old(a1,i)
                  
                  REQUEST T2old_ab_x(a1,i,b,j1) i
                  GET t1a_old_x(a1,i)

                  Taibj(a1,i,b,j1)       = t1a_old(a1,i)^t1b_old(b,j1)
                  Taibj(a1,i,b,j1)      *= 2.0
#bgn_debug
#                  Taibj(a1,i,b,j1) *= 1.0
#                  Taibj(a1,i,b,j1)      += T2old_ab(a1,i,b,j1)
#end_debug
                  Taibj(a1,i,b,j1)      += T2old_ab(a1,i,b,j1)

                  Tijab(i,j,a,b)         = Taibj(a1,i,b,j1)*Lajaj_x(a,j1,a1,j)
                  Tijab(i,j,a,b)        *= 0.0625 #-0.125  
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)

                  Taibj(a1,i,b,j1)       = t1a_old(a1,i)^t1b_old_x(b,j1)
                  Taibj_x(a1,i,b,j1)     = t1a_old_x(a1,i)^t1b_old(b,j1)
                  Taibj(a1,i,b,j1)      += Taibj_x(a1,i,b,j1) 
                  Taibj(a1,i,b,j1)      *= 2.0
#bgn_debug
#                  Taibj(a1,i,b,j1) *= 1.0
#                  Taibj(a1,i,b,j1)      += T2old_ab_x(a1,i,b,j1)
#end_debug
                  Taibj(a1,i,b,j1)      += T2old_ab_x(a1,i,b,j1)

                  Tijab(i,j,a,b)         = Taibj(a1,i,b,j1)*Lajaj(a,j1,a1,j)
                  Tijab(i,j,a,b)        *= 0.0625 #-0.125  
#bgn_debug
#                  Tijab(i,j,a,b) *= 1.0
#end_debug
                  PREPARE Dijab_ab_x(i,j,a,b) += Tijab(i,j,a,b)
               ENDDO i
            ENDDO b
      ENDPARDO a, a1, j1, j

      execute server_barrier

#  Back transformation of two indices
#  Two particle contribution to G-tensor: O(pq,rs)*<AB|S_z(1)+S_z(2)pqsr|AB>
#  DAAAA = 1/2 DABAB - DABAB

      PARDO a, sigma, i, j
            Tijax(i,j,a,sigma) = 0.0
            DO b
               REQUEST Dijab_ab_x(i,j,a,b) b 

               Tijab(i,j,a,b)  = Dijab_ab_x(i,j,a,b)
               Tijab(i,j,a,b) *= -0.5
#bgn_debug              
#               Tijab(i,j,a,b) *= -0.5
#               Tijab(i,j,a,b) *= 1.0
#end_debug
              
               T1ijax(i,j,a,sigma) = Tijab(i,j,a,b)*cb(sigma,b)
               Tijax(i,j,a,sigma) += T1ijax(i,j,a,sigma)  
            ENDDO b  
            PREPARE Dijax_x(i,j,a,sigma) = Tijax(i,j,a,sigma) 
      ENDPARDO a, sigma, i, j 
      execute server_barrier 

      PARDO lambda, sigma, i, j1 
            Tijxx(i,j1,lambda,sigma) = 0.0  
            DO a  
               REQUEST Dijax_x(i,j1,a,sigma) a  
               T1ijxx(i,j1,lambda,sigma)  = Dijax_x(i,j1,a,sigma)*ca(lambda,a)
               Tijxx(i,j1,lambda,sigma)  += T1ijxx(i,j1,lambda,sigma)
            ENDDO a 
            Tijxx(i,j1,lambda,sigma)         *= 8.0  
            PREPARE Dijxx_x(i,j1,lambda,sigma) += Tijxx(i,j1,lambda,sigma)
      ENDPARDO lambda, sigma, i, j1 
      execute server_barrier 

# Done backtransformation 
      ENDPROC DIJABAB_X
#     --------------------
#-----------------------------------------------------------------
      PROC DIJABBB_X
#     --------------
      PARDO j1,j,b1,b 
         T1jjbb(j1,j,b1,b) = 0.0
         T1bbjj(b1,b,j1,j) = 0.0
         PREPARE Dijab_bb_x(j1,j,b1,b) = T1jjbb(j1,j,b1,b)
      ENDPARDO j1,j,b1,b

      EXECUTE SERVER_BARRIER

# Djj 
      PARDO j, j1
            GET Gmi_b_x(j,j1)
            PUT Djj_x(j,j1) += Gmi_b_x(j,j1)
      ENDPARDO j, j1
      PARDO j, j1, b
            GET l1b_old(j1,b)
            GET t1b_old(b,j)
            GET l1b_old_x(j1,b)
            GET t1b_old_x(b,j)

            Tjj(j,j1)        = l1b_old(j1,b)*t1b_old_x(b,j)
            PUT Djj_x(j,j1) += Tjj(j,j1)

            Tjj(j,j1)        = l1b_old_x(j1,b)*t1b_old(b,j)
            PUT Djj_x(j,j1) += Tjj(j,j1)
      ENDPARDO j, j1, b

      PARDO b1, b
            GET Gae_b_x(b1,b)
            PUT Dbb_x(b1,b) += Gae_b_x(b1,b)
      ENDPARDO b1, b
      PARDO b1, b, j
            GET l1b_old(j,b1)
            GET t1b_old(b,j)
            
            GET l1b_old_x(j,b1)
            GET t1b_old_x(b,j)

            Tbb(b1,b)         = t1b_old(b,j)*l1b_old_x(j,b1)
            Tbb(b1,b)       *= -1.0
            PUT Dbb_x(b1,b) += Tbb(b1,b)

            Tbb(b1,b)        = t1b_old_x(b,j)*l1b_old(j,b1)
            Tbb(b1,b)       *= -1.0
            PUT Dbb_x(b1,b) += Tbb(b1,b)
      ENDPARDO b1, b, j
      execute sip_barrier 
#bgn_debug
#      pardo b1, b
#            get  Dbb_x(b1,b) 
#            execute dump_amp Dbb_x(b1,b)
#      endpardo b1, b
#end_debug

# Done one-particle intermediates 
# Terms 1-5 in Eq. 33 
# Terms 1-5 in Eq. 33 

      PARDO b, b1, j, j1
            REQUEST Tau_bb_x(b,j,b1,j1)   b
            REQUEST L2old_bb_x(j,b,j1,b1) b 

            Tjjbb(j,j1,b,b1)  = Tau_bb_x(b,j,b1,j1)
            Tjjbb(j,j1,b,b1) *= 0.125

# ABIJ_X begin
            T1bbjj(b,b1,j,j1) = L2old_bb_x(j,b,j1,b1) 
            Tbbjj(b,b1,j,j1)  = T1bbjj(b,b1,j,j1)
            Tbbjj(b,b1,j,j1) *= 0.125
# ABIJ_X end

            DO j2
               REQUEST Tau_bb(b,j2,b1,j1) j2
               GET Djj(j,j2)
               REQUEST Tau_bb_x(b,j2,b1,j1) j2
               GET Djj_x(j,j2)

               T1jjbb(j,j1,b,b1) = Tau_bb(b,j2,b1,j1)*Djj_x(j,j2)
               T1jjbb(j,j1,b,b1)*= -0.125
               Tjjbb(j,j1,b,b1) += T1jjbb(j,j1,b,b1)

               T1jjbb(j,j1,b,b1) = Tau_bb_x(b,j2,b1,j1)*Djj(j,j2)
               T1jjbb(j,j1,b,b1)*= -0.125
               Tjjbb(j,j1,b,b1) += T1jjbb(j,j1,b,b1)

               DO j3
                  REQUEST Tau_bb(b,j2,b1,j3)     j3
                  REQUEST Vijmn_bbbb(j,j1,j2,j3) j3
                 
                  REQUEST Tau_bb_x(b,j2,b1,j3)     j3
                  REQUEST Vijmn_bbbb_x(j,j1,j2,j3) j3

                  T2jjbb(j2,j3,b,b1) = Tau_bb(b,j2,b1,j3)
                  T2jjbb_x(j2,j3,b,b1) = Tau_bb_x(b,j2,b1,j3)

                  T1jjbb(j,j1,b,b1)  = Vijmn_bbbb(j,j1,j2,j3)*T2jjbb_x(j2,j3,b,b1)
                  T1jjbb(j,j1,b,b1) *= 0.0625
                  Tjjbb(j,j1,b,b1)  += T1jjbb(j,j1,b,b1)

                  T1jjbb(j,j1,b,b1)  = Vijmn_bbbb_x(j,j1,j2,j3)*T2jjbb(j2,j3,b,b1)
                  T1jjbb(j,j1,b,b1) *= 0.0625
                  Tjjbb(j,j1,b,b1)  += T1jjbb(j,j1,b,b1)

               ENDDO j3
            ENDDO j2
            DO j2
               REQUEST Tau_bb(b,j2,b1,j) j2
               GET Djj(j1,j2)
   
               REQUEST Tau_bb_x(b,j2,b1,j) j2
               GET Djj_x(j1,j2)

               T1jjbb(j,j1,b,b1) = Tau_bb(b,j2,b1,j)*Djj_x(j1,j2)
               T1jjbb(j,j1,b,b1)*= 0.125
               Tjjbb(j,j1,b,b1) += T1jjbb(j,j1,b,b1)

               T1jjbb(j,j1,b,b1) = Tau_bb_x(b,j2,b1,j)*Djj(j1,j2)
               T1jjbb(j,j1,b,b1)*= 0.125
               Tjjbb(j,j1,b,b1) += T1jjbb(j,j1,b,b1)
            ENDDO j2
            DO b2
               REQUEST Tau_bb(b2,j,b1,j1) b2
               GET Dbb(b2,b)
    
               REQUEST Tau_bb_x(b2,j,b1,j1) b2
               GET Dbb_x(b2,b)

               T1jjbb(j,j1,b,b1) = Tau_bb(b2,j,b1,j1)*Dbb_x(b2,b)
               T1jjbb(j,j1,b,b1)*= 0.125
               Tjjbb(j,j1,b,b1) += T1jjbb(j,j1,b,b1)

               T1jjbb(j,j1,b,b1) = Tau_bb_x(b2,j,b1,j1)*Dbb(b2,b)
               T1jjbb(j,j1,b,b1)*= 0.125
               Tjjbb(j,j1,b,b1) += T1jjbb(j,j1,b,b1)
            ENDDO b2
            DO b2
               REQUEST Tau_bb(b2,j,b,j1) b2
               GET Dbb(b2,b1)
            
               REQUEST Tau_bb_x(b2,j,b,j1) b2
               GET Dbb_x(b2,b1)

               T1jjbb(j,j1,b,b1) = Tau_bb(b2,j,b,j1)*Dbb_x(b2,b1)
               T1jjbb(j,j1,b,b1)*= -0.125
               Tjjbb(j,j1,b,b1) += T1jjbb(j,j1,b,b1)

               T1jjbb(j,j1,b,b1) = Tau_bb_x(b2,j,b,j1)*Dbb(b2,b1)
               T1jjbb(j,j1,b,b1)*= -0.125
               Tjjbb(j,j1,b,b1) += T1jjbb(j,j1,b,b1)
            ENDDO b2
#bgn_debug
#              Tjjbb(j,j1,b,b1) *= 1.0
#              Tbbjj(b,b1,j,j1) *= 1.0
#end_debug
                T1AHjjbb(j,j1,b,b1)  = Tbbjj(b,b1,j,j1)
                T1AHjjbb(j,j1,b,b1) *= Fact
                Tjjbb(j,j1,b,b1)    += T1AHjjbb(j,j1,b,b1)

            PREPARE Dijab_bb_x(j,j1,b,b1) += Tjjbb(j,j1,b,b1)
      ENDPARDO b, b1, j, j1

      PARDO b, b1
            allocate L1bb(b1,*)
            allocate L1bb_x(b1,*)
            DO j
            DO b2
               GET l1b_old(j,b2)
               GET t1b_old(b1,j)
               GET l1b_old_x(j,b2)
               GET t1b_old_x(b1,j)

               Tbb(b1,b2)   = t1b_old(b1,j)*l1b_old(j,b2)
               L1bb(b1,b2) += Tbb(b1,b2)

               Tbb(b1,b2)     = t1b_old(b1,j)*l1b_old_x(j,b2)
               L1bb_x(b1,b2) += Tbb(b1,b2)

               Tbb(b1,b2)     = t1b_old_x(b1,j)*l1b_old(j,b2)
               L1bb_x(b1,b2) += Tbb(b1,b2)
            ENDDO b2
            ENDDO j
            allocate L1bj(b1,*)
            allocate L1bj_x(b1,*)
            DO j
            DO b2
               GET t1b_old(b2,j)
               GET t1b_old_x(b2,j)
               Tbj(b1,j)   = L1bb(b1,b2)*t1b_old(b2,j)
               L1bj(b1,j) += Tbj(b1,j)

               Tbj(b1,j)       = L1bb(b1,b2)*t1b_old_x(b2,j)
               L1bj_x(b1,j)   += Tbj(b1,j)
               Tbj(b1,j)      = L1bb_x(b1,b2)*t1b_old(b2,j)
               L1bj_x(b1,j) += Tbj(b1,j)
            ENDDO b2
            ENDDO j
            deallocate L1bb(b1,*)
            deallocate L1bb_x(b1,*)
            DO j
               GET t1b_old(b,j)
               GET t1b_old_x(b,j)
               DO j1
                  Tjjbb(j,j1,b,b1)         = t1b_old_x(b,j)^L1bj(b1,j1)
                  Tjjbb(j,j1,b,b1)        *= 0.375
#bgn_debug
#                  Tjjbb(j1,j,b1,b) *= 0.0
#end_debug
                  PREPARE Dijab_bb_x(j,j1,b,b1) += Tjjbb(j,j1,b,b1)

                  T1jjbb(j,j1,b1,b)        = Tjjbb(j,j1,b,b1)
                  T1jjbb(j,j1,b1,b)       *= -1.0
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug

                  PREPARE Dijab_bb_x(j,j1,b1,b) += T1jjbb(j,j1,b1,b)

                  T1jjbb(j1,j,b,b1)        = Tjjbb(j,j1,b,b1)
                  T1jjbb(j1,j,b,b1)       *= -1.0
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug

                  PREPARE Dijab_bb_x(j1,j,b,b1) += T1jjbb(j1,j,b,b1)

                  T1jjbb(j1,j,b1,b)        = Tjjbb(j,j1,b,b1)
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug

                  PREPARE Dijab_bb_x(j1,j,b1,b) += T1jjbb(j1,j,b1,b)

                  Tjjbb(j,j1,b,b1)         = t1b_old(b,j)^L1bj_x(b1,j1)
                  Tjjbb(j,j1,b,b1)        *= 0.375
#bgn_debug
#                  Tjjbb(j1,j,b1,b) *= 0.0
#end_debug

                  PREPARE Dijab_bb_x(j,j1,b,b1) += Tjjbb(j,j1,b,b1)

                  T1jjbb(j,j1,b1,b)        = Tjjbb(j,j1,b,b1)
                  T1jjbb(j,j1,b1,b)       *= -1.0
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug

                  PREPARE Dijab_bb_x(j,j1,b1,b) += T1jjbb(j,j1,b1,b)

                  T1jjbb(j1,j,b,b1)        = Tjjbb(j,j1,b,b1)
                  T1jjbb(j1,j,b,b1)       *= -1.0
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug

                  PREPARE Dijab_bb_x(j1,j,b,b1) += T1jjbb(j1,j,b,b1)

                  T1jjbb(j1,j,b1,b)        = Tjjbb(j,j1,b,b1)
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug
                  PREPARE Dijab_bb_x(j1,j,b1,b) += T1jjbb(j1,j,b1,b)

               ENDDO j1
            ENDDO j
            deallocate L1bj(b1,*)
            deallocate L1bj_x(b1,*)

      ENDPARDO b, b1
# Sixth-term in Eq. 33 

      PARDO j2, b2, b1, j1
            GET l1b_old(j2,b2)
            GET t1b_old(b1,j1)
            GET l1b_old_x(j2,b2)
            GET t1b_old_x(b1,j1)

            Ljbbj(j2,b2,b1,j1)  = l1b_old(j2,b2)^t1b_old(b1,j1)
            Ljbbj(j2,b2,b1,j1) *= 2.0

            Ljbbj_x(j2,b2,b1,j1)   = l1b_old(j2,b2)^t1b_old_x(b1,j1)
            Ljbbj_x1(j2,b2,b1,j1)  = l1b_old_x(j2,b2)^t1b_old(b1,j1)
            Ljbbj_x(j2,b2,b1,j1)  += Ljbbj_x1(j2,b2,b1,j1)
            Ljbbj_x(j2,b2,b1,j1)  *= 2.0
            DO j3
            DO b3
               REQUEST T2old_bb(b3,j3,b1,j1) b3
               REQUEST L2old_bb(j2,b2,j3,b3) b3
               REQUEST T2old_bb_x(b3,j3,b1,j1) b3
               REQUEST L2old_bb_x(j2,b2,j3,b3) b3

               Tjbbj(j2,b2,b1,j1)  = L2old_bb(j2,b2,j3,b3)*T2old_bb(b3,j3,b1,j1)
               Ljbbj(j2,b2,b1,j1) += Tjbbj(j2,b2,b1,j1)

               Tjbbj(j2,b2,b1,j1)    = L2old_bb(j2,b2,j3,b3)*T2old_bb_x(b3,j3,b1,j1)
               Ljbbj_x(j2,b2,b1,j1) += Tjbbj(j2,b2,b1,j1)

               Tjbbj(j2,b2,b1,j1)    = L2old_bb_x(j2,b2,j3,b3)*T2old_bb(b3,j3,b1,j1)
               Ljbbj_x(j2,b2,b1,j1) += Tjbbj(j2,b2,b1,j1)
            ENDDO b3
            ENDDO j3
            DO i
            DO a
               REQUEST T2old_ab(a,i,b1,j1) a
               REQUEST L2old_ab(i,a,j2,b2) a
               REQUEST T2old_ab_x(a,i,b1,j1) a
               REQUEST L2old_ab_x(i,a,j2,b2) a

               Tjbbj(j2,b2,b1,j1)  = L2old_ab(i,a,j2,b2)*T2old_ab(a,i,b1,j1)
               Ljbbj(j2,b2,b1,j1) += Tjbbj(j2,b2,b1,j1)

               Tjbbj(j2,b2,b1,j1)  = L2old_ab(i,a,j2,b2)*T2old_ab_x(a,i,b1,j1)
               Ljbbj_x(j2,b2,b1,j1) += Tjbbj(j2,b2,b1,j1)

               Tjbbj(j2,b2,b1,j1)  = L2old_ab_x(i,a,j2,b2)*T2old_ab(a,i,b1,j1)
               Ljbbj_x(j2,b2,b1,j1) += Tjbbj(j2,b2,b1,j1)
            ENDDO a
            ENDDO i
            DO j
               GET t1b_old(b2,j)
               tbj(b2,j) = t1b_old(b2,j)
               GET t1b_old_x(b2,j)
               tbj_x(b2,j) = t1b_old_x(b2,j)
               DO b
                  REQUEST T2old_bb(b,j2,b2,j) b
                  GET t1b_old(b,j2)
                  REQUEST T2old_bb_x(b,j2,b2,j) b
                  GET t1b_old_x(b,j2)

                  Tjbjb(j,b,j2,b2)         = t1b_old(b,j2)^tbj(b2,j)
                  Tjbjb(j,b,j2,b2)        *= 2.0
                  T1jbjb(j,b,j2,b2)        = T2old_bb(b,j2,b2,j)
                  Tjbjb(j,b,j2,b2)        += T1jbjb(j,b,j2,b2)

                  Tjbbj(j,b,b1,j1)         = Tjbjb(j,b,j2,b2)*Ljbbj_x(j2,b2,b1,j1)
                  Tjjbb(j,j1,b,b1)         = Tjbbj(j,b,b1,j1)

                  Tjjbb(j,j1,b,b1)        *= -0.0625
#bgn_debug
#                  Tjjbb(j1,j,b1,b) *= 0.0
#end_debug

                  PREPARE Dijab_bb_x(j,j1,b,b1) += Tjjbb(j,j1,b,b1)

                  T1jjbb(j,j1,b1,b)        = Tjjbb(j,j1,b,b1)
                  T1jjbb(j,j1,b1,b)       *= -1.0
                  PREPARE Dijab_bb_x(j,j1,b1,b) += T1jjbb(j,j1,b1,b)

                  T1jjbb(j1,j,b,b1)        = Tjjbb(j,j1,b,b1)
                  T1jjbb(j1,j,b,b1)       *= -1.0
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug

                  PREPARE Dijab_bb_x(j1,j,b,b1) += T1jjbb(j1,j,b,b1)

                  T1jjbb(j1,j,b1,b)        = Tjjbb(j,j1,b,b1)
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug

                  PREPARE Dijab_bb_x(j1,j,b1,b) += T1jjbb(j1,j,b1,b)

                  Tjbjb(j,b,j2,b2)         = t1b_old(b,j2)^tbj_x(b2,j)
                  T1jbjb(j,b,j2,b2)        = t1b_old_x(b,j2)^tbj(b2,j)
                  Tjbjb(j,b,j2,b2)        += T1jbjb(j,b,j2,b2)
                  Tjbjb(j,b,j2,b2)        *= 2.0
                  T1jbjb(j,b,j2,b2)        = T2old_bb_x(b,j2,b2,j)
                  Tjbjb(j,b,j2,b2)        += T1jbjb(j,b,j2,b2)

                  Tjbbj(j,b,b1,j1)         = Tjbjb(j,b,j2,b2)*Ljbbj(j2,b2,b1,j1)
                  Tjjbb(j,j1,b,b1)         = Tjbbj(j,b,b1,j1)

                  Tjjbb(j,j1,b,b1)        *= -0.0625
#bgn_debug
#                  Tjjbb(j1,j,b1,b) *= 0.0
#end_debug

                  PREPARE Dijab_bb_x(j,j1,b,b1) += Tjjbb(j,j1,b,b1)

                  T1jjbb(j,j1,b1,b)        = Tjjbb(j,j1,b,b1)
                  T1jjbb(j,j1,b1,b)       *= -1.0
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug

                  PREPARE Dijab_bb_x(j,j1,b1,b) += T1jjbb(j,j1,b1,b)

                  T1jjbb(j1,j,b,b1)        = Tjjbb(j,j1,b,b1)
                  T1jjbb(j1,j,b,b1)       *= -1.0
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug

                  PREPARE Dijab_bb_x(j1,j,b,b1) += T1jjbb(j1,j,b,b1)

                  T1jjbb(j1,j,b1,b)        = Tjjbb(j,j1,b,b1)
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug
                  PREPARE Dijab_bb_x(j1,j,b1,b) += T1jjbb(j1,j,b1,b)
               ENDDO b
            ENDDO j
      ENDPARDO j2, b2, b1, j1
# Odd spin combination
      PARDO i, a, b1, j1

            Liabj_x(i,a,b1,j1) = 0.0
            Liabj(i,a,b1,j1)   = 0.0

            GET l1a_old(i,a)
            GET t1b_old(b1,j1)
            GET l1a_old_x(i,a)
            GET t1b_old_x(b1,j1)

            Liabj(i,a,b1,j1)  = l1a_old(i,a)^t1b_old(b1,j1)
            Liabj(i,a,b1,j1) *= 2.0

            Liabj_x(i,a,b1,j1)  = l1a_old(i,a)^t1b_old_x(b1,j1)
            Liabj_x1(i,a,b1,j1) = l1a_old_x(i,a)^t1b_old(b1,j1)
            Liabj_x(i,a,b1,j1) += Liabj_x1(i,a,b1,j1)
            Liabj_x(i,a,b1,j1) *= 2.0

            DO j3
            DO b3
               REQUEST T2old_bb(b3,j3,b1,j1) b3
               REQUEST L2old_ab(i,a,j3,b3)   b3
               REQUEST T2old_bb_x(b3,j3,b1,j1) b3
               REQUEST L2old_ab_x(i,a,j3,b3)   b3

               Tiabj(i,a,b1,j1)  = L2old_ab(i,a,j3,b3)*T2old_bb(b3,j3,b1,j1)
               Liabj(i,a,b1,j1) += Tiabj(i,a,b1,j1)

              Tiabj(i,a,b1,j1)    = L2old_ab(i,a,j3,b3)*T2old_bb_x(b3,j3,b1,j1)
              Liabj_x(i,a,b1,j1) += Tiabj(i,a,b1,j1)

              Tiabj(i,a,b1,j1)    = L2old_ab_x(i,a,j3,b3)*T2old_bb(b3,j3,b1,j1)
              Liabj_x(i,a,b1,j1) += Tiabj(i,a,b1,j1)
            ENDDO b3
            ENDDO j3
            DO i1
            DO a1
               REQUEST T2old_ab(a1,i1,b1,j1) a1
               REQUEST L2old_aa(i1,a1,i,a)   a1
               REQUEST T2old_ab_x(a1,i1,b1,j1) a1
               REQUEST L2old_aa_x(i1,a1,i,a)   a1

               Tiabj(i,a,b1,j1)  = L2old_aa(i1,a1,i,a)*T2old_ab(a1,i1,b1,j1)
               Liabj(i,a,b1,j1) += Tiabj(i,a,b1,j1)

               Tiabj(i,a,b1,j1)  = L2old_aa(i1,a1,i,a)*T2old_ab_x(a1,i1,b1,j1)
               Liabj_x(i,a,b1,j1) += Tiabj(i,a,b1,j1)

               Tiabj(i,a,b1,j1)  = L2old_aa_x(i1,a1,i,a)*T2old_ab(a1,i1,b1,j1)
               Liabj_x(i,a,b1,j1) += Tiabj(i,a,b1,j1)
            ENDDO a1
            ENDDO i1
#            Tbjai(b1,j1,a,i) = Liabj(i,a,b1,j1)
#            Tbjai_x(b1,j1,a,i) = Liabj_x(i,a,b1,j1)
            DO j
            DO b
               REQUEST T2old_ab(a,i,b,j) b
               REQUEST T2old_ab_x(a,i,b,j) b

               Tbjbj(b1,j1,b,j)      = Liabj(i,a,b1,j1)*T2old_ab_x(a,i,b,j)
               Tjjbb(j,j1,b,b1)      = Tbjbj(b1,j1,b,j)

               Tjjbb(j,j1,b,b1)     *= 0.0625
#bgn_debug
#                  Tjjbb(j1,j,b1,b) *= 0.0
#end_debug

               PREPARE Dijab_bb_x(j,j1,b,b1) += Tjjbb(j,j1,b,b1)

               T1jjbb(j,j1,b1,b)     = Tjjbb(j,j1,b,b1)
               T1jjbb(j,j1,b1,b)    *= -1.0
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug

               PREPARE Dijab_bb_x(j,j1,b1,b) += T1jjbb(j,j1,b1,b)

               T1jjbb(j1,j,b,b1)     = Tjjbb(j,j1,b,b1)
               T1jjbb(j1,j,b,b1)    *= -1.0
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug

               PREPARE Dijab_bb_x(j1,j,b,b1) += T1jjbb(j1,j,b,b1)

               T1jjbb(j1,j,b1,b)     = Tjjbb(j,j1,b,b1)
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug
               PREPARE Dijab_bb_x(j1,j,b1,b) += T1jjbb(j1,j,b1,b)

               Tbjbj(b1,j1,b,j)      = Liabj_x(i,a,b1,j1)*T2old_ab(a,i,b,j)
               Tjjbb(j,j1,b,b1)      = Tbjbj(b1,j1,b,j)

               Tjjbb(j,j1,b,b1)     *= 0.0625
#bgn_debug
#                  Tjjbb(j1,j,b1,b) *= 0.0
#end_debug

               PREPARE Dijab_bb_x(j,j1,b,b1) += Tjjbb(j,j1,b,b1)

               T1jjbb(j,j1,b1,b)     = Tjjbb(j,j1,b,b1)
               T1jjbb(j,j1,b1,b)    *= -1.0
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug

               PREPARE Dijab_bb_x(j,j1,b1,b) += T1jjbb(j,j1,b1,b)

               T1jjbb(j1,j,b,b1)     = Tjjbb(j,j1,b,b1)
               T1jjbb(j1,j,b,b1)    *= -1.0
#bgn_debug
#                  T1jjbb(j1,j,b1,b) *= 0.0
#end_debug

               PREPARE Dijab_bb_x(j1,j,b,b1) += T1jjbb(j1,j,b,b1)

               T1jjbb(j1,j,b1,b)     = Tjjbb(j,j1,b,b1)
#bgn_debug
#               T1jjbb(j1,j,b1,b) *= 0.0
#end_debug
               PREPARE Dijab_bb_x(j1,j,b1,b) += T1jjbb(j1,j,b1,b)
            ENDDO b
            ENDDO j
      ENDPARDO i, a, b1, j1
      execute server_barrier

#  Back transformation of two indices
#  Two particle contribution to G-tensor: O(pq,rs)*<AB|S_z(1)+S_z(2)pqsr|AB>
#  DBBBB = -1/2 DBBBB - DBBBB
#
      PARDO b, sigma, j, j1
            Tjjbx(j,j1,b,sigma) = 0.0
            DO b1
               REQUEST Dijab_bb_x(j,j1,b,b1) b1
 
               T1jjbb(j,j1,b,b1)  = Dijab_bb_x(j,j1,b,b1)
               T1jjbb(j,j1,b,b1) *= -1.5
#bgn_debug
#               T1jjbb(j,j1,b,b1) *= -1.5
#               T1jjbb(j,j1,b,b1) *= 1.0
#end_debug
               T1jjbx(j,j1,b,sigma) = T1jjbb(j,j1,b,b1)*cb(sigma,b1)
               Tjjbx(j,j1,b,sigma) += T1jjbx(j,j1,b,sigma)
            ENDDO b1
            PREPARE Djjbx_x(j,j1,b,sigma) = Tjjbx(j,j1,b,sigma)
      ENDPARDO b, sigma, j, j1
      execute server_barrier
#bgn_debug
#      suma = 0.0
#      PARDO b, sigma, j, j1
#               REQUEST Djjbx_x(j,j1,b,sigma) j
#               tmp =  Djjbx_x(j,j1,b,sigma) * Djjbx_x(j,j1,b,sigma)
#               suma += tmp
#
#      ENDPARDO b, sigma, j, j1
#      execute print_scalar suma 
#end_debug
      
      PARDO lambda, sigma, j, j1
            Tjjxx(j,j1,lambda,sigma) = 0.0
            DO b
               REQUEST Djjbx_x(j,j1,b,sigma) b
               T1jjxx(j,j1,lambda,sigma)  = Djjbx_x(j,j1,b,sigma)*cb(lambda,b)
               Tjjxx(j,j1,lambda,sigma)  += T1jjxx(j,j1,lambda,sigma)
            ENDDO b
          Tjjxx(j,j1,lambda,sigma)         *= 4.0
#bgn_debug
#          Tjjxx(j,j1,lambda,sigma)         *= 1.0
#end_debug
          PREPARE Djjxx_x(j,j1,lambda,sigma) += Tjjxx(j,j1,lambda,sigma)
      ENDPARDO lambda, sigma, j, j1
      execute server_barrier

#bgn_debug
#      suma = 0.0
#      PARDO lambda, sigma, j, j1
#               REQUEST Djjxx_x(j,j1,lambda,sigma) j
#               tmp =  Djjxx_x(j,j1,lambda,sigma) * Djjxx_x(j,j1,lambda,sigma)
#               suma += tmp
#      ENDPARDO lambda, sigma, j, j1
#      execute print_scalar suma
#end_debug

      ENDPROC DIJABBB_X
#     -----------------
#--------------------------------------------------------
      PROC DIJAB
# Create gamma arrays and one-particle intermediates 
# Note that Dii and Daa are computed in DIJABAA and 
# Djj and Dbb are computed in DIJABBB. 

           CREATE Dii
           CREATE Daa
           CREATE Djj
           CREATE Dbb
           execute sip_barrier

           CALL DIJABAA
           CALL DIJABBB
           CALL DIJABAB
           execute sip_barrier

#           DELETE Dii
#           DELETE Daa
#           DELETE Djj
#           DELETE Dbb
      ENDPROC DIJAB
#------------------------------------------------------------
             
      PROC DIJAB_X
           CREATE Dii_x
           CREATE Daa_x
           CREATE Djj_x
           CREATE Dbb_x
           execute sip_barrier

           CALL DIJABAA_X
           CALL DIJABBB_X 
           CALL DIJABAB_X
           execute sip_barrier

           DELETE Dii_x
           DELETE Daa_x
           DELETE Djj_x
           DELETE Dbb_x
      ENDPROC DIJAB_X
#-------------------------------------------------------------------------
# Expression programmed: 
# D^{ij}_{kl} = 1/16 P_+(ij,kl) \lambda^{ij}_{ef} \tau^{ef}_{kl} 
# Note that 4* result is kept to be consistent with aces. 
# Equivalent to gamma3 
# ---------------------------------------------------------------------------- 
      PROC DIJKLAAAA 
      PARDO a, a1, i, i1  
            REQUEST L2old_aa(i,a,i1,a1) a1  
            Tiiaa(i,i1,a,a1) = L2old_aa(i,a,i1,a1) 
            DO i2 
            DO i3 
               REQUEST Tau_aa(a,i2,a1,i3) i3 
               Taaii(a,a1,i2,i3) = Tau_aa(a,i2,a1,i3)
#              Tiiii(i,i1,i2,i3)           = L2old_aa(i,a,i1,a1)*Tau_aa(a,i2,a1,i3)
               Tiiii(i,i1,i2,i3)           = Tiiaa(i,i1,a,a1)*Taaii(a,a1,i2,i3)
               Tiiii(i,i1,i2,i3)          *= 0.25
               T1iiii(i2,i3,i,i1)          = Tiiii(i,i1,i2,i3)
               PREPARE Dijkl_aa(i,i1,i2,i3)   += Tiiii(i,i1,i2,i3)
               PREPARE Dijkl_aa(i2,i3,i,i1)   += T1iiii(i2,i3,i,i1)
               T1iiii(i2,i3,i,i1)         *= 2.0
               PREPARE Vijmn_aaaa(i2,i3,i,i1) += T1iiii(i2,i3,i,i1)
            ENDDO i3 
            ENDDO i2 
      ENDPARDO a, a1, i, i1  
      execute server_barrier 

# Perform backtransformation to AO representation 
      PARDO mu, i1, i2, i3  
            Txiii(mu,i1,i2,i3) = 0.0  
            DO i  
               REQUEST Dijkl_aa(i,i1,i2,i3) i3  
               REQUEST Dijkl_aa(i,i1,i3,i2) i3  

               Tiiii(i,i1,i2,i3)   = Dijkl_aa(i,i1,i2,i3) 
               T1iiii(i,i1,i2,i3)  = Dijkl_aa(i,i1,i3,i2)  
               Tiiii(i,i1,i2,i3)  -= T1iiii(i,i1,i2,i3) 
               Tiiii(i,i1,i2,i3)  *= Pthalf 

               T1xiii(mu,i1,i2,i3) = Tiiii(i,i1,i2,i3)*ca(mu,i) 
               Txiii(mu,i1,i2,i3) += T1xiii(mu,i1,i2,i3)  
            ENDDO i  
            PREPARE Dxiii(mu,i1,i2,i3) = Txiii(mu,i1,i2,i3) 
      ENDPARDO mu, i1, i2, i3  
      execute server_barrier 

      PARDO nu, i2, i3, mu  
            Tiixx(i2,i3,mu,nu) = 0.0  
            DO i1  
               REQUEST Dxiii(mu,i1,i2,i3) i3  
               T1iixx(i2,i3,mu,nu)  = Dxiii(mu,i1,i2,i3)*ca(nu,i1) 
               Tiixx(i2,i3,mu,nu)  += T1iixx(i2,i3,mu,nu)  
            ENDDO i1  
            Tiixx(i2,i3,mu,nu)         *= 0.25  
            PREPARE Diixx(i2,i3,mu,nu) += Tiixx(i2,i3,mu,nu) 
      ENDPARDO nu, i2, i3, mu 
      execute server_barrier 

# Done backtransformation 

      ENDPROC DIJKLAAAA 
#----------------------------------------------------------------------------
# Expression programmed: 
#
# D^{IJ}_{KL} = 1/16 P_+(IJ,KL) \lambda^{IJ}_{EF} \tau^{EF}_{KL} 
# Note that 4* result is kept to be consistent with aces. 
# ---------------------------------------------------------------------------- 
      PROC DIJKLBBBB 
      PARDO b, b1, j, j1   
            REQUEST L2old_bb(j,b,j1,b1) b1 
            Tjjbb(j,j1,b,b1) = L2old_bb(j,b,j1,b1)
            DO j2
            DO j3
               REQUEST Tau_bb(b,j2,b1,j3) j3 
               Tbbjj(b,b1,j2,j3) = Tau_bb(b,j2,b1,j3)
#              Tjjjj(j,j1,j2,j3)           = L2old_bb(j,b,j1,b1)*Tau_bb(b,j2,b1,j3)
               Tjjjj(j,j1,j2,j3)           = Tjjbb(j,j1,b,b1)*Tbbjj(b,b1,j2,j3)
               Tjjjj(j,j1,j2,j3)          *= 0.25
               T1jjjj(j2,j3,j,j1)          = Tjjjj(j,j1,j2,j3)
               PREPARE Dijkl_bb(j,j1,j2,j3)   += Tjjjj(j,j1,j2,j3)
               PREPARE Dijkl_bb(j2,j3,j,j1)   += T1jjjj(j2,j3,j,j1)
               T1jjjj(j2,j3,j,j1)         *= 2.0
               PREPARE Vijmn_bbbb(j2,j3,j,j1) += T1jjjj(j2,j3,j,j1)
            ENDDO j3
            ENDDO j2
      ENDPARDO b, b1, j, j1  
      execute server_barrier 

# Perform backtransformation to AO representation 

      PARDO mu, j1, j2, j3  
            Txjjj(mu,j1,j2,j3) = 0.0  
            DO j 
               REQUEST Dijkl_bb(j,j1,j2,j3) j3  
               REQUEST Dijkl_bb(j,j1,j3,j2) j3  
               Tjjjj(j,j1,j2,j3)   = Dijkl_bb(j,j1,j2,j3)
               T1jjjj(j,j1,j2,j3)  = Dijkl_bb(j,j1,j3,j2) 
               Tjjjj(j,j1,j2,j3)  -= T1jjjj(j,j1,j2,j3)  
               Tjjjj(j,j1,j2,j3)  *= Mthalf 
               T1xjjj(mu,j1,j2,j3) = Tjjjj(j,j1,j2,j3)*cb(mu,j) 
               Txjjj(mu,j1,j2,j3) += T1xjjj(mu,j1,j2,j3)  
            ENDDO j 
            PREPARE Dxjjj(mu,j1,j2,j3) = Txjjj(mu,j1,j2,j3) 
      ENDPARDO mu, j1, j2, j3  
      execute server_barrier 

      PARDO nu, j2, j3, mu  
            Tjjxx(j2,j3,mu,nu) = 0.0  
            DO j1  
               REQUEST Dxjjj(mu,j1,j2,j3) j3  
               T1jjxx(j2,j3,mu,nu)  = Dxjjj(mu,j1,j2,j3)*cb(nu,j1) 
               Tjjxx(j2,j3,mu,nu)  += T1jjxx(j2,j3,mu,nu)  
            ENDDO j1  
            Tjjxx(j2,j3,mu,nu)         *= 0.25  
            PREPARE Djjxx(j2,j3,mu,nu) += Tjjxx(j2,j3,mu,nu) 
      ENDPARDO nu, j2, j3, mu 
      execute server_barrier 
# Done backtransformation 

      ENDPROC DIJKLBBBB 
#
# ---------------------------------------------------------------------------- 
#
# Expression programmed: 
#
# D^{iJ}_{kL} = 1/8 P_+(iJ,kL) \lambda^{iJ}_{eF} \tau^{eF}_{kL} 
# ---------------------------------------------------------------------------- 
      PROC DIJKLABAB 
      PARDO a, b,i, j 
            REQUEST L2old_ab(i,a,j,b) b 
            Tijab(i,j,a,b) = L2old_ab(i,a,j,b)
            DO i1
            DO j1
               REQUEST Tau_ab(a,i1,b,j1) j1 
               Tabij(a,b,i1,j1) = Tau_ab(a,i1,b,j1)
#              Tijij(i,j,i1,j1)           = L2old_ab(i,a,j,b)*Tau_ab(a,i1,b,j1)
               Tijij(i,j,i1,j1)           = Tijab(i,j,a,b)*Tabij(a,b,i1,j1)
               Tijij(i,j,i1,j1)          *= 0.5
               T1ijij(i1,j1,i,j)          = Tijij(i,j,i1,j1)
               PREPARE Dijkl_ab(i,j,i1,j1)   += Tijij(i,j,i1,j1)
               PREPARE Dijkl_ab(i1,j1,i,j)   += T1ijij(i1,j1,i,j)
               T1ijij(i1,j1,i,j)         *= 2.0
               PREPARE Vijmn_abab(i1,j1,i,j) += T1ijij(i1,j1,i,j)
            ENDDO j1
            ENDDO i1
      ENDPARDO a, b, i, j  
      execute server_barrier 

# Perform backtransformation to AO representation 
      PARDO mu, i1, j, j1  
            Txjij(mu,j,i1,j1) = 0.0  
            DO i 
               REQUEST Dijkl_ab(i,j,i1,j1) j1  
               T1xjij(mu,j,i1,j1)  = Dijkl_ab(i,j,i1,j1)*ca(mu,i) 
               T1xjij(mu,j,i1,j1) *= Null
               Txjij(mu,j,i1,j1) += T1xjij(mu,j,i1,j1)   
            ENDDO i 
            PREPARE Dxjij(mu,j,i1,j1) = Txjij(mu,j,i1,j1) 
      ENDPARDO mu, i1, j, j1  
      execute server_barrier 

      PARDO i1, nu, j1, mu  
            Tijxx(i1,j1,mu,nu) = 0.0  
            DO j 
               REQUEST Dxjij(mu,j,i1,j1) j1  
               T1ijxx(i1,j1,mu,nu) = Dxjij(mu,j,i1,j1)*cb(nu,j) 
               Tijxx(i1,j1,mu,nu) += T1ijxx(i1,j1,mu,nu)  
            ENDDO j 
            PREPARE Dijxx(i1,j1,mu,nu) += Tijxx(i1,j1,mu,nu) 
      ENDPARDO i1, nu, j1, mu 
      execute server_barrier 

# Done backtransformation 
      ENDPROC DIJKLABAB 
#     ----------------- 
#---------------------------------------------------------------------
      PROC DIJKLAAAA_X
#     -----------------

      PARDO i, i1, i2, i3
            Tiiii(i,i1,i2,i3) = 0.0
            PREPARE Dijkl_aa_x(i,i1,i2,i3) = Tiiii(i,i1,i2,i3)
            PREPARE Vijmn_aaaa_x(i2,i3,i,i1) = Tiiii(i,i1,i2,i3)
      ENDPARDO i, i1, i2, i3 

      EXECUTE SERVER_BARRIER 
            
      PARDO a, a1, i, i1
            REQUEST L2old_aa(i,a,i1,a1) a1
            REQUEST L2old_aa_x(i,a,i1,a1) a1

            Tiiaa(i,i1,a,a1)   = L2old_aa(i,a,i1,a1)
            Tiiaa_x(i,i1,a,a1) = L2old_aa_x(i,a,i1,a1)

            DO i2
            DO i3

# 1/8[Tau_x(ij,ef)*L2(ef,kl)]

               REQUEST Tau_aa_x(a,i2,a1,i3) i3
               REQUEST Tau_aa(a,i2,a1,i3) i3
               Taaii_x(a,a1,i2,i3) = Tau_aa_x(a,i2,a1,i3)
               Taaii(a,a1,i2,i3)   = Tau_aa(a,i2,a1,i3)

               Tiiii(i,i1,i2,i3)           = Tiiaa(i,i1,a,a1)*Taaii_x(a,a1,i2,i3)
               Tiiii(i,i1,i2,i3)          *= 0.25
               T1iiii(i2,i3,i,i1)          = Tiiii(i,i1,i2,i3)

               T1iiii(i2,i3,i,i1)         *= Fact

# Note the factor (1/4 as a result of 2*1/8); is this a problem 
# for anti-symmetric perturbations?

               PREPARE Dijkl_aa_x(i,i1,i2,i3)   += Tiiii(i,i1,i2,i3)
               PREPARE Dijkl_aa_x(i2,i3,i,i1)   += T1iiii(i2,i3,i,i1)

               T1iiii(i2,i3,i,i1)         *= 2.0
               PREPARE Vijmn_aaaa_x(i2,i3,i,i1) += T1iiii(i2,i3,i,i1)

# 1/8[Tau(ij,ef)*L2_x(ef,kjl)]

               Tiiii(i,i1,i2,i3)           = Tiiaa_x(i,i1,a,a1)*Taaii(a,a1,i2,i3)
               Tiiii(i,i1,i2,i3)          *= 0.25
               T1iiii(i2,i3,i,i1)          = Tiiii(i,i1,i2,i3)

               T1iiii(i2,i3,i,i1)         *= Fact

               PREPARE Dijkl_aa_x(i,i1,i2,i3)   += Tiiii(i,i1,i2,i3)
               PREPARE Dijkl_aa_x(i2,i3,i,i1)   += T1iiii(i2,i3,i,i1)

               T1iiii(i2,i3,i,i1)         *= 2.0
               PREPARE Vijmn_aaaa_x(i2,i3,i,i1) += T1iiii(i2,i3,i,i1)
            ENDDO i3
            ENDDO i2
      ENDPARDO a, a1, i, i1
      execute server_barrier
#
#  Two particle contribution to G-tensor: O(pq,rs)*<AA|S_z(1)+2S_z(2)pqsr|AA> 
#  DAAAA = 1/2 DAAAA + DAAAA
#
# Perform backtransformation to AO representation 
#
      PARDO mu, i1, i2, i3
            Txiii(mu,i1,i2,i3) = 0.0
            DO i
               REQUEST Dijkl_aa_x(i,i1,i2,i3) i3
               REQUEST Dijkl_aa_x(i,i1,i3,i2) i3

               Tiiii(i,i1,i2,i3)   = Dijkl_aa_x(i,i1,i2,i3)
               T1iiii(i,i1,i2,i3)  = Dijkl_aa_x(i,i1,i3,i2)

# What is this step?? 
               Tiiii(i,i1,i2,i3)  -= T1iiii(i,i1,i2,i3)
               Tiiii(i,i1,i2,i3)  *= 1.5
#bgn_debug
#               Tiiii(i,i1,i2,i3) *= 1.5
#               Tiiii(i,i1,i2,i3) *= 1.0
#end_debug

               T1xiii(mu,i1,i2,i3) = Tiiii(i,i1,i2,i3)*ca(mu,i)
               Txiii(mu,i1,i2,i3) += T1xiii(mu,i1,i2,i3)
            ENDDO i
            PREPARE Dxiii_x(mu,i1,i2,i3) = Txiii(mu,i1,i2,i3)
      ENDPARDO mu, i1, i2, i3
      execute server_barrier

      PARDO nu, i2, i3, mu
            Tiixx(i2,i3,mu,nu) = 0.0
            DO i1
               REQUEST Dxiii_x(mu,i1,i2,i3) i3
               T1iixx(i2,i3,mu,nu)  = Dxiii_x(mu,i1,i2,i3)*ca(nu,i1)
               Tiixx(i2,i3,mu,nu)  += T1iixx(i2,i3,mu,nu)
            ENDDO i1
            Tiixx(i2,i3,mu,nu)         *= 0.25
            PREPARE Diixx_x(i2,i3,mu,nu) = Tiixx(i2,i3,mu,nu)
      ENDPARDO nu, i2, i3, mu
      execute server_barrier
      ENDPROC DIJKLAAAA_X
#     -------------------
#-------------------------------------------------------------------
      PROC DIJKLABAB_X
#     ----------------
      PARDO i, j, i1, j1
            Tijij(i,j,i1,j1) = 0.0
            PREPARE Dijkl_ab_x(i,j,i1,j1) =  Tijij(i,j,i1,j1)
            PREPARE Vijmn_abab_x(i1,j1,i,j) = Tijij(i,j,i1,j1)
      ENDPARDO i, j, i1, j1

      EXECUTE SERVER_BARRIER

      PARDO a, b,i, j

            REQUEST L2old_ab_x(i,a,j,b) b
            REQUEST L2old_ab(i,a,j,b) b
            Tijab_x(i,j,a,b) = L2old_ab_x(i,a,j,b)
            Tijab(i,j,a,b) = L2old_ab(i,a,j,b)

            DO i1
            DO j1
               REQUEST Tau_ab_x(a,i1,b,j1) j1
               REQUEST Tau_ab(a,i1,b,j1) j1
               Tabij_x(a,b,i1,j1) = Tau_ab_x(a,i1,b,j1)
               Tabij(a,b,i1,j1) = Tau_ab(a,i1,b,j1)

               Tijij(i,j,i1,j1)           = Tijab(i,j,a,b)*Tabij_x(a,b,i1,j1)
               Tijij(i,j,i1,j1)          *= 0.5
               T1ijij(i1,j1,i,j)          = Tijij(i,j,i1,j1)

# ABAB+BABA makes the factor 1/4 (1/2 = 1/4 +1/4)

               T1ijij(i1,j1,i,j)          *= Fact

               PREPARE Dijkl_ab_x(i,j,i1,j1)   += Tijij(i,j,i1,j1)
               PREPARE Dijkl_ab_x(i1,j1,i,j)   += T1ijij(i1,j1,i,j)

               T1ijij(i1,j1,i,j)         *= 2.0
               PREPARE Vijmn_abab_x(i1,j1,i,j) += T1ijij(i1,j1,i,j)

               Tijij(i,j,i1,j1)                = Tijab_x(i,j,a,b)*Tabij(a,b,i1,j1)
               Tijij(i,j,i1,j1)               *= 0.5
               T1ijij(i1,j1,i,j)               = Tijij(i,j,i1,j1)

               T1ijij(i1,j1,i,j)          *= Fact

               PREPARE Dijkl_ab_x(i,j,i1,j1)   += Tijij(i,j,i1,j1)
               PREPARE Dijkl_ab_x(i1,j1,i,j)   += T1ijij(i1,j1,i,j)

               T1ijij(i1,j1,i,j)         *= 2.0
               PREPARE Vijmn_abab_x(i1,j1,i,j) += T1ijij(i1,j1,i,j)
            ENDDO j1
            ENDDO i1
      ENDPARDO a, b, i, j
      execute server_barrier
#
#  Two particle contribution to G-tensor: O(pq,rs)*<AB|S_z(1)+2S_z(2)pqsr|AB>
#  DABAB = 1/2 DABAB - DABAB, no contribution since ABAB+BABA cancel.
#
# Perform backtransformation to AO representation 
      PARDO mu, i1, j, j1
            Txjij(mu,j,i1,j1) = 0.0
            DO i
               REQUEST Dijkl_ab_x(i,j,i1,j1) j1
               Tijij(i,j,i1,j1) = Dijkl_ab_x(i,j,i1,j1)
               Tijij(i,j,i1,j1)*=  0.0
#bgn_debug               
#               Tijij(i,j,i1,j1) *= -0.5
#               Tijij(i,j,i1,j1) *=  1.0
#end_debug

               T1xjij(mu,j,i1,j1) = Tijij(i,j,i1,j1)*ca(mu,i)
               Txjij(mu,j,i1,j1) += T1xjij(mu,j,i1,j1)
            ENDDO i
            PREPARE Dxjij_x(mu,j,i1,j1) = Txjij(mu,j,i1,j1)
      ENDPARDO mu, i1, j, j1
      execute server_barrier

      PARDO i1, nu, j1, mu
            Tijxx(i1,j1,mu,nu) = 0.0
            DO j
               REQUEST Dxjij_x(mu,j,i1,j1) j1
               T1ijxx(i1,j1,mu,nu) = Dxjij_x(mu,j,i1,j1)*cb(nu,j)
               Tijxx(i1,j1,mu,nu) += T1ijxx(i1,j1,mu,nu)
            ENDDO j
            PREPARE Dijxx_x(i1,j1,mu,nu) = Tijxx(i1,j1,mu,nu)
      ENDPARDO i1, nu, j1, mu
      execute server_barrier
# Done backtransformation 

      ENDPROC DIJKLABAB_X
#     -------------------
#-------------------------------------------------------------------
      PROC DIJKLBBBB_X
#     ----------------
      PARDO j, j1, j2, j3
            Tjjjj(j,j1,j2,j3) = 0.0
            PREPARE Dijkl_bb_x(j,j1,j2,j3) = Tjjjj(j,j1,j2,j3)
            PREPARE Vijmn_bbbb_x(j2,j3,j,j1) =  Tjjjj(j,j1,j2,j3) 
      ENDPARDO j, j1, j2, j3

      EXECUTE SERVER_BARRIER
   
      PARDO b, b1, j, j1
            REQUEST L2old_bb(j,b,j1,b1) b1
            Tjjbb(j,j1,b,b1) = L2old_bb(j,b,j1,b1)
            REQUEST L2old_bb_x(j,b,j1,b1) b1
            Tjjbb_x(j,j1,b,b1) = L2old_bb_x(j,b,j1,b1)
            DO j2
            DO j3
               REQUEST Tau_bb(b,j2,b1,j3) j3
               Tbbjj(b,b1,j2,j3) = Tau_bb(b,j2,b1,j3)
               REQUEST Tau_bb_x(b,j2,b1,j3) j3
               Tbbjj_x(b,b1,j2,j3) = Tau_bb_x(b,j2,b1,j3)
#              Tjjjj(j,j1,j2,j3)           = L2old_bb(j,b,j1,b1)*Tau_bb(b,j2,b1,j3)
               Tjjjj(j,j1,j2,j3)           = Tjjbb(j,j1,b,b1)*Tbbjj_x(b,b1,j2,j3)
# Correctly, the factor is 1/4 due to symmetrization.

               Tjjjj(j,j1,j2,j3)          *= 0.25
               T1jjjj(j2,j3,j,j1)          = Tjjjj(j,j1,j2,j3)
               PREPARE Dijkl_bb_x(j,j1,j2,j3)   += Tjjjj(j,j1,j2,j3)

               T1jjjj(j2,j3,j,j1)               *= Fact
               PREPARE Dijkl_bb_x(j2,j3,j,j1)   += T1jjjj(j2,j3,j,j1)

               T1jjjj(j2,j3,j,j1)         *= 2.0
               PREPARE Vijmn_bbbb_x(j2,j3,j,j1) += T1jjjj(j2,j3,j,j1)

               Tjjjj(j,j1,j2,j3)           = Tjjbb_x(j,j1,b,b1)*Tbbjj(b,b1,j2,j3)
               Tjjjj(j,j1,j2,j3)          *= 0.25
               T1jjjj(j2,j3,j,j1)          = Tjjjj(j,j1,j2,j3)
               PREPARE Dijkl_bb_x(j,j1,j2,j3)   += Tjjjj(j,j1,j2,j3)

               T1jjjj(j2,j3,j,j1)               *= Fact 
               PREPARE Dijkl_bb_x(j2,j3,j,j1)   += T1jjjj(j2,j3,j,j1)

               T1jjjj(j2,j3,j,j1)         *= 2.0
               PREPARE Vijmn_bbbb_x(j2,j3,j,j1) += T1jjjj(j2,j3,j,j1)
            ENDDO j3
            ENDDO j2
      ENDPARDO b, b1, j, j1
      execute server_barrier

#                                                                 ++
#  Two particle contribution to G-tensor: O(pq,rs)*<BB|S_z(1)+S_z(2)pqsr|BB>
#  -1/2 BBBBB - BBBB
#
# Perform backtransformation to AO representation 

      PARDO mu, j1, j2, j3
            Txjjj(mu,j1,j2,j3) = 0.0
            DO j
               REQUEST Dijkl_bb_x(j,j1,j2,j3) j3
               REQUEST Dijkl_bb_x(j,j1,j3,j2) j3

# Needs and explanation  
               Tjjjj(j,j1,j2,j3)   = Dijkl_bb_x(j,j1,j2,j3)
               T1jjjj(j,j1,j2,j3)  = Dijkl_bb_x(j,j1,j3,j2)
               Tjjjj(j,j1,j2,j3)  -= T1jjjj(j,j1,j2,j3)
               Tjjjj(j,j1,j2,j3)  *= -1.5
#bgn_debug
#               Tjjjj(j,j1,j2,j3) *= -1.5
#               Tjjjj(j,j1,j2,j3) *=  1.0
#end_debug

               T1xjjj(mu,j1,j2,j3) = Tjjjj(j,j1,j2,j3)*cb(mu,j)
               Txjjj(mu,j1,j2,j3) += T1xjjj(mu,j1,j2,j3)
            ENDDO j
            PREPARE Dxjjj_x(mu,j1,j2,j3) = Txjjj(mu,j1,j2,j3)
      ENDPARDO mu, j1, j2, j3
      execute server_barrier

      PARDO nu, j2, j3, mu
            Tjjxx(j2,j3,mu,nu) = 0.0
            DO j1
               REQUEST Dxjjj_x(mu,j1,j2,j3) j3
               T1jjxx(j2,j3,mu,nu)  = Dxjjj_x(mu,j1,j2,j3)*cb(nu,j1)
               Tjjxx(j2,j3,mu,nu)  += T1jjxx(j2,j3,mu,nu)
            ENDDO j1
            Tjjxx(j2,j3,mu,nu)         *= 0.25
            PREPARE Djjxx_x(j2,j3,mu,nu) = Tjjxx(j2,j3,mu,nu)
      ENDPARDO nu, j2, j3, mu
      execute server_barrier

      ENDPROC DIJKLBBBB_X
#     -------------------
#-------------------------------------------------------------------------
      PROC DIJKL
           CALL DIJKLAAAA
           CALL DIJKLABAB
           CALL DIJKLBBBB
      ENDPROC DIJKL
#     -----------------
#--------------------------------------------------------------------
      PROC DIJKL_X
           CALL DIJKLAAAA_X
           CALL DIJKLABAB_X
           CALL DIJKLBBBB_X
      ENDPROC DIJKL_X
#---------------------------------------------------------------------
# Equivalent to gamma4*4 --> factor of 4 to match aces  

      PROC DIBJAAAAA 
      PARDO a, a1, i, i1 
            Tiaia(i,a1,i1,a)  = 0.0 
            TAiaia(i1,a,i,a1) = 0.0 

            GET t1a_old(a,i) 
            GET l1a_old(i1,a1) 
 
            T1iaia(i,a1,i1,a)  = t1a_old(a,i)^l1a_old(i1,a1)    
            T1iaia(i,a1,i1,a) *= 0.125     
#bgn_debug
#            T1iaia(i,a1,i1,a) *= 1.0
#end_debug
            Tiaia(i,a1,i1,a)  += T1iaia(i,a1,i1,a)  

            T2iaia(i1,a,i,a1)  = T1iaia(i,a1,i1,a)  
            TAiaia(i1,a,i,a1) += T2iaia(i1,a,i,a1)  

            DO i2  
               GET t1a_old(a,i2) 
               DO a2 

                  REQUEST T2old_aa(a,i,a2,i2)   a2  
                  REQUEST L2old_aa(i1,a1,i2,a2) a2   
                  GET t1a_old(a2,i) 

                  Tiaai(i2,a2,a,i)           = T2old_aa(a,i,a2,i2) 
                  T1iaai(i1,a1,a,i)          = L2old_aa(i1,a1,i2,a2)*Tiaai(i2,a2,a,i)  
                  T1iaia(i,a1,i1,a)          = T1iaai(i1,a1,a,i)  
                  T1iaia(i,a1,i1,a)         *= 0.5   
                  PREPARE Vibja_aaaa(i,a1,i1,a) += T1iaia(i,a1,i1,a) 

                  T1iaia(i,a1,i1,a)         *= 0.25  
#bgn_debug
#                  T1iaia(i,a1,i1,a) *= 1.0
#end_debug
                  Tiaia(i,a1,i1,a)          += T1iaia(i,a1,i1,a)  

                  T2iaia(i1,a,i,a1)          = T1iaia(i,a1,i1,a)  
                  TAiaia(i1,a,i,a1)         += T2iaia(i1,a,i,a1)  

                  tai(a,i2)                  = t1a_old(a,i2)
                  T3iaia(i2,a2,i,a)          = t1a_old(a2,i)^tai(a,i2)
                  T2iaia(i1,a1,i,a)          = L2old_aa(i1,a1,i2,a2)*T3iaia(i2,a2,i,a)
                  T1iaia(i,a1,i1,a)          = T2iaia(i1,a1,i,a)
                  T1iaia(i,a1,i1,a)         *= -0.125
#bgn_debug
#                  T1iaia(i,a1,i1,a) *= 1.0
#end_debug
                  Tiaia(i,a1,i1,a)          += T1iaia(i,a1,i1,a)

                  T2iaia(i1,a,i,a1)          = T1iaia(i,a1,i1,a)  
                  TAiaia(i1,a,i,a1)         += T2iaia(i1,a,i,a1)  

               ENDDO a2 
            ENDDO i2 
            DO j 
            DO b 
               REQUEST T2old_ab(a,i,b,j)   b  
               REQUEST L2old_ab(i1,a1,j,b) b   

               Tjbia(j,b,i,a)             = T2old_ab(a,i,b,j) 
               T2iaia(i1,a1,i,a)          = L2old_ab(i1,a1,j,b)*Tjbia(j,b,i,a)  
               T1iaia(i,a1,i1,a)          = T2iaia(i1,a1,i,a) 
               T1iaia(i,a1,i1,a)         *= 0.5   
               PREPARE Vibja_aaaa(i,a1,i1,a) += T1iaia(i,a1,i1,a) 

               T1iaia(i,a1,i1,a)         *= 0.25   
#bgn_debug
#               T1iaia(i,a1,i1,a) *= 1.0
#end_debug
               Tiaia(i,a1,i1,a)          += T1iaia(i,a1,i1,a)  

               T2iaia(i1,a,i,a1)          = T1iaia(i,a1,i1,a)  
               TAiaia(i1,a,i,a1)         += T2iaia(i1,a,i,a1)  
            ENDDO b 
            ENDDO j 
# Multiply by 4 to match aces 
#           Tiaia(i,a1,i1,a)  *= 4.0 
#           TAiaia(i1,a,i,a1) *= 4.0 

            PREPARE Dibja_aaaa(i,a1,i1,a) += Tiaia(i,a1,i1,a)  
            PREPARE Dibja_aaaa(i1,a,i,a1) += TAiaia(i1,a,i,a1)  
      ENDPARDO a, a1, i, i1 
      execute server_barrier 
# ----------------------------------
#
      PARDO sigma, a1, i, i1
#
            Tiaix(i,a1,i1,sigma) = 0.0
#
            DO a
#
               REQUEST Dibja_aaaa(i,a1,i1,a) a
#
               T1iaix(i,a1,i1,sigma)  = Dibja_aaaa(i,a1,i1,a)*ca(sigma,a)
               T1iaix(i,a1,i1,sigma) *= Pthalf 
               Tiaix(i,a1,i1,sigma)  += T1iaix(i,a1,i1,sigma)
#
            ENDDO a
#
            PREPARE Diaix(i,a1,i1,sigma) = Tiaix(i,a1,i1,sigma)
#
      ENDPARDO sigma, a1, i, i1
      execute server_barrier
#
      PARDO sigma, nu, i, i1
#
            Txiix(nu,i,i1,sigma) = 0.0
            Tixix(i,nu,i1,sigma) = 0.0
#
            DO a1 
#
               REQUEST Diaix(i,a1,i1,sigma) a1
#
               T1ixix(i,nu,i1,sigma) = Diaix(i,a1,i1,sigma)*ca(nu,a1)
               T1xiix(nu,i,i1,sigma) = T1ixix(i,nu,i1,sigma)
#
               Tixix(i,nu,i1,sigma) += T1ixix(i,nu,i1,sigma)
               Txiix(nu,i,i1,sigma) += T1xiix(nu,i,i1,sigma)
#
            ENDDO a1
#
            Txiix(nu,i,i1,sigma) *=  4.0
            Tixix(i,nu,i1,sigma) *= -4.0
#
            PREPARE Dixix(i,nu,i1,sigma) += Tixix(i,nu,i1,sigma)
            PREPARE Dxiix(nu,i,i1,sigma) += Txiix(nu,i,i1,sigma)
#
      ENDPARDO sigma, nu, i, i1
      execute server_barrier
#
# Done backtransformation
#
# Backtransform to AO representation 
#       PARDO mu, nu, lambda, sigma
#           Txxxx_aa(mu,nu,lambda,sigma) = 0.0
#           DO i
#               Txixx(mu,i,lambda,sigma) = 0.0
#               DO i1
#                  REQUEST Dxiix(mu,i,i1,sigma) i1
#                  T1xixx(mu,i,lambda,sigma) = Dxiix(mu,i,i1,sigma)*ca(lambda,i1)
#                  Txixx(mu,i,lambda,sigma) += T1xixx(mu,i,lambda,sigma)
#               ENDDO i1
#               T1xxxx(mu,nu,lambda,sigma) = Txixx(mu,i,lambda,sigma)*ca(nu,i)
#               Txxxx_aa(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#            ENDDO i
#            PREPARE Dxxxx_aaaa(mu,nu,lambda,sigma) +=Txxxx_aa(mu,nu,lambda,sigma)
#      ENDPARDO mu, nu, lambda, sigma
#      execute server_barrier
#
#      PARDO mu, nu, lambda, sigma
#           Txxxx_aa(mu,nu,lambda,sigma) = 0.0
#           DO i
#               Tixxx(i,nu,lambda,sigma) = 0.0
#               DO i1
#                  REQUEST Dixix_aaaa(i,nu,i1,sigma) i1
#                  T1ixxx(i,nu,lambda,sigma) = Dixix_aaaa(i,nu,i1,sigma)*ca(lambda,i1)
#                   Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
#               ENDDO i1
#               T1xxxx(mu,nu,lambda,sigma)   =  Tixxx(i,nu,lambda,sigma)*ca(mu,i)
#               Txxxx_aa(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#            ENDDO i
#            PREPARE Dxxxx_aaaa(mu,nu,lambda,sigma) +=Txxxx_aa(mu,nu,lambda,sigma)
#      ENDPARDO mu, nu, lambda, sigma
#
#bgn_debug
#      execute server_barrier
#      esuma   = 0.0
#      ecorraa = 0.0
#      PARDO mu, nu, lambda, sigma
#            request Dxxxx_aaaa(mu,nu,lambda,sigma) sigma
#            etemp = Dxxxx_aaaa(mu,nu,lambda,sigma)*Dxxxx_aaaa(mu,nu,lambda,sigma)
#            esuma += etemp
#      ENDPARDO mu, nu, lambda, sigma
#      execute server_barrier
#      collective ecorraa += esuma
#      execute print_scalar ecorraa
#end_debug

      ENDPROC DIBJAAAAA 
#     -----------------
# The D(iB,jA) block of the two-particle density matrix is calculated. 
#
      PROC DIBJAABAB 
#     --------------
      PARDO b1, b, i, i1 
            Tibib(i1,b1,i,b)  = 0.0 
            TAibib(i,b,i1,b1) = 0.0 
            DO j 
               GET t1b_old(b1,j) 
               DO a 
                  REQUEST T2old_ab(a,i,b1,j) a  
                  REQUEST L2old_ab(i1,a,j,b) a   
                  GET t1a_old(a,i) 

                  T1ibib(i1,b1,i,b)          = L2old_ab(i1,a,j,b)*T2old_ab(a,i,b1,j) 
                  T1ibib(i1,b1,i,b)         *= 0.125   
#bgn_debug 
#                  T1ibib(i1,b1,i,b) *=1.0
#end_debug
                  Tibib(i1,b1,i,b)          += T1ibib(i1,b1,i,b)  

                  T2ibib(i,b,i1,b1)          = T1ibib(i1,b1,i,b)  
                  TAibib(i,b,i1,b1)         += T2ibib(i,b,i1,b1)  

                  T2ibib(i,b,i1,b1)         *= 4.0  
                  PREPARE Vibja_abab(i,b,i1,b1) += T2ibib(i,b,i1,b1) 

                  Taibj(a,i,b1,j)            = t1a_old(a,i)^t1b_old(b1,j)
                  T1ibib(i1,b1,i,b)          = L2old_ab(i1,a,j,b)*Taibj(a,i,b1,j) 
                  T1ibib(i1,b1,i,b)         *= 0.125   
#bgn_debug 
#                  T1ibib(i1,b1,i,b) *=1.0
#end_debug
                  Tibib(i1,b1,i,b)          += T1ibib(i1,b1,i,b)  

                  T2ibib(i,b,i1,b1)          = T1ibib(i1,b1,i,b)  
                  TAibib(i,b,i1,b1)         += T2ibib(i,b,i1,b1)  
               ENDDO a 
            ENDDO j 
# Multiply by 4 to match aces 
#           Tibib(i1,b1,i,b)  *= 4.0 
#           TAibib(i,b,i1,b1) *= 4.0 

            PREPARE Dibja_abab(i1,b1,i,b) += Tibib(i1,b1,i,b) 
            PREPARE Dibja_abab(i,b,i1,b1) += TAibib(i,b,i1,b1) 
      ENDPARDO b1, b, i, i1 
      execute server_barrier 

# Backtransform to AO representation
# ----------------------------------
      PARDO sigma, b1, i, i1 
            Tibix(i,b1,i1,sigma) = 0.0  
            DO b 
               REQUEST Dibja_abab(i,b1,i1,b) b  
               T1ibix(i,b1,i1,sigma) = Dibja_abab(i,b1,i1,b)*cb(sigma,b) 
               Tibib(i1,b1,i,b)     *= Mhalf 
               Tibix(i,b1,i1,sigma) += T1ibix(i,b1,i1,sigma)  
            ENDDO b 
            PREPARE Dibix(i,b1,i1,sigma) = Tibix(i,b1,i1,sigma) 
      ENDPARDO sigma, b1, i, i1 
      execute server_barrier 

      PARDO sigma, nu, i, i1 
            Tixix(i,nu,i1,sigma) = 0.0  
            DO b1  
               REQUEST Dibix(i,b1,i1,sigma) b1  
               T1ixix(i,nu,i1,sigma) = Dibix(i,b1,i1,sigma)*cb(nu,b1)  
               Tixix(i,nu,i1,sigma) += T1ixix(i,nu,i1,sigma)  
            ENDDO b1 
            Tixix(i,nu,i1,sigma)         *= -4.0  
            PREPARE Dixix(i,nu,i1,sigma) += Tixix(i,nu,i1,sigma) 
      ENDPARDO sigma, nu, i, i1 
      execute server_barrier 

# Done backtransformation 
#
#       PARDO mu, nu, lambda, sigma
#            Txxxx_aa(mu,nu,lambda,sigma) = 0.0
#            DO i
#               Tixxx(i,nu,lambda,sigma) = 0.0
#               DO i1
#                  REQUEST Dixix(i,nu,i1,sigma) i1
#                  T1ixxx(i,nu,lambda,sigma) = Dixix(i,nu,i1,sigma)*ca(lambda,i1)
#                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
#               ENDDO i1
#               T1xxxx(mu,nu,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
#               Txxxx_aa(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#            ENDDO i
#            PREPARE Dxxxx_abab(mu,nu,lambda,sigma) += Txxxx_aa(mu,nu,lambda,sigma)
#      ENDPARDO mu, nu, lambda, sigma
#      execute server_barrier
#
#bgn_debug
#      esuma   = 0.0
#      ecorraa = 0.0
#      PARDO mu, nu, lambda, sigma
#            request Dxxxx_abab(mu,nu,lambda,sigma) sigma
#            etemp = Dxxxx_abab(mu,nu,lambda,sigma)*Dxxxx_abab(mu,nu,lambda,sigma)
#            esuma += etemp
#      ENDPARDO mu, nu, lambda, sigma
#      execute server_barrier
#      collective ecorraa += esuma
#      execute print_scalar ecorraa
#end_debug

      ENDPROC DIBJAABAB 
#     -----------------
# The D(Ib,Ja) block of the two-particle density matrix is calculated. 

      PROC DIBJABABA 
#     --------------
      PARDO a, a1, j1, j 
            Tjaja(j,a,j1,a1) = 0.0 
            TAjaja(j1,a1,j,a) = 0.0 
            DO i 
               GET t1a_old(a,i) 
               DO b 
                  REQUEST T2old_ab(a,i,b,j1) b 
                  REQUEST L2old_ab(i,a1,j,b) b 
                  GET t1b_old(b,j1)
#                 T1jaja(j,a,j1,a1)          = L2old_ab(i,a1,j,b)*T2old_ab(a,i,b,j1)
                  Tjaib(j,a1,i,b)            = L2old_ab(i,a1,j,b)
                  Tibaj(i,b,a,j1)            = T2old_ab(a,i,b,j1)
                  Tjaaj(j,a1,a,j1)           = Tjaib(j,a1,i,b)*Tibaj(i,b,a,j1)
                  T1jaja(j,a,j1,a1)          = Tjaaj(j,a1,a,j1)

                  T1jaja(j,a,j1,a1)         *= 0.125
#bgn_debug
#                  T1jaja(j,a,j1,a1) *= 1.0
#end_debug
                  Tjaja(j,a,j1,a1)          += T1jaja(j,a,j1,a1)

                  T2jaja(j1,a1,j,a)          = T1jaja(j,a,j1,a1)
                  TAjaja(j1,a1,j,a)         += T2jaja(j1,a1,j,a)

                  T2jaja(j1,a1,j,a)         *= 4.0
                  PREPARE Vibja_baba(j1,a1,j,a) += T2jaja(j1,a1,j,a)

                  Tbjai(b,j1,a,i)            = t1b_old(b,j1)^t1a_old(a,i)
                  T1jaja(j,a,j1,a1)          = L2old_ab(i,a1,j,b)*Tbjai(b,j1,a,i)
                  T1jaja(j,a,j1,a1)         *= 0.125
#bgn_debug
#                  T1jaja(j,a,j1,a1) *= 1.0
#end_debug
                  Tjaja(j,a,j1,a1)          += T1jaja(j,a,j1,a1)

                  T2jaja(j1,a1,j,a)          = T1jaja(j,a,j1,a1)
                  TAjaja(j1,a1,j,a)         += T2jaja(j1,a1,j,a)
               ENDDO b 
            ENDDO i 
# Multiply by 4 to match aces 
#           Tjaja(j,a,j1,a1)  *= 4.0 
#           TAjaja(j1,a1,j,a) *= 4.0 

            PREPARE Dibja_baba(j,a,j1,a1) += Tjaja(j,a,j1,a1) 
            PREPARE Dibja_baba(j1,a1,j,a) += TAjaja(j1,a1,j,a)  
      ENDPARDO a, a1, j1, j 
      execute server_barrier 

# Backtransform to AO representation 

      PARDO sigma, a1, j, j1 
            Tjajx(j,a1,j1,sigma) = 0.0  
            DO a 
               REQUEST Dibja_baba(j,a1,j1,a) a  
               T1jajx(j,a1,j1,sigma) = Dibja_baba(j,a1,j1,a)*ca(sigma,a) 
               T1jajx(j,a1,j1,sigma)*= Phalf 
               Tjajx(j,a1,j1,sigma) += T1jajx(j,a1,j1,sigma)  
            ENDDO a 
            PREPARE Djajx(j,a1,j1,sigma) = Tjajx(j,a1,j1,sigma) 
      ENDPARDO sigma, a1, j, j1 
      execute server_barrier 

      PARDO sigma, nu, j, j1 
            Tjxjx(j,nu,j1,sigma) = 0.0  
            DO a1 
               REQUEST Djajx(j,a1,j1,sigma) a1  
               T1jxjx(j,nu,j1,sigma) = Djajx(j,a1,j1,sigma)*ca(nu,a1)  
               Tjxjx(j,nu,j1,sigma) += T1jxjx(j,nu,j1,sigma)  
            ENDDO a1 
            Tjxjx(j,nu,j1,sigma)         *= -4.0  
            PREPARE Djxjx(j,nu,j1,sigma) += Tjxjx(j,nu,j1,sigma) 
      ENDPARDO sigma, nu, j, j1 
      execute server_barrier 

# Done backtransformation 
#      PARDO j, nu, lambda, sigma
#               Tjxxx(j,nu,lambda,sigma) = 0.0
#               DO j1
#                  REQUEST Djxjx(j,nu,j1,sigma) j1
#                  T1jxxx(j,nu,lambda,sigma) = Djxjx(j,nu,j1,sigma)*cb(lambda,j1)
#                  Tjxxx(j,nu,lambda,sigma) += T1jxxx(j,nu,lambda,sigma)
#               ENDDO j1
#            PREPARE Djxxx_baba(j,nu,lambda,sigma) += Tjxxx(j,nu,lambda,sigma)
#
#      ENDPARDO j, nu, lambda, sigma
#      execute server_barrier
#
#      PARDO mu, nu, lambda, sigma
#            Txxxx_aa(mu,nu,lambda,sigma) = 0.0
#            do j
#               REQUEST Djxxx_baba(j,nu,lambda,sigma) j
#               T1xxxx(mu,nu,lambda,sigma) = Djxxx_baba(j,nu,lambda,sigma)*cb(mu,j)
#               Txxxx_aa(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#            ENDDO j
#            PREPARE Dxxxx_baba(mu,nu,lambda,sigma) =Txxxx_aa(mu,nu,lambda,sigma)
#      ENDPARDO mu, nu, lambda, sigma
#      execute server_barrier
#
#bgn_debug
#       esuma   = 0.0
#       ecorraa = 0.0
#       PARDO mu, nu, lambda, sigma
#             request Dxxxx_baba(mu,nu,lambda,sigma) sigma
#             etemp = Dxxxx_baba(mu,nu,lambda,sigma)*Dxxxx_baba(mu,nu,lambda,sigma)
#             esuma += etemp
#       ENDPARDO mu, nu, lambda, sigma
#       execute server_barrier
#       collective ecorraa += esuma
#       execute print_scalar ecorraa
#end_debug

      ENDPROC DIBJABABA 
#     -----------------
      PROC DIBJABBBB 
#     --------------
      PARDO b, b1, j, j1
            Tjbjb(j,b1,j1,b)  = 0.0
            TAjbjb(j1,b,j,b1) = 0.0

            GET t1b_old(b,j)
            GET l1b_old(j1,b1)

            T1jbjb(j,b1,j1,b)  = t1b_old(b,j)^l1b_old(j1,b1)
            T1jbjb(j,b1,j1,b) *= 0.125
            Tjbjb(j,b1,j1,b)  += T1jbjb(j,b1,j1,b)

            T2jbjb(j1,b,j,b1)  = T1jbjb(j,b1,j1,b)
            TAjbjb(j1,b,j,b1) += T2jbjb(j1,b,j,b1)
            DO j2
               GET t1b_old(b,j2)
               DO b2

                  REQUEST T2old_bb(b,j,b2,j2)   b2 
                  REQUEST L2old_bb(j1,b1,j2,b2) b2 
                  GET t1b_old(b2,j)

#                 T1jbjb(j,b1,j1,b)          = L2old_bb(j1,b1,j2,b2)*T2old_bb(b,j,b2,j2)

                  T3jbjb(j2,b2,j,b)          = T2old_bb(b,j,b2,j2)
                  T2jbjb(j1,b1,j,b)          = L2old_bb(j1,b1,j2,b2)*T3jbjb(j2,b2,j,b)
                  T1jbjb(j,b1,j1,b)          = T2jbjb(j1,b1,j,b)
                  T1jbjb(j,b1,j1,b)         *= 0.5
                  PREPARE Vibja_bbbb(j,b1,j1,b) += T1jbjb(j,b1,j1,b)

                  T1jbjb(j,b1,j1,b)         *= 0.25
                  Tjbjb(j,b1,j1,b)          += T1jbjb(j,b1,j1,b)

                  T2jbjb(j1,b,j,b1)          = T1jbjb(j,b1,j1,b)
                  TAjbjb(j1,b,j,b1)         += T2jbjb(j1,b,j,b1)

                  tbj(b,j2)                 = t1b_old(b,j2)
                  Tjbbj(j2,b2,b,j)          = t1b_old(b2,j)^tbj(b,j2)
#                 T1jbjb(j,b1,j1,b)         = L2old_bb(j1,b1,j2,b2)*Tbjbj(b2,j,b,j2)
                  T1jbbj(j1,b1,b,j)         = L2old_bb(j1,b1,j2,b2)*Tjbbj(j2,b2,b,j)
                  T1jbjb(j,b1,j1,b)         = T1jbbj(j1,b1,b,j)
                  T1jbjb(j,b1,j1,b)        *= -0.125
                  Tjbjb(j,b1,j1,b)         += T1jbjb(j,b1,j1,b)

                  T2jbjb(j1,b,j,b1)         = T1jbjb(j,b1,j1,b)
                  TAjbjb(j1,b,j,b1)        += T2jbjb(j1,b,j,b1) 
               ENDDO b2
            ENDDO j2
            DO i
            DO a
               REQUEST T2old_ab(a,i,b,j)   a 
               REQUEST L2old_ab(i,a,j1,b1) a 

               Tjbia(j,b,i,a)             = T2old_ab(a,i,b,j)  
               T2jbjb(j,b,j1,b1)          = Tjbia(j,b,i,a)*L2old_ab(i,a,j1,b1)  
               T1jbjb(j,b1,j1,b)          = T2jbjb(j,b,j1,b1) 
               T1jbjb(j,b1,j1,b)         *= 0.5 
               PREPARE Vibja_bbbb(j,b1,j1,b) += T1jbjb(j,b1,j1,b)

               T1jbjb(j,b1,j1,b)         *= 0.25
               Tjbjb(j,b1,j1,b)          += T1jbjb(j,b1,j1,b)

               T2jbjb(j1,b,j,b1)          = T1jbjb(j,b1,j1,b)
               TAjbjb(j1,b,j,b1)         += T2jbjb(j1,b,j,b1)
            ENDDO a
            ENDDO i
# Multiply by 4 to match aces 
#           Tjbjb(j,b1,j1,b)  *= 4.0 
#           TAjbjb(j1,b,j,b1) *= 4.0 

            PREPARE Dibja_bbbb(j,b1,j1,b) += Tjbjb(j,b1,j1,b)
            PREPARE Dibja_bbbb(j1,b,j,b1) += TAjbjb(j1,b,j,b1)
      ENDPARDO b, b1, j, j1

      execute server_barrier 

# Backtransform to AO representation 

      PARDO sigma, b1, j, j1 
            Tjbjx(j,b1,j1,sigma) = 0.0  
            DO b 
               REQUEST Dibja_bbbb(j,b1,j1,b) b  
               T1jbjx(j,b1,j1,sigma)  = Dibja_bbbb(j,b1,j1,b)*cb(sigma,b) 
               T1jbjx(j,b1,j1,sigma) *= Mthalf 
               Tjbjx(j,b1,j1,sigma)  += T1jbjx(j,b1,j1,sigma)  
            ENDDO b 
            PREPARE Djbjx(j,b1,j1,sigma) = Tjbjx(j,b1,j1,sigma) 
      ENDPARDO sigma, b1, j, j1 
      execute server_barrier 
#
      PARDO sigma, nu, j, j1 
            Txjjx(nu,j,j1,sigma) = 0.0  
            Tjxjx(j,nu,j1,sigma) = 0.0  
            DO b1 
               REQUEST Djbjx(j,b1,j1,sigma) b1  
               T1jxjx(j,nu,j1,sigma)      = Djbjx(j,b1,j1,sigma)*cb(nu,b1)  
               T1xjjx(nu,j,j1,sigma)      = T1jxjx(j,nu,j1,sigma)  

               Tjxjx(j,nu,j1,sigma)      += T1jxjx(j,nu,j1,sigma)  
               Txjjx(nu,j,j1,sigma)      += T1xjjx(nu,j,j1,sigma)  
            ENDDO b1 
            Txjjx(nu,j,j1,sigma)         *=  4.0  
            Tjxjx(j,nu,j1,sigma)         *= -4.0  

            PREPARE Djxjx(j,nu,j1,sigma) += Tjxjx(j,nu,j1,sigma) 
            PREPARE Dxjjx(nu,j,j1,sigma) += Txjjx(nu,j,j1,sigma) 
      ENDPARDO sigma, nu, j, j1 
      execute server_barrier 
#
# Done backtransformation 
#       PARDO mu, nu, lambda, sigma
#            Txxxx_bb(mu,nu,lambda,sigma) = 0.0
#            DO j
#               Tjxxx(j,nu,lambda,sigma) = 0.0
#               DO j1
#                  REQUEST Djxjx(j,nu,j1,sigma) j1
#                  T1jxxx(j,nu,lambda,sigma) = Djxjx_bbbb(j,nu,j1,sigma)*cb(lambda,j1)
#                  Tjxxx(j,nu,lambda,sigma) += T1jxxx(j,nu,lambda,sigma)
#               ENDDO j1
#               T1xxxx(mu,nu,lambda,sigma) = Tjxxx(j,nu,lambda,sigma)*cb(mu,j)
#               Txxxx_bb(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#            ENDDO j
#            PREPARE Dxxxx_bbbb(mu,nu,lambda,sigma) +=Txxxx_bb(mu,nu,lambda,sigma)
#      ENDPARDO mu, nu, lambda, sigma
#      execute server_barrier
#
#      PARDO mu, nu, lambda, sigma
#            Txxxx_bb(mu,nu,lambda,sigma) = 0.0
#            DO j
#               Txjxx(mu,j,lambda,sigma) = 0.0
#               DO j1
#                  REQUEST Dxjjx_bbbb(mu,j,j1,sigma) j1
#                  T1xjxx(mu,j,lambda,sigma) = Dxjjx_bbbb(mu,j,j1,sigma)*cb(lambda,j1)
#                  Txjxx(mu,j,lambda,sigma) += T1xjxx(mu,j,lambda,sigma)
#               ENDDO j1
#               T1xxxx(mu,nu,lambda,sigma) = Txjxx(mu,j,lambda,sigma)*cb(nu,j)
#               Txxxx_bb(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#            ENDDO j
#             PREPARE Dxxxx_bbbb(mu,nu,lambda,sigma) +=Txxxx_bb(mu,nu,lambda,sigma)
#      ENDPARDO mu, nu, lambda, sigma
#      execute server_barrier
#bgn_debug
#      esuma   = 0.0
#      ecorraa = 0.0
#      PARDO mu, nu, lambda, sigma
#            request Dxxxx_bbbb(mu,nu,lambda,sigma) sigma
#            etemp = Dxxxx_bbbb(mu,nu,lambda,sigma)*Dxxxx_bbbb(mu,nu,lambda,sigma)
#            esuma += etemp
#      ENDPARDO mu, nu, lambda, sigma
#      execute server_barrier
#      collective ecorraa += esuma
#      execute print_scalar ecorraa
#end_debug
      ENDPROC DIBJABBBB 
#     -----------------
#------------------------------------------------------------------------
      PROC DIBJAABBA 
#     --------------
      PARDO i, a, b, j 
            Tiajb(i,a,j,b) = 0.0  
            GET l1b_old(j,b) 
            GET t1a_old(a,i) 

            GET l1a_old(i,a) 
            GET t1b_old(b,j) 

            T1iajb(i,a,j,b)  = t1a_old(a,i)^l1b_old(j,b) 
            T1iajb(i,a,j,b) *= 0.125  
#bgn_debug
#            T1iajb(i,a,j,b) *= 1.0
#end_debug
            Tiajb(i,a,j,b)  += T1iajb(i,a,j,b) 

            T1iajb(i,a,j,b)  = l1a_old(i,a)^t1b_old(b,j) 
            T1iajb(i,a,j,b) *= 0.125  
#bgn_debug
#            T1iajb(i,a,j,b) *= 1.0
#end_debug
            Tiajb(i,a,j,b)  += T1iajb(i,a,j,b) 
            DO i1 
               GET t1a_old(a,i1) 
               tai(a,i1)                   = t1a_old(a,i1) 
               DO a1 
                  REQUEST T2old_aa(a,i,a1,i1) a1 
                  REQUEST L2old_ab(i1,a1,j,b) a1 
                  REQUEST T2old_ab(a1,i1,b,j) a1 
                  REQUEST L2old_aa(i1,a1,i,a) a1 
                  GET t1a_old(a1,i)

                  T1iajb(i,a,j,b)          = T2old_aa(a,i,a1,i1)*L2old_ab(i1,a1,j,b)
                  T1iajb(i,a,j,b)         *= 0.125
#bgn_debug
#                  T1iajb(i,a,j,b) *= 1.0
#end_debug
                  Tiajb(i,a,j,b)          += T1iajb(i,a,j,b)

                  Tibja(i,b,j,a)           = T1iajb(i,a,j,b)
                  Tibja(i,b,j,a)          *= 4.0
                  PREPARE Vibja_abba(i,b,j,a) += Tibja(i,b,j,a)
#                 T1iajb(i,a,j,b)          = T2old_ab(a1,i1,b,j)*L2old_aa(i1,a1,i,a)
                  Tiaia(i,a,i1,a1)         = L2old_aa(i1,a1,i,a)
                  T2iajb(i1,a1,j,b)        = T2old_ab(a1,i1,b,j)
                  T1iajb(i,a,j,b)          = Tiaia(i,a,i1,a1)*T2iajb(i1,a1,j,b)

                  T1iajb(i,a,j,b)         *= 0.125
#bgn_debug
#                  T1iajb(i,a,j,b) *= 1.0
#end_debug
                  Tiajb(i,a,j,b)          += T1iajb(i,a,j,b)

                  Tiaia(i,a,i1,a1)         = t1a_old(a1,i)^tai(a,i1)
                  T1iajb(i,a,j,b)          = Tiaia(i,a,i1,a1)*L2old_ab(i1,a1,j,b)
                  T1iajb(i,a,j,b)         *= -0.125
#bgn_debug
#                  T1iajb(i,a,j,b) *= 1.0
#end_debug
                  Tiajb(i,a,j,b)          += T1iajb(i,a,j,b)
               ENDDO a1 
            ENDDO i1 
            DO j1 
               GET t1b_old(b,j1) 
               tbj(b,j1)               = t1b_old(b,j1) 
               DO b1 
                  REQUEST T2old_ab(a,i,b1,j1) b1 
                  REQUEST L2old_bb(j1,b1,j,b) b1 
                  REQUEST T2old_bb(b,j,b1,j1) b1 
                  REQUEST L2old_ab(i,a,j1,b1) b1 
                  GET t1b_old(b1,j)

                  T1iajb(i,a,j,b)          = T2old_ab(a,i,b1,j1)*L2old_bb(j1,b1,j,b)
                  T1iajb(i,a,j,b)         *= 0.125
#bgn_debug
#                  T1iajb(i,a,j,b) *= 1.0
#end_debug
                  Tiajb(i,a,j,b)          += T1iajb(i,a,j,b)

                  Tibja(i,b,j,a)           = T1iajb(i,a,j,b)
                  Tibja(i,b,j,a)          *= 4.0
                  PREPARE Vibja_abba(i,b,j,a) += Tibja(i,b,j,a)
#                 T1iajb(i,a,j,b)          = T2old_bb(b,j,b1,j1)*L2old_ab(i,a,j1,b1)
                  Tjbjb(j1,b1,j,b)         = T2old_bb(b,j,b1,j1)
                  T1iajb(i,a,j,b)          = L2old_ab(i,a,j1,b1)*Tjbjb(j1,b1,j,b)
                  T1iajb(i,a,j,b)         *= 0.125
#bgn_debug
#                  T1iajb(i,a,j,b) *= 1.0
#end_debug
                  Tiajb(i,a,j,b)          += T1iajb(i,a,j,b)

                  Tjbjb(j,b,j1,b1)         = t1b_old(b1,j)^tbj(b,j1)
                  T1iajb(i,a,j,b)          = Tjbjb(j,b,j1,b1)*L2old_ab(i,a,j1,b1)
                  T1iajb(i,a,j,b)         *= -0.125
#bgn_debug
#                  T1iajb(i,a,j,b) *= 1.0
#end_debug
                  Tiajb(i,a,j,b)          += T1iajb(i,a,j,b)
               ENDDO b1 
            ENDDO j1 
# Multiply by 4(VFL) to match aces: Note the 'switched' storage pattern  
#           Tiajb(i,a,j,b)          *= 4.0 
            Tibja(i,b,j,a)           = Tiajb(i,a,j,b) 

            PREPARE Dibja_abba(i,b,j,a) += Tibja(i,b,j,a)  
      ENDPARDO i, a, b, j 
      execute server_barrier 

# Backtransform to AO representation 
# ----------------------------------
#
      PARDO sigma, b1, i, j1
#
            Tibjx(i,b1,j1,sigma) = 0.0
#
            DO a
#
               REQUEST Dibja_abba(i,b1,j1,a) a
#
               T1ibjx(i,b1,j1,sigma)  = Dibja_abba(i,b1,j1,a)*ca(sigma,a)
               T1ibjx(i,b1,j1,sigma) *= Mhalf 
               Tibjx(i,b1,j1,sigma)  += T1ibjx(i,b1,j1,sigma)
#
            ENDDO a
#
            PREPARE Dibjx(i,b1,j1,sigma) = Tibjx(i,b1,j1,sigma)
#
      ENDPARDO sigma, b1, i, j1
      execute server_barrier
#
      PARDO sigma, nu, i, j1
#
            Tixxj(i,nu,sigma,j1) = 0.0
#
            DO b1
#
               REQUEST Dibjx(i,b1,j1,sigma) b1
#
               T1ixxj(i,nu,sigma,j1) = Dibjx(i,b1,j1,sigma)*cb(nu,b1)
               Tixxj(i,nu,sigma,j1) += T1ixxj(i,nu,sigma,j1)
#
            ENDDO b1
#
            Tixxj(i,nu,sigma,j1)         *= 4.0
            PREPARE Dixxj(i,nu,sigma,j1) += Tixxj(i,nu,sigma,j1)
#
      ENDPARDO sigma, nu, i, j1
      execute server_barrier

# Done backtransformation 
#
#      PARDO mu, nu, lambda, sigma
#            Txxxx_aa(mu,nu,lambda,sigma) = 0.0
#            DO i
#               Tixxx(i,nu,lambda,sigma) = 0.0
#               DO j
#                  REQUEST Dixxj(i,nu,lambda,j) j
#                  T1ixxx(i,nu,lambda,sigma) = Dixxj(i,nu,lambda,j)*cb(sigma,j)
#                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
#               ENDDO j
#               T1xxxx(mu,nu,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
#               Txxxx_aa(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#            ENDDO i
#            PREPARE Dxxxx_abba(mu,nu,lambda,sigma) += Txxxx_aa(mu,nu,lambda,sigma)
#      ENDPARDO mu, nu, lambda, sigma
#      execute server_barrier
#
#bgn_debug
#     esuma   = 0.0
#     ecorraa = 0.0
#     PARDO mu, nu, lambda, sigma
#           request Dxxxx_abba(mu,nu,lambda,sigma) sigma
#           etemp = Dxxxx_abba(mu,nu,lambda,sigma)*Dxxxx_abba(mu,nu,lambda,sigma)
#           esuma += etemp
#     ENDPARDO mu, nu, lambda, sigma
#     execute server_barrier
#     collective ecorraa += esuma
#     execute print_scalar ecorraa
#end_debug

      ENDPROC DIBJAABBA 
#     -----------------
#--------------------------------------------------------------------------
      PROC DIBJABAAB 
#     --------------
      PARDO j, b, a, i 
            Tjbia(j,b,i,a) = 0.0  
            GET t1a_old(a,i) 
            GET l1b_old(j,b) 
            GET t1b_old(b,j) 
            GET l1a_old(i,a) 
            T1jbia(j,b,i,a)  = l1b_old(j,b)^t1a_old(a,i) 
            T1jbia(j,b,i,a) *= 0.125  
            Tjbia(j,b,i,a)  += T1jbia(j,b,i,a) 

            T1jbia(j,b,i,a)  = l1a_old(i,a)^t1b_old(b,j) 
            T1jbia(j,b,i,a) *= 0.125  
            Tjbia(j,b,i,a)  += T1jbia(j,b,i,a) 
            DO i1 
               GET t1a_old(a,i1) 
               tai(a,i1)                   = t1a_old(a,i1) 
               DO a1 
                  REQUEST T2old_ab(a1,i1,b,j) a1 
                  REQUEST L2old_aa(i1,a1,i,a) a1 
                  REQUEST T2old_aa(a,i,a1,i1) a1 
                  REQUEST L2old_ab(i1,a1,j,b) a1 
                  GET t1a_old(a1,i)

                  T1jbia(j,b,i,a)          = T2old_ab(a1,i1,b,j)*L2old_aa(i1,a1,i,a)
                  T1jbia(j,b,i,a)         *= 0.125
                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)

                  Tjaib(j,a,i,b)           = T1jbia(j,b,i,a)
                  Tjaib(j,a,i,b)          *= 4.0
                  PREPARE Vibja_baab(j,a,i,b) += Tjaib(j,a,i,b)
#                 T1jbia(j,b,i,a)          = T2old_aa(a,i,a1,i1)*L2old_ab(i1,a1,j,b)
                  Taijb(a,i,j,b)           = T2old_aa(a,i,a1,i1)*L2old_ab(i1,a1,j,b)
                  T1jbia(j,b,i,a)          = Taijb(a,i,j,b)

                  T1jbia(j,b,i,a)         *= 0.125
                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)

                  Tiaia(i,a,i1,a1)         = t1a_old(a1,i)^tai(a,i1)
                  T1jbia(j,b,i,a)          = Tiaia(i,a,i1,a1)*L2old_ab(i1,a1,j,b)
                  T1jbia(j,b,i,a)          *= -0.125
                  Tjbia(j,b,i,a)           += T1jbia(j,b,i,a)
               ENDDO a1 
            ENDDO i1 
            DO j1 
               GET t1b_old(b,j1) 
               tbj(b,j1) = t1b_old(b,j1) 
               DO b1 
                  REQUEST T2old_bb(b,j,b1,j1) b1 
                  REQUEST L2old_ab(i,a,j1,b1) b1 
                  REQUEST T2old_ab(a,i,b1,j1) b1 
                  REQUEST L2old_bb(j,b,j1,b1) b1 
                  GET t1b_old(b1,j)

                  T1jbia(j,b,i,a)          = T2old_bb(b,j,b1,j1)*L2old_ab(i,a,j1,b1)
                  T1jbia(j,b,i,a)         *= 0.125
                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)

                  Tjaib(j,a,i,b)           = T1jbia(j,b,i,a)
                  Tjaib(j,a,i,b)          *= 4.0
                  PREPARE Vibja_baab(j,a,i,b) += Tjaib(j,a,i,b)
#                 T1jbia(j,b,i,a)          = T2old_ab(a,i,b1,j1)*L2old_bb(j,b,j1,b1)
                  T2jbia(j1,b1,i,a)        = T2old_ab(a,i,b1,j1)
                  T1jbia(j,b,i,a)          = L2old_bb(j,b,j1,b1)*T2jbia(j1,b1,i,a)

                  T1jbia(j,b,i,a)         *= 0.125
                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)

                  Tjbjb(j,b,j1,b1)         = t1b_old(b1,j)^tbj(b,j1)
                  T1jbia(j,b,i,a)          = Tjbjb(j,b,j1,b1)*L2old_ab(i,a,j1,b1)
                  T1jbia(j,b,i,a)         *= -0.125
                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)
               ENDDO b1 
            ENDDO j1 
# Multiply by 4(VFL) to match aces 
#           Tjbia(j,b,i,a)          *= 4.0 
            Tjaib(j,a,i,b)           = Tjbia(j,b,i,a) 

            PREPARE Dibja_baab(j,a,i,b) += Tjaib(j,a,i,b) 
      ENDPARDO j, b, a, i 
      execute server_barrier 

# Backtransform to AO representation 
# ----------------------------------
#
      PARDO sigma, a1, j, i1
#
            Tjaix(j,a1,i1,sigma) = 0.0
#
            DO b
#
               REQUEST Dibja_baab(j,a1,i1,b) b
#
               T1jaix(j,a1,i1,sigma) = Dibja_baab(j,a1,i1,b)*cb(sigma,b)
               Tjaix(j,a1,i1,sigma) += T1jaix(j,a1,i1,sigma)
#
            ENDDO b
#
            PREPARE Djaix(j,a1,i1,sigma) = Tjaix(j,a1,i1,sigma)
#
      ENDPARDO sigma, a1, j, i1
      execute server_barrier
#
      PARDO sigma, nu, j, i1
#
            Tixxj(i1,sigma,nu,j) = 0.0
#
            DO a1
#
               REQUEST Djaix(j,a1,i1,sigma) a1
#
               T1ixxj(i1,sigma,nu,j)  = Djaix(j,a1,i1,sigma)*ca(nu,a1)
               T1ixxj(i1,sigma,nu,j) *= Phalf 
               Tixxj(i1,sigma,nu,j)  += T1ixxj(i1,sigma,nu,j)
#
            ENDDO a1
#
            Tixxj(i1,sigma,nu,j)         *= 4.0
            PREPARE Dixxj(i1,sigma,nu,j) += Tixxj(i1,sigma,nu,j)
#
      ENDPARDO sigma, nu, j, i1
      execute server_barrier

# Done backtransformation 
#      PARDO mu, nu, lambda, sigma
#            Txxxx_aa(mu,nu,lambda,sigma) = 0.0
#            DO i
#                Txxix(mu,nu,i,sigma) = 0.0
#               DO j
#                  REQUEST Djxix(j,nu,i,sigma) j
#                  T1xxix(mu,nu,i,sigma) = Djxix(j,nu,i,sigma)*cb(mu,j)
#                  Txxix(mu,nu,i,sigma) += T1xxix(mu,nu,i,sigma)
#               ENDDO j
#               T1xxxx(mu,nu,lambda,sigma) = Txxix(mu,nu,i,sigma)*ca(lambda,i)
#               Txxxx_aa(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#          ENDDO i
#            PREPARE Dxxxx_baab(mu,nu,lambda,sigma) += Txxxx_aa(mu,nu,lambda,sigma)
#      ENDPARDO mu, nu, lambda, sigma
#      execute server_barrier
#
# Done backtransformation 
#bgn_debug
#      execute server_barrier
#      esuma   = 0.0
#      Ecorraa = 0.0
#      PARDO mu, nu, lambda, sigma
#            request Dxxxx_baab(mu,nu,lambda,sigma) sigma
#            etemp = Dxxxx_baab(mu,nu,lambda,sigma)*Dxxxx_baab(mu,nu,lambda,sigma)
#            esuma += etemp
#      ENDPARDO mu, nu, lambda, sigma
#      execute server_barrier
#      collective ecorraa += esuma
#      execute print_scalar ecorraa
#end_debug
      ENDPROC DIBJABAAB
#     -----------------
#----------------------------------------------------------------------------
      PROC DIBJA
        CALL DIBJAAAAA # BTRAN OK
        CALL DIBJABBBB # BTRAN OK

        CALL DIBJAABAB # BTRAN OK
        CALL DIBJABABA # BTRAN OK

        CALL DIBJABAAB # BTRAN OK
        CALL DIBJAABBA # BTRAN OK
      ENDPROC DIBJA
#----------------------------------------------------
#
      PROC DIBJAAAAA_X
#     ----------------

      PARDO a, a1, i, i1
            Tiaia(i,a1,i1,a)  = 0.0
            PREPARE Dibja_aaaa_x(i,a1,i1,a) = Tiaia(i,a1,i1,a)
            PREPARE Vibja_aaaa_x(i,a1,i1,a) = Tiaia(i,a1,i1,a)
      ENDPARDO a, a1, i, i1

      EXECUTE SERVER_BARRIER

      PARDO a, a1, i, i1
            Tiaia(i,a1,i1,a)  = 0.0
            TAiaia(i1,a,i,a1) = 0.0

            GET t1a_old(a,i)
            GET l1a_old(i1,a1)

            GET t1a_old_x(a,i)
            GET l1a_old_x(i1,a1)

# 1/4P(ia,jb)[l1_x(a,i)*t1(j,b) + l1(a,i)*t1_x(j,b)] 
# Overall Factor is 1/??

            T1iaia(i,a1,i1,a)  = t1a_old(a,i)^l1a_old_x(i1,a1)
            T1iaia(i,a1,i1,a) *= 0.125
#bgn_debug
#            T1iaia(i,a1,i1,a) *= 1.0
#end_debug
            Tiaia(i,a1,i1,a)  += T1iaia(i,a1,i1,a)

            T2iaia(i1,a,i,a1)  = T1iaia(i,a1,i1,a)
            TAiaia(i1,a,i,a1) += T2iaia(i1,a,i,a1)

            T1iaia(i,a1,i1,a)  = t1a_old_x(a,i)^l1a_old(i1,a1)
            T1iaia(i,a1,i1,a) *= 0.125
#bgn_debug
#            T1iaia(i,a1,i1,a) *= 1.0
#end_debug
            Tiaia(i,a1,i1,a)  += T1iaia(i,a1,i1,a)

            T2iaia(i1,a,i,a1)  = T1iaia(i,a1,i1,a)   
            TAiaia(i1,a,i,a1) += T2iaia(i1,a,i,a1)

            DO i2
               GET t1a_old(a,i2)
               GET t1a_old_x(a,i2)
               DO a2

                  REQUEST T2old_aa(a,i,a2,i2)   a2
                  REQUEST L2old_aa(i1,a1,i2,a2) a2
                  GET t1a_old(a2,i)

                  REQUEST T2old_aa_x(a,i,a2,i2)   a2
                  REQUEST L2old_aa_x(i1,a1,i2,a2) a2

                  GET t1a_old_x(a2,i)

# 1/4[l2(ae,im)*t2_x(eb,mj) + l2_x(ae,im)*t(mj,eb)] from T2 and L2 AA
# The overall factor here is 1/8??

                  Tiaai(i2,a2,a,i)           = T2old_aa_x(a,i,a2,i2)
                  T1iaai(i1,a1,a,i)          = L2old_aa(i1,a1,i2,a2)*Tiaai(i2,a2,a,i)
                  T1iaia(i,a1,i1,a)          = T1iaai(i1,a1,a,i)
                  T1iaia(i,a1,i1,a)         *= 0.5
                  PREPARE Vibja_aaaa_x(i,a1,i1,a) += T1iaia(i,a1,i1,a)

                  T1iaia(i,a1,i1,a)         *= 0.25
#bgn_debug
#                  T1iaia(i,a1,i1,a) *=1.0
#end_debug
                  Tiaia(i,a1,i1,a)          += T1iaia(i,a1,i1,a)

                  T2iaia(i1,a,i,a1)          = T1iaia(i,a1,i1,a)
                  TAiaia(i1,a,i,a1)         += T2iaia(i1,a,i,a1)

                  Tiaai(i2,a2,a,i)           = T2old_aa(a,i,a2,i2)
                  T1iaai(i1,a1,a,i)          = L2old_aa_x(i1,a1,i2,a2)*Tiaai(i2,a2,a,i)
                  T1iaia(i,a1,i1,a)          = T1iaai(i1,a1,a,i)
                  T1iaia(i,a1,i1,a)         *= 0.5
                  PREPARE Vibja_aaaa_x(i,a1,i1,a) += T1iaia(i,a1,i1,a)

                  T1iaia(i,a1,i1,a)         *= 0.25
#bgn_debug
#                  T1iaia(i,a1,i1,a) *=1.0
#end_debug
                  Tiaia(i,a1,i1,a)          += T1iaia(i,a1,i1,a)

                  T2iaia(i1,a,i,a1)          = T1iaia(i,a1,i1,a)
                  TAiaia(i1,a,i,a1)         += T2iaia(i1,a,i,a1)
 
# -1/4[l2(ae,im)*t_x(j,e)*t(m,b) + l2_x(ae,im)*t1(j,e)*t1(m,b) +
#      l2(ae,im)*t1_x(j,e)*t(m,b) + l2(ae,im)*t1(j,e)*t1_x(m,b)]
# Overall factor used is 1/8??

                  tai(a,i2)                  = t1a_old_x(a,i2)
                  T3iaia(i2,a2,i,a)          = t1a_old(a2,i)^tai(a,i2)
                  T2iaia(i1,a1,i,a)          = L2old_aa(i1,a1,i2,a2)*T3iaia(i2,a2,i,a)
                  T1iaia(i,a1,i1,a)          = T2iaia(i1,a1,i,a)
                  T1iaia(i,a1,i1,a)         *= -0.125
#bgn_debug
#                  T1iaia(i,a1,i1,a) *=1.0
#end_debug
                  Tiaia(i,a1,i1,a)          += T1iaia(i,a1,i1,a)

                  T2iaia(i1,a,i,a1)          = T1iaia(i,a1,i1,a)
                  TAiaia(i1,a,i,a1)         += T2iaia(i1,a,i,a1)

                  tai(a,i2)                  = t1a_old(a,i2)
                  T3iaia(i2,a2,i,a)          = t1a_old_x(a2,i)^tai(a,i2)
                  T2iaia(i1,a1,i,a)          = L2old_aa(i1,a1,i2,a2)*T3iaia(i2,a2,i,a)
                  T1iaia(i,a1,i1,a)          = T2iaia(i1,a1,i,a)
                  T1iaia(i,a1,i1,a)         *= -0.125
#bgn_debug
#                  T1iaia(i,a1,i1,a) *=1.0
#end_debug
                  Tiaia(i,a1,i1,a)          += T1iaia(i,a1,i1,a)

                  T2iaia(i1,a,i,a1)          = T1iaia(i,a1,i1,a)
                  TAiaia(i1,a,i,a1)         += T2iaia(i1,a,i,a1)

                  tai(a,i2)                  = t1a_old(a,i2)
                  T3iaia(i2,a2,i,a)          = t1a_old(a2,i)^tai(a,i2)
                  T2iaia(i1,a1,i,a)          = L2old_aa_x(i1,a1,i2,a2)*T3iaia(i2,a2,i,a)
                  T1iaia(i,a1,i1,a)          = T2iaia(i1,a1,i,a)
                  T1iaia(i,a1,i1,a)         *= -0.125
#bgn_debug
#                  T1iaia(i,a1,i1,a) *=1.0
#end_debug
                  Tiaia(i,a1,i1,a)          += T1iaia(i,a1,i1,a)

                  T2iaia(i1,a,i,a1)          = T1iaia(i,a1,i1,a)
                  TAiaia(i1,a,i,a1)         += T2iaia(i1,a,i,a1)
               ENDDO a2
            ENDDO i2

            DO j
            DO b
               REQUEST T2old_ab(a,i,b,j)   b
               REQUEST L2old_ab(i1,a1,j,b) b

               REQUEST T2old_ab_x(a,i,b,j)   b
               REQUEST L2old_ab_x(i1,a1,j,b) b

#1/4[l2(ae,im)*t2_x(eb,mj) + l2_x(ae,im)*t(mj,eb)] from L2 and T2 AB

               Tjbia(j,b,i,a)             = T2old_ab_x(a,i,b,j)
               T2iaia(i1,a1,i,a)          = L2old_ab(i1,a1,j,b)*Tjbia(j,b,i,a)
               T1iaia(i,a1,i1,a)          = T2iaia(i1,a1,i,a)
               T1iaia(i,a1,i1,a)         *= 0.5
               PREPARE Vibja_aaaa_x(i,a1,i1,a) += T1iaia(i,a1,i1,a)

               T1iaia(i,a1,i1,a)         *= 0.25
#bgn_debug
#               T1iaia(i,a1,i1,a) *= 1.0
#end_debug
               Tiaia(i,a1,i1,a)          += T1iaia(i,a1,i1,a)

               T2iaia(i1,a,i,a1)          = T1iaia(i,a1,i1,a)
               TAiaia(i1,a,i,a1)         += T2iaia(i1,a,i,a1)

               Tjbia(j,b,i,a)             = T2old_ab(a,i,b,j)
               T2iaia(i1,a1,i,a)          = L2old_ab_x(i1,a1,j,b)*Tjbia(j,b,i,a)
               T1iaia(i,a1,i1,a)          = T2iaia(i1,a1,i,a)
               T1iaia(i,a1,i1,a)         *= 0.5
               PREPARE Vibja_aaaa_x(i,a1,i1,a) += T1iaia(i,a1,i1,a)
               
               T1iaia(i,a1,i1,a)         *= 0.25
#bgn_debug
#               T1iaia(i,a1,i1,a) *= 1.0
#end_debug
               Tiaia(i,a1,i1,a)          += T1iaia(i,a1,i1,a)

               T2iaia(i1,a,i,a1)          = T1iaia(i,a1,i1,a)
               TAiaia(i1,a,i,a1)         += T2iaia(i1,a,i,a1)

            ENDDO b
            ENDDO j

# Multiply by 4 to match aces 
#           Tiaia(i,a1,i1,a)  *= 4.0 
#           TAiaia(i1,a,i,a1) *= 4.0 

            PREPARE Dibja_aaaa_x(i,a1,i1,a) += Tiaia(i,a1,i1,a)
            TAiaia(i1,a,i,a1)               *= Fact 
            PREPARE Dibja_aaaa_x(i1,a,i,a1) += TAiaia(i1,a,i,a1)
      ENDPARDO a, a1, i, i1
      execute server_barrier
#
# Two particle contribution to G-tensor: O(pq,rs)*<AA|S_z(1)+2S_z(2)pqsr|AA>
# DAAAA = 1/2 DAAAA + DAAAA
# Backtransform to AO representation 
#
      PARDO sigma, a1, i, i1
            Tiaix(i,a1,i1,sigma) = 0.0
            DO a
               REQUEST Dibja_aaaa_x(i,a1,i1,a) a 

               Tiaia(i,a1,i1,a)  = Dibja_aaaa_x(i,a1,i1,a)
               Tiaia(i,a1,i1,a) *= 1.5
#bgn_debug
#               Tiaia(i,a1,i1,a) *= 1.5
#               Tiaia(i,a1,i1,a) *= 1.0
#end_debug
               T1iaix(i,a1,i1,sigma)  = Tiaia(i,a1,i1,a)*ca(sigma,a)
               Tiaix(i,a1,i1,sigma)  += T1iaix(i,a1,i1,sigma)  
            ENDDO a
            PREPARE Diaix_x(i,a1,i1,sigma) = Tiaix(i,a1,i1,sigma)
      ENDPARDO sigma, a1, i, i1
      execute server_barrier

      PARDO sigma, nu, i, i1
            Txiix(nu,i,i1,sigma) = 0.0 
            Tixix(i,nu,i1,sigma) = 0.0 
            DO a1 
               REQUEST Diaix_x(i,a1,i1,sigma) a1 
               T1ixix(i,nu,i1,sigma) = Diaix_x(i,a1,i1,sigma)*ca(nu,a1) 
               T1xiix(nu,i,i1,sigma) = T1ixix(i,nu,i1,sigma) 

               Tixix(i,nu,i1,sigma) += T1ixix(i,nu,i1,sigma) 
               Txiix(nu,i,i1,sigma) += T1xiix(nu,i,i1,sigma) 
            ENDDO a1
            Txiix(nu,i,i1,sigma) *=  4.0 
            Tixix(i,nu,i1,sigma) *= -4.0 
            PREPARE Dixix_x(i,nu,i1,sigma) += Tixix(i,nu,i1,sigma)
            PREPARE Dxiix_x(nu,i,i1,sigma) += Txiix(nu,i,i1,sigma)
      ENDPARDO sigma, nu, i, i1
      execute server_barrier

      ENDPROC DIBJAAAAA_X
#     -------------------
#............................................................................
#
      PROC DIBJAABAB_X
#     ----------------
      PARDO b1, b, i, i1
            Tibib(i1,b1,i,b)  = 0.0
            PREPARE Dibja_abab_x(i1,b1,i,b) = Tibib(i1,b1,i,b) 
            PREPARE Vibja_abab_x(i,b,i1,b1) = Tibib(i1,b1,i,b)
      ENDPARDO b1, b, i, i1

      EXECUTE SERVER_BARRIER

      PARDO b1, b, i, i1
            Tibib(i1,b1,i,b)  = 0.0
            TAibib(i,b,i1,b1) = 0.0
            DO j
               GET t1b_old(b1,j)
               GET t1b_old_x(b1,j)
               DO a
                  REQUEST T2old_ab(a,i,b1,j) a
                  REQUEST L2old_ab(i1,a,j,b) a
                  GET t1a_old(a,i)

                  REQUEST T2old_ab_x(a,i,b1,j) a
                  REQUEST L2old_ab_x(i1,a,j,b) a
                  GET t1a_old_x(a,i)

                  T1ibib(i1,b1,i,b)          = L2old_ab(i1,a,j,b)*T2old_ab_x(a,i,b1,j)
                  T1ibib(i1,b1,i,b)         *= 0.125
#bgn_debug
#                  T1ibib(i1,b1,i,b) *=1.0
#end_debug
                  Tibib(i1,b1,i,b)          += T1ibib(i1,b1,i,b)

                  T2ibib(i,b,i1,b1)          = T1ibib(i1,b1,i,b)
                  TAibib(i,b,i1,b1)         += T2ibib(i,b,i1,b1)

                  T2ibib(i,b,i1,b1)         *= 4.0
                  PREPARE Vibja_abab_x(i,b,i1,b1) += T2ibib(i,b,i1,b1)

                  T1ibib(i1,b1,i,b)          = L2old_ab_x(i1,a,j,b)*T2old_ab(a,i,b1,j)
                  T1ibib(i1,b1,i,b)         *= 0.125
#bgn_debug
#                  T1ibib(i1,b1,i,b) *=1.0
#end_debug
                  Tibib(i1,b1,i,b)          += T1ibib(i1,b1,i,b)

                  T2ibib(i,b,i1,b1)          = T1ibib(i1,b1,i,b)
                  TAibib(i,b,i1,b1)         += T2ibib(i,b,i1,b1)

                  T2ibib(i,b,i1,b1)         *= 4.0
                  PREPARE Vibja_abab_x(i,b,i1,b1) += T2ibib(i,b,i1,b1)

                  Taibj(a,i,b1,j)            = t1a_old_x(a,i)^t1b_old(b1,j)
                  T1ibib(i1,b1,i,b)          = L2old_ab(i1,a,j,b)*Taibj(a,i,b1,j)
                  T1ibib(i1,b1,i,b)         *= 0.125
#bgn_debug
#                  T1ibib(i1,b1,i,b) *=1.0
#end_debug
                  Tibib(i1,b1,i,b)          += T1ibib(i1,b1,i,b)

                  T2ibib(i,b,i1,b1)          = T1ibib(i1,b1,i,b)
                  TAibib(i,b,i1,b1)         += T2ibib(i,b,i1,b1)

                  Taibj(a,i,b1,j)            = t1a_old(a,i)^t1b_old_x(b1,j)
                  T1ibib(i1,b1,i,b)          = L2old_ab(i1,a,j,b)*Taibj(a,i,b1,j)
                  T1ibib(i1,b1,i,b)         *= 0.125
#bgn_debug
#                  T1ibib(i1,b1,i,b) *=1.0
#end_debug
                  Tibib(i1,b1,i,b)          += T1ibib(i1,b1,i,b)

                  T2ibib(i,b,i1,b1)          = T1ibib(i1,b1,i,b)
                  TAibib(i,b,i1,b1)         += T2ibib(i,b,i1,b1)

                  Taibj(a,i,b1,j)            = t1a_old(a,i)^t1b_old(b1,j)
                  T1ibib(i1,b1,i,b)          = L2old_ab_x(i1,a,j,b)*Taibj(a,i,b1,j)
                  T1ibib(i1,b1,i,b)         *= 0.125
#bgn_debug
#                  T1ibib(i1,b1,i,b) *=1.0
#end_debug
                  Tibib(i1,b1,i,b)          += T1ibib(i1,b1,i,b)

                  T2ibib(i,b,i1,b1)          = T1ibib(i1,b1,i,b)
                  TAibib(i,b,i1,b1)         += T2ibib(i,b,i1,b1)
              ENDDO a
            ENDDO j
# Multiply by 4 to match aces 
#           Tibib(i1,b1,i,b)  *= 4.0 
#           TAibib(i,b,i1,b1) *= 4.0 

            PREPARE Dibja_abab_x(i1,b1,i,b) += Tibib(i1,b1,i,b)
            TAibib(i,b,i1,b1)               *= Fact
            PREPARE Dibja_abab_x(i,b,i1,b1) += TAibib(i,b,i1,b1)

      ENDPARDO b1, b, i, i1
      execute server_barrier
#                                                                  ++
# Two particle contribution to G-tensor: O(pq,rs)*<AB|S_z(1)+2S_z(2)pqsr|AB>
# DABAB = 1/2 DABAB - DABAB
# Backtransform to AO representation 
# Needs attention: Ajith Perera

      PARDO sigma, b1, i, i1
            Tibix(i,b1,i1,sigma) = 0.0
            DO b
               REQUEST Dibja_abab_x(i,b1,i1,b) b
               Tibib(i1,b1,i,b)  = Dibja_abab_x(i,b1,i1,b) 
               Tibib(i1,b1,i,b) *= -0.5
#bgn_debug               
#               Tibib(i1,b1,i,b) *= -0.5
#               Tibib(i1,b1,i,b) *= 1.0
#end_debug
               T1ibix(i,b1,i1,sigma) = Tibib(i1,b1,i,b)*cb(sigma,b)
               Tibix(i,b1,i1,sigma) += T1ibix(i,b1,i1,sigma)
            ENDDO b
            PREPARE Dibix_x(i,b1,i1,sigma) = Tibix(i,b1,i1,sigma)
      ENDPARDO sigma, b1, i, i1
      execute server_barrier

      PARDO sigma, nu, i, i1
            Tixix(i,nu,i1,sigma) = 0.0
            DO b1
               REQUEST Dibix_x(i,b1,i1,sigma) b1
               T1ixix(i,nu,i1,sigma) = Dibix_x(i,b1,i1,sigma)*cb(nu,b1)
               Tixix(i,nu,i1,sigma) += T1ixix(i,nu,i1,sigma)
            ENDDO b1
            Tixix(i,nu,i1,sigma)         *= -4.0
            PREPARE Dixix_x(i,nu,i1,sigma) += Tixix(i,nu,i1,sigma)
      ENDPARDO sigma, nu, i, i1
      execute server_barrier

      ENDPROC DIBJAABAB_X
#     -------------------
#-------------------------------------------------------------------------                         
      PROC DIBJABBBB_X
#     ----------------
      PARDO b, b1, j, j1
            Tjbjb(j,b1,j1,b)  = 0.0
            PREPARE Dibja_bbbb_x(j,b1,j1,b) = Tjbjb(j,b1,j1,b) 
            PREPARE Vibja_bbbb_x(j,b1,j1,b) = Tjbjb(j,b1,j1,b)
      ENDPARDO b, b1, j, j1

      EXECUTE SERVER_BARRIER

      PARDO b, b1, j, j1
            Tjbjb(j,b1,j1,b)  = 0.0
            TAjbjb(j1,b,j,b1) = 0.0

            GET t1b_old(b,j)
            GET l1b_old(j1,b1)

            GET t1b_old_x(b,j)
            GET l1b_old_x(j1,b1)

            T1jbjb(j,b1,j1,b)  = t1b_old_x(b,j)^l1b_old(j1,b1)
            T1jbjb(j,b1,j1,b) *= 0.125
            Tjbjb(j,b1,j1,b)  += T1jbjb(j,b1,j1,b)

            T2jbjb(j1,b,j,b1)  = T1jbjb(j,b1,j1,b)
            TAjbjb(j1,b,j,b1) += T2jbjb(j1,b,j,b1)
            
            T1jbjb(j,b1,j1,b)  = t1b_old(b,j)^l1b_old_x(j1,b1)
            T1jbjb(j,b1,j1,b) *= 0.125
            Tjbjb(j,b1,j1,b)  += T1jbjb(j,b1,j1,b)

            T2jbjb(j1,b,j,b1)  = T1jbjb(j,b1,j1,b)
            TAjbjb(j1,b,j,b1) += T2jbjb(j1,b,j,b1)

            DO j2
               GET t1b_old(b,j2)
               GET t1b_old_x(b,j2)
               DO b2

                  REQUEST T2old_bb(b,j,b2,j2)   b2
                  REQUEST L2old_bb(j1,b1,j2,b2) b2
                  GET t1b_old(b2,j)

                  REQUEST T2old_bb_x(b,j,b2,j2)   b2
                  REQUEST L2old_bb_x(j1,b1,j2,b2) b2
                  GET t1b_old_x(b2,j)

#                 T1jbjb(j,b1,j1,b)          = L2old_bb(j1,b1,j2,b2)*T2old_bb(b,j,b2,j2)

                  T3jbjb(j2,b2,j,b)          = T2old_bb_x(b,j,b2,j2)
                  T2jbjb(j1,b1,j,b)          = L2old_bb(j1,b1,j2,b2)*T3jbjb(j2,b2,j,b)
                  T1jbjb(j,b1,j1,b)          = T2jbjb(j1,b1,j,b)
                  T1jbjb(j,b1,j1,b)         *= 0.5
                  PREPARE Vibja_bbbb_x(j,b1,j1,b) += T1jbjb(j,b1,j1,b)

                  T1jbjb(j,b1,j1,b)         *= 0.25
                  Tjbjb(j,b1,j1,b)          += T1jbjb(j,b1,j1,b)

                  T2jbjb(j1,b,j,b1)          = T1jbjb(j,b1,j1,b)
                  TAjbjb(j1,b,j,b1)         += T2jbjb(j1,b,j,b1)

                  T3jbjb(j2,b2,j,b)          = T2old_bb(b,j,b2,j2)
                  T2jbjb(j1,b1,j,b)          = L2old_bb_x(j1,b1,j2,b2)*T3jbjb(j2,b2,j,b)
                  T1jbjb(j,b1,j1,b)          = T2jbjb(j1,b1,j,b)
                  T1jbjb(j,b1,j1,b)         *= 0.5
                  PREPARE Vibja_bbbb_x(j,b1,j1,b) += T1jbjb(j,b1,j1,b)

                  T1jbjb(j,b1,j1,b)         *= 0.25
                  Tjbjb(j,b1,j1,b)          += T1jbjb(j,b1,j1,b)

                  T2jbjb(j1,b,j,b1)          = T1jbjb(j,b1,j1,b)
                  TAjbjb(j1,b,j,b1)         += T2jbjb(j1,b,j,b1)

                  tbj(b,j2)                 = t1b_old_x(b,j2)
                  Tjbbj(j2,b2,b,j)          = t1b_old(b2,j)^tbj(b,j2)
                  T1jbbj(j1,b1,b,j)         = L2old_bb(j1,b1,j2,b2)*Tjbbj(j2,b2,b,j)
                  T1jbjb(j,b1,j1,b)         = T1jbbj(j1,b1,b,j)
                  T1jbjb(j,b1,j1,b)        *= -0.125
                  Tjbjb(j,b1,j1,b)         += T1jbjb(j,b1,j1,b)

                  T2jbjb(j1,b,j,b1)         = T1jbjb(j,b1,j1,b)
                  TAjbjb(j1,b,j,b1)        += T2jbjb(j1,b,j,b1)

                  tbj(b,j2)                = t1b_old(b,j2)
                  Tjbbj(j2,b2,b,j)          = t1b_old_x(b2,j)^tbj(b,j2)
                  T1jbbj(j1,b1,b,j)         = L2old_bb(j1,b1,j2,b2)*Tjbbj(j2,b2,b,j)
                  T1jbjb(j,b1,j1,b)         = T1jbbj(j1,b1,b,j)
                  T1jbjb(j,b1,j1,b)        *= -0.125
                  Tjbjb(j,b1,j1,b)         += T1jbjb(j,b1,j1,b)

                  T2jbjb(j1,b,j,b1)         = T1jbjb(j,b1,j1,b)
                  TAjbjb(j1,b,j,b1)        += T2jbjb(j1,b,j,b1)

                  tbj(b,j2)                 = t1b_old(b,j2)
                  Tjbbj(j2,b2,b,j)          = t1b_old(b2,j)^tbj(b,j2)
                  T1jbbj(j1,b1,b,j)         = L2old_bb_x(j1,b1,j2,b2)*Tjbbj(j2,b2,b,j)
                  T1jbjb(j,b1,j1,b)         = T1jbbj(j1,b1,b,j)
                  T1jbjb(j,b1,j1,b)        *= -0.125
                  Tjbjb(j,b1,j1,b)         += T1jbjb(j,b1,j1,b)

                  T2jbjb(j1,b,j,b1)         = T1jbjb(j,b1,j1,b)
                  TAjbjb(j1,b,j,b1)        += T2jbjb(j1,b,j,b1)

               ENDDO b2
            ENDDO j2
            DO i
            DO a
               REQUEST T2old_ab(a,i,b,j)   a
               REQUEST L2old_ab(i,a,j1,b1) a

               REQUEST T2old_ab_x(a,i,b,j)   a
               REQUEST L2old_ab_x(i,a,j1,b1) a

               Tjbia(j,b,i,a)             = T2old_ab_x(a,i,b,j)
               T2jbjb(j,b,j1,b1)          = Tjbia(j,b,i,a)*L2old_ab(i,a,j1,b1)
               T1jbjb(j,b1,j1,b)          = T2jbjb(j,b,j1,b1)
               T1jbjb(j,b1,j1,b)         *= 0.5
               PREPARE Vibja_bbbb_x(j,b1,j1,b) += T1jbjb(j,b1,j1,b)

               T1jbjb(j,b1,j1,b)         *= 0.25
               Tjbjb(j,b1,j1,b)          += T1jbjb(j,b1,j1,b)

               T2jbjb(j1,b,j,b1)          = T1jbjb(j,b1,j1,b)
               TAjbjb(j1,b,j,b1)         += T2jbjb(j1,b,j,b1)

               Tjbia(j,b,i,a)             = T2old_ab(a,i,b,j)
               T2jbjb(j,b,j1,b1)          = Tjbia(j,b,i,a)*L2old_ab_x(i,a,j1,b1)
               T1jbjb(j,b1,j1,b)          = T2jbjb(j,b,j1,b1)
               T1jbjb(j,b1,j1,b)         *= 0.5
               PREPARE Vibja_bbbb_x(j,b1,j1,b) += T1jbjb(j,b1,j1,b)

               T1jbjb(j,b1,j1,b)         *= 0.25
               Tjbjb(j,b1,j1,b)          += T1jbjb(j,b1,j1,b)

               T2jbjb(j1,b,j,b1)          = T1jbjb(j,b1,j1,b)
               TAjbjb(j1,b,j,b1)         += T2jbjb(j1,b,j,b1)
            ENDDO a
            ENDDO i
# Multiply by 4 to match aces 
#           Tjbjb(j,b1,j1,b)  *= 4.0 
#           TAjbjb(j1,b,j,b1) *= 4.0 

            PREPARE Dibja_bbbb_x(j,b1,j1,b) += Tjbjb(j,b1,j1,b)
            TAjbjb(j1,b,j,b1)               *= Fact
            PREPARE Dibja_bbbb_x(j1,b,j,b1) += TAjbjb(j1,b,j,b1)

      ENDPARDO b, b1, j, j1
      execute server_barrier

#------------------------------------------------------------------------
# Backtransform to AO representation 
#                                                                ++
# Two particle contribution to G-tensor: O(pq,rs)*<|S_z(1)+2S_z(2)pqsr|>
# DBBBB = 1/2 DBBBB + DBBBB

        PARDO sigma, b1, j, j1
            Tjbjx(j,b1,j1,sigma) = 0.0 
            DO b
               REQUEST Dibja_bbbb_x(j,b1,j1,b) b 
               Tjbjb(j,b1,j1,b) = Dibja_bbbb_x(j,b1,j1,b)
               Tjbjb(j,b1,j1,b)*= -1.5
#bgn_debug
#               Tjbjb(j,b1,j1,b) *= -1.5
#               Tjbjb(j,b1,j1,b) *= 1.0 
#end_debug

               T1jbjx(j,b1,j1,sigma) = Tjbjb(j,b1,j1,b)*cb(sigma,b)
               Tjbjx(j,b1,j1,sigma) += T1jbjx(j,b1,j1,sigma) 
            ENDDO b
            PREPARE Djbjx_x(j,b1,j1,sigma) = Tjbjx(j,b1,j1,sigma)
      ENDPARDO sigma, b1, j, j1
      execute server_barrier

      PARDO sigma, nu, j, j1
            Txjjx(nu,j,j1,sigma) = 0.0 
            Tjxjx(j,nu,j1,sigma) = 0.0 
            DO b1
               REQUEST Djbjx_x(j,b1,j1,sigma) b1 
               T1jxjx(j,nu,j1,sigma)      = Djbjx_x(j,b1,j1,sigma)*cb(nu,b1) 
               T1xjjx(nu,j,j1,sigma)      = T1jxjx(j,nu,j1,sigma) 

               Tjxjx(j,nu,j1,sigma)      += T1jxjx(j,nu,j1,sigma) 
               Txjjx(nu,j,j1,sigma)      += T1xjjx(nu,j,j1,sigma) 
            ENDDO b1
            Txjjx(nu,j,j1,sigma)         *=  4.0 
            Tjxjx(j,nu,j1,sigma)         *= -4.0 

            PREPARE Djxjx_x(j,nu,j1,sigma) += Tjxjx(j,nu,j1,sigma)
            PREPARE Dxjjx_x(nu,j,j1,sigma) += Txjjx(nu,j,j1,sigma)
      ENDPARDO sigma, nu, j, j1
      execute server_barrier

      ENDPROC DIBJABBBB_X
#     -------------------
#-----------------------------------------------------------------------
#
      PROC DIBJABABA_X
#     ----------------
      PARDO a, a1, j1, j
            Tjaja(j,a,j1,a1) = 0.0
            PREPARE Dibja_baba_x(j,a,j1,a1) = Tjaja(j,a,j1,a1)
            PREPARE Vibja_baba_x(j1,a1,j,a) = Tjaja(j,a,j1,a1)
      ENDPARDO a, a1, j1, j

      EXECUTE SERVER_BARRIER

      PARDO a, a1, j1, j
            Tjaja(j,a,j1,a1) = 0.0
            TAjaja(j1,a1,j,a) = 0.0
            DO i
               GET t1a_old(a,i)
               GET t1a_old_x(a,i)
               DO b
                  REQUEST T2old_ab(a,i,b,j1) b
                  REQUEST L2old_ab(i,a1,j,b) b
                  GET t1b_old(b,j1)
                 
                  REQUEST T2old_ab_x(a,i,b,j1) b
                  REQUEST L2old_ab_x(i,a1,j,b) b
                  GET t1b_old_x(b,j1)

#                 T1jaja(j,a,j1,a1)          = L2old_ab(i,a1,j,b)*T2old_ab(a,i,b,j1)
                  Tjaib(j,a1,i,b)            = L2old_ab_x(i,a1,j,b)
                  Tibaj(i,b,a,j1)            = T2old_ab(a,i,b,j1)
                  Tjaaj(j,a1,a,j1)           = Tjaib(j,a1,i,b)*Tibaj(i,b,a,j1)
                  T1jaja(j,a,j1,a1)          = Tjaaj(j,a1,a,j1)

                  T1jaja(j,a,j1,a1)         *= 0.125
#bgn_debug
#                  T1jaja(j,a,j1,a1) *=1.0
#end_debug
                  Tjaja(j,a,j1,a1)          += T1jaja(j,a,j1,a1)

                  T2jaja(j1,a1,j,a)          = T1jaja(j,a,j1,a1)
                  TAjaja(j1,a1,j,a)         += T2jaja(j1,a1,j,a)

                  T2jaja(j1,a1,j,a)         *= 4.0
                  PREPARE Vibja_baba_x(j1,a1,j,a) += T2jaja(j1,a1,j,a)

                  Tjaib(j,a1,i,b)            = L2old_ab(i,a1,j,b)
                  Tibaj(i,b,a,j1)            = T2old_ab_x(a,i,b,j1)
                  Tjaaj(j,a1,a,j1)           = Tjaib(j,a1,i,b)*Tibaj(i,b,a,j1)
                  T1jaja(j,a,j1,a1)          = Tjaaj(j,a1,a,j1)

                  T1jaja(j,a,j1,a1)         *= 0.125
#bgn_debug
#                  T1jaja(j,a,j1,a1) *=1.0
#end_debug
                  Tjaja(j,a,j1,a1)          += T1jaja(j,a,j1,a1)

                  T2jaja(j1,a1,j,a)          = T1jaja(j,a,j1,a1)
                  TAjaja(j1,a1,j,a)         += T2jaja(j1,a1,j,a)

                  T2jaja(j1,a1,j,a)         *= 4.0
                  PREPARE Vibja_baba_x(j1,a1,j,a) += T2jaja(j1,a1,j,a)

                  Tbjai(b,j1,a,i)            = t1b_old_x(b,j1)^t1a_old(a,i)
                  T1jaja(j,a,j1,a1)          = L2old_ab(i,a1,j,b)*Tbjai(b,j1,a,i)
                  T1jaja(j,a,j1,a1)         *= 0.125
#bgn_debug
#                  T1jaja(j,a,j1,a1) *=1.0
#end_debug
                  Tjaja(j,a,j1,a1)          += T1jaja(j,a,j1,a1)

                  T2jaja(j1,a1,j,a)          = T1jaja(j,a,j1,a1)
                  TAjaja(j1,a1,j,a)         += T2jaja(j1,a1,j,a)

                  Tbjai(b,j1,a,i)            = t1b_old(b,j1)^t1a_old_x(a,i)
                  T1jaja(j,a,j1,a1)          = L2old_ab(i,a1,j,b)*Tbjai(b,j1,a,i)
                  T1jaja(j,a,j1,a1)         *= 0.125
#bgn_debug
#                  T1jaja(j,a,j1,a1) *=1.0
#end_debug
                  Tjaja(j,a,j1,a1)          += T1jaja(j,a,j1,a1)

                  T2jaja(j1,a1,j,a)          = T1jaja(j,a,j1,a1)
                  TAjaja(j1,a1,j,a)         += T2jaja(j1,a1,j,a)

                  Tbjai(b,j1,a,i)            = t1b_old(b,j1)^t1a_old(a,i)
                  T1jaja(j,a,j1,a1)          = L2old_ab_x(i,a1,j,b)*Tbjai(b,j1,a,i)
                  T1jaja(j,a,j1,a1)         *= 0.125
#bgn_debug
#                  T1jaja(j,a,j1,a1) *=1.0
#end_debug
                  Tjaja(j,a,j1,a1)          += T1jaja(j,a,j1,a1)

                  T2jaja(j1,a1,j,a)          = T1jaja(j,a,j1,a1)
                  TAjaja(j1,a1,j,a)         += T2jaja(j1,a1,j,a)
               ENDDO b
            ENDDO i
# Multiply by 4 to match aces 
#           Tjaja(j,a,j1,a1)  *= 4.0 
#           TAjaja(j1,a1,j,a) *= 4.0 

            PREPARE Dibja_baba_x(j,a,j1,a1) += Tjaja(j,a,j1,a1)
            TAjaja(j1,a1,j,a)               *= Fact
            PREPARE Dibja_baba_x(j1,a1,j,a) += TAjaja(j1,a1,j,a)
      ENDPARDO a, a1, j1, j
      execute server_barrier
#
# Backtransform to AO representation 
#.........................................................................
#                                                                  ++
# Two particle contribution to G-tensor: O(pq,rs)*<BA|S_z(1)+2S_z(2)pqsr|BA>
# DABAB = -1/2 DBABA + DBABA
# Backtransform to AO representation

      PARDO sigma, a1, j, j1
            Tjajx(j,a1,j1,sigma) = 0.0
            DO a
               REQUEST Dibja_baba_x(j,a1,j1,a) a
               Tjaja(j,a,j1,a1) = Dibja_baba_x(j,a1,j1,a)
               Tjaja(j,a,j1,a1)*= 0.5 
#bgn_debug
#               Tjaja(j,a,j1,a1) *= 0.5 
#               Tjaja(j,a,j1,a1) *= 1.0
#end_debug
               T1jajx(j,a1,j1,sigma) = Tjaja(j,a,j1,a1)*ca(sigma,a)
               Tjajx(j,a1,j1,sigma) += T1jajx(j,a1,j1,sigma)
            ENDDO a
            PREPARE Djajx_x(j,a1,j1,sigma) = Tjajx(j,a1,j1,sigma)
      ENDPARDO sigma, a1, j, j1
      execute server_barrier

      PARDO sigma, nu, j, j1
            Tjxjx(j,nu,j1,sigma) = 0.0
            DO a1
               REQUEST Djajx_x(j,a1,j1,sigma) a1
               T1jxjx(j,nu,j1,sigma) = Djajx_x(j,a1,j1,sigma)*ca(nu,a1)
               Tjxjx(j,nu,j1,sigma) += T1jxjx(j,nu,j1,sigma)
            ENDDO a1
            Tjxjx(j,nu,j1,sigma)         *= -4.0
            PREPARE Djxjx_x(j,nu,j1,sigma) += Tjxjx(j,nu,j1,sigma)
      ENDPARDO sigma, nu, j, j1
      execute server_barrier

      ENDPROC DIBJABABA_X
#     --------------------
#--------------------------------------------------------------------------
     PROC DIBJABAAB_X
#    ----------------
      PARDO j, a, i, b
            Tjaib(j,a,i,b) = 0.0
            PREPARE Dibja_baab_x(j,a,i,b) = Tjaib(j,a,i,b)
            PREPARE Vibja_baab_x(j,a,i,b) = Tjaib(j,a,i,b)
      ENDPARDO j, a, i, b

      EXECUTE SERVER_BARRIER

      PARDO j, b, a, i
            Tjbia(j,b,i,a) = 0.0

            GET t1a_old(a,i)
            GET l1b_old(j,b)
            GET t1b_old(b,j)
            GET l1a_old(i,a)

            GET t1a_old_x(a,i)
            GET l1b_old_x(j,b)
            GET t1b_old_x(b,j)
            GET l1a_old_x(i,a)

            T1jbia(j,b,i,a)  = l1b_old_x(j,b)^t1a_old(a,i)
            T1jbia(j,b,i,a) *= 0.125
            T1jbia(j,b,i,a) *= Pone

            Tjbia(j,b,i,a)  += T1jbia(j,b,i,a)

            T1jbia(j,b,i,a)  = l1b_old(j,b)^t1a_old_x(a,i)
            T1jbia(j,b,i,a) *= 0.125
            T1jbia(j,b,i,a) *= Pone

            Tjbia(j,b,i,a)  += T1jbia(j,b,i,a)

            T1jbia(j,b,i,a)  = l1a_old_x(i,a)^t1b_old(b,j)
            T1jbia(j,b,i,a) *= 0.125
            T1jbia(j,b,i,a) *= Mone

            Tjbia(j,b,i,a)  += T1jbia(j,b,i,a)

            T1jbia(j,b,i,a)  = l1a_old(i,a)^t1b_old_x(b,j)
            T1jbia(j,b,i,a) *= 0.125
            T1jbia(j,b,i,a) *= Mone

            Tjbia(j,b,i,a)  += T1jbia(j,b,i,a)

            DO i1
               GET t1a_old(a,i1)
               GET t1a_old_x(a,i1)
               tai(a,i1)                   = t1a_old(a,i1)
               tai_x(a,i1)                 = t1a_old_x(a,i1)
               DO a1
                  REQUEST T2old_ab(a1,i1,b,j) a1
                  REQUEST L2old_aa(i1,a1,i,a) a1
                  REQUEST T2old_aa(a,i,a1,i1) a1
                  REQUEST L2old_ab(i1,a1,j,b) a1
                  GET t1a_old(a1,i)

                  REQUEST T2old_ab_x(a1,i1,b,j) a1
                  REQUEST L2old_aa_x(i1,a1,i,a) a1
                  REQUEST T2old_aa_x(a,i,a1,i1) a1
                  REQUEST L2old_ab_x(i1,a1,j,b) a1
                  GET t1a_old_x(a1,i)


                  T1jbia(j,b,i,a)          = T2old_ab_x(a1,i1,b,j)*L2old_aa(i1,a1,i,a)
                  T1jbia(j,b,i,a)         *= 0.125
                  Tjaib(j,a,i,b)           = T1jbia(j,b,i,a)
                  Tjaib(j,a,i,b)          *= 4.0
                  PREPARE Vibja_baab_x(j,a,i,b) += Tjaib(j,a,i,b)

                  T1jbia(j,b,i,a) *= Mone
                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)

                  T1jbia(j,b,i,a)          = T2old_ab(a1,i1,b,j)*L2old_aa_x(i1,a1,i,a)
                  T1jbia(j,b,i,a)         *= 0.125
                  Tjaib(j,a,i,b)           = T1jbia(j,b,i,a)
                  Tjaib(j,a,i,b)          *= 4.0
                  PREPARE Vibja_baab_x(j,a,i,b) += Tjaib(j,a,i,b)

                  T1jbia(j,b,i,a) *= Mone
                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)

                  Taijb(a,i,j,b)           = T2old_aa_x(a,i,a1,i1)*L2old_ab(i1,a1,j,b)
                  T1jbia(j,b,i,a)          = Taijb(a,i,j,b)
                  T1jbia(j,b,i,a)         *= 0.125
                  T1jbia(j,b,i,a) *= Pone

                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)

                  Taijb(a,i,j,b)           = T2old_aa(a,i,a1,i1)*L2old_ab_x(i1,a1,j,b)
                  T1jbia(j,b,i,a)          = Taijb(a,i,j,b)
                  T1jbia(j,b,i,a)         *= 0.125
                  T1jbia(j,b,i,a) *= Pone

                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)


                  Tiaia(i,a,i1,a1)         = t1a_old_x(a1,i)^tai(a,i1)
                  T1jbia(j,b,i,a)          = Tiaia(i,a,i1,a1)*L2old_ab(i1,a1,j,b)
                  T1jbia(j,b,i,a)          *= -0.125
                  T1jbia(j,b,i,a) *= Pone

                  Tjbia(j,b,i,a)           += T1jbia(j,b,i,a)

                  Tiaia(i,a,i1,a1)         = t1a_old(a1,i)^tai_x(a,i1)
                  T1jbia(j,b,i,a)          = Tiaia(i,a,i1,a1)*L2old_ab(i1,a1,j,b)
                  T1jbia(j,b,i,a)          *= -0.125
                  T1jbia(j,b,i,a) *= Pone

                  Tjbia(j,b,i,a)           += T1jbia(j,b,i,a)

                  Tiaia(i,a,i1,a1)         = t1a_old(a1,i)^tai(a,i1)
                  T1jbia(j,b,i,a)          = Tiaia(i,a,i1,a1)*L2old_ab_x(i1,a1,j,b)
                  T1jbia(j,b,i,a)          *= -0.125
                  T1jbia(j,b,i,a) *= Pone

                  Tjbia(j,b,i,a)           += T1jbia(j,b,i,a)

               ENDDO a1
            ENDDO i1
            DO j1
               GET t1b_old(b,j1)
               GET t1b_old_x(b,j1)
               tbj(b,j1) = t1b_old(b,j1)
               tbj_x(b,j1) = t1b_old_x(b,j1)
               DO b1
                  REQUEST T2old_bb(b,j,b1,j1) b1
                  REQUEST L2old_ab(i,a,j1,b1) b1
                  REQUEST T2old_ab(a,i,b1,j1) b1
                  REQUEST L2old_bb(j,b,j1,b1) b1
                  GET t1b_old(b1,j)

                  REQUEST T2old_bb_x(b,j,b1,j1) b1
                  REQUEST L2old_ab_x(i,a,j1,b1) b1
                  REQUEST T2old_ab_x(a,i,b1,j1) b1
                  REQUEST L2old_bb_x(j,b,j1,b1) b1
                  GET t1b_old_x(b1,j)

                  T1jbia(j,b,i,a)          = T2old_bb_x(b,j,b1,j1)*L2old_ab(i,a,j1,b1)
                  T1jbia(j,b,i,a)         *= 0.125

                  Tjaib(j,a,i,b)           = T1jbia(j,b,i,a)
                  Tjaib(j,a,i,b)          *= 4.0

                  PREPARE Vibja_baab_x(j,a,i,b) += Tjaib(j,a,i,b)

                  T1jbia(j,b,i,a)         *= Mone
                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)

                  T1jbia(j,b,i,a)          = T2old_bb(b,j,b1,j1)*L2old_ab_x(i,a,j1,b1)
                  T1jbia(j,b,i,a)         *= 0.125

                  Tjaib(j,a,i,b)           = T1jbia(j,b,i,a)
                  Tjaib(j,a,i,b)          *= 4.0

                  PREPARE Vibja_baab_x(j,a,i,b) += Tjaib(j,a,i,b)

                  T1jbia(j,b,i,a)         *= Mone
                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)

                  T2jbia(j1,b1,i,a)        = T2old_ab_x(a,i,b1,j1)
                  T1jbia(j,b,i,a)          = L2old_bb(j,b,j1,b1)*T2jbia(j1,b1,i,a)
                  T1jbia(j,b,i,a)         *= 0.125
                  T1jbia(j,b,i,a)         *= Pone

                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)

                  T2jbia(j1,b1,i,a)        = T2old_ab(a,i,b1,j1)
                  T1jbia(j,b,i,a)          = L2old_bb_x(j,b,j1,b1)*T2jbia(j1,b1,i,a)

                  T1jbia(j,b,i,a)         *= 0.125
                  T1jbia(j,b,i,a)         *= Pone

                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)

                  Tjbjb(j,b,j1,b1)         = t1b_old_x(b1,j)^tbj(b,j1)
                  T1jbia(j,b,i,a)          = Tjbjb(j,b,j1,b1)*L2old_ab(i,a,j1,b1)
                  T1jbia(j,b,i,a)         *= -0.125
                  T1jbia(j,b,i,a)         *= Mone

                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)

                  Tjbjb(j,b,j1,b1)         = t1b_old(b1,j)^tbj_x(b,j1)
                  T1jbia(j,b,i,a)          = Tjbjb(j,b,j1,b1)*L2old_ab(i,a,j1,b1)
                  T1jbia(j,b,i,a)         *= -0.125
                  T1jbia(j,b,i,a)         *= Mone

                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)

                  Tjbjb(j,b,j1,b1)         = t1b_old(b1,j)^tbj(b,j1)
                  T1jbia(j,b,i,a)          = Tjbjb(j,b,j1,b1)*L2old_ab_x(i,a,j1,b1)
                  T1jbia(j,b,i,a)         *= -0.125
                  T1jbia(j,b,i,a)         *= Mone

                  Tjbia(j,b,i,a)          += T1jbia(j,b,i,a)
               ENDDO b1
            ENDDO j1
# Multiply by 4(VFL) to match aces 
#           Tjbia(j,b,i,a)          *= 4.0 

            Tjaib(j,a,i,b)                 = Tjbia(j,b,i,a)
            PREPARE Dibja_baab_x(j,a,i,b) += Tjaib(j,a,i,b)
      ENDPARDO j, b, a, i
      execute server_barrier

# Backtransform to AO representation 
#                                                                  ++
# Two particle contribution to G-tensor: O(pq,rs)*<A(1)B|S_z(1)+2S_z(2)pqsr|AB>
# DABAB = -1/2 DABAB + DABAB
# Here particle-1 is B and particle-2 is A

      PARDO sigma, a1, j, i1
            Tjaix(j,a1,i1,sigma) = 0.0
            DO b
               REQUEST Dibja_baab_x(j,a1,i1,b) b
               
               Tjaib(j,a1,i1,b) = Dibja_baab_x(j,a1,i1,b)
               Tjaib(j,a1,i1,b)*= 0.5
#bgn_debug                 
#               Tjaib(j,a1,i1,b) *= 0.5
#               Tjaib(j,a1,i1,b) *= 1.0
#end_debug
                
               T1jaix(j,a1,i1,sigma) = Tjaib(j,a1,i1,b)*cb(sigma,b)
               Tjaix(j,a1,i1,sigma) += T1jaix(j,a1,i1,sigma)
            ENDDO b
            PREPARE Djaix_x(j,a1,i1,sigma) = Tjaix(j,a1,i1,sigma)
      ENDPARDO sigma, a1, j, i1
      execute server_barrier

      PARDO sigma, nu, j, i1
            Tixxj(i1,sigma,nu,j) = 0.0

            DO a1
               REQUEST Djaix_x(j,a1,i1,sigma) a1
               T1ixxj(i1,sigma,nu,j) = Djaix_x(j,a1,i1,sigma)*ca(nu,a1)
               Tixxj(i1,sigma,nu,j) += T1ixxj(i1,sigma,nu,j)
            ENDDO a1

            Tixxj(i1,sigma,nu,j) *= 4.0
            PREPARE Dixxj_x(i1,sigma,nu,j) += Tixxj(i1,sigma,nu,j)
      ENDPARDO sigma, nu, j, i1
      execute server_barrier

      ENDPROC DIBJABAAB_X
#     -------------------
#---------------------------------------------------------------------------
      PROC DIBJAABBA_X
#     -----------------
      PARDO i, b, j, a
            Tibja(i,b,j,a)  = 0.0
            PREPARE Dibja_abba_x(i,b,j,a) = Tibja(i,b,j,a)
            PREPARE Vibja_abba_x(i,b,j,a) = Tibja(i,b,j,a)
      ENDPARDO i, b, j, a

      EXECUTE SERVER_BARRIER

      PARDO i, a, b, j
            Tiajb(i,a,j,b) = 0.0

            DO i1
               GET t1a_old(a,i1)
               GET t1a_old_x(a,i1)
               tai(a,i1)                   = t1a_old(a,i1)
               tai_x(a,i1)                 = t1a_old_x(a,i1)
               DO a1
                  REQUEST T2old_aa(a,i,a1,i1) a1
                  REQUEST L2old_ab(i1,a1,j,b) a1
                  REQUEST T2old_ab(a1,i1,b,j) a1
                  REQUEST L2old_aa(i1,a1,i,a) a1
                  GET t1a_old(a1,i)

                  REQUEST T2old_aa_x(a,i,a1,i1) a1
                  REQUEST L2old_ab_x(i1,a1,j,b) a1
                  REQUEST T2old_ab_x(a1,i1,b,j) a1
                  REQUEST L2old_aa_x(i1,a1,i,a) a1
                  GET t1a_old_x(a1,i)

                  T1iajb(i,a,j,b)          = T2old_aa_x(a,i,a1,i1)*L2old_ab(i1,a1,j,b)
                  T1iajb(i,a,j,b)         *= 0.125
                  Tibja(i,b,j,a)           = T1iajb(i,a,j,b)
                  Tibja(i,b,j,a)          *= 4.0
                  PREPARE Vibja_abba_x(i,b,j,a) += Tibja(i,b,j,a)


                  T1iajb(i,a,j,b)          = T2old_aa(a,i,a1,i1)*L2old_ab_x(i1,a1,j,b)
                  T1iajb(i,a,j,b)         *= 0.125
                  Tibja(i,b,j,a)           = T1iajb(i,a,j,b)
                  Tibja(i,b,j,a)          *= 4.0
                  PREPARE Vibja_abba_x(i,b,j,a) += Tibja(i,b,j,a)

                  Tiaia(i,a,i1,a1)         = t1a_old_x(a1,i)^tai(a,i1)
                  T1iajb(i,a,j,b)          = Tiaia(i,a,i1,a1)*L2old_ab(i1,a1,j,b)
                  T1iajb(i,a,j,b)         *= -0.125
                  T1iajb(i,a,j,b)         *= Pone
                  Tiajb(i,a,j,b)          += T1iajb(i,a,j,b)

                  Tiaia(i,a,i1,a1)         = t1a_old(a1,i)^tai_x(a,i1)
                  T1iajb(i,a,j,b)          = Tiaia(i,a,i1,a1)*L2old_ab(i1,a1,j,b)
                  T1iajb(i,a,j,b)         *= -0.125
                  T1iajb(i,a,j,b)         *= Pone
                  Tiajb(i,a,j,b)          += T1iajb(i,a,j,b)

                  Tiaia(i,a,i1,a1)         = t1a_old(a1,i)^tai(a,i1)
                  T1iajb(i,a,j,b)          = Tiaia(i,a,i1,a1)*L2old_ab_x(i1,a1,j,b)
                  T1iajb(i,a,j,b)         *= -0.125
                  T1iajb(i,a,j,b)         *= Pone
                  Tiajb(i,a,j,b)          += T1iajb(i,a,j,b)
               ENDDO a1
            ENDDO i1
            DO j1
               GET t1b_old(b,j1)
               tbj(b,j1)               = t1b_old(b,j1)
               GET t1b_old_x(b,j1)
               tbj_x(b,j1)             = t1b_old_x(b,j1)

               DO b1
                  REQUEST T2old_ab(a,i,b1,j1) b1
                  REQUEST L2old_bb(j1,b1,j,b) b1
                  REQUEST T2old_bb(b,j,b1,j1) b1
                  REQUEST L2old_ab(i,a,j1,b1) b1
                  GET t1b_old(b1,j)

                 REQUEST T2old_ab_x(a,i,b1,j1) b1
                 REQUEST L2old_bb_x(j1,b1,j,b) b1
                 REQUEST T2old_bb_x(b,j,b1,j1) b1
                 REQUEST L2old_ab_x(i,a,j1,b1) b1
                 GET t1b_old_x(b1,j)

                  T1iajb(i,a,j,b)          = T2old_ab(a,i,b1,j1)*L2old_bb_x(j1,b1,j,b)
                  T1iajb(i,a,j,b)         *= 0.125
                  Tibja(i,b,j,a)           = T1iajb(i,a,j,b)
                  Tibja(i,b,j,a)          *= 4.0
                  PREPARE Vibja_abba_x(i,b,j,a) += Tibja(i,b,j,a)

                  T1iajb(i,a,j,b)         *= 0.0
                  Tiajb(i,a,j,b)          += T1iajb(i,a,j,b)

#                 T1iajb(i,a,j,b)          = T2old_bb(b,j,b1,j1)*L2old_ab(i,a,j1,b1)
                  T1iajb(i,a,j,b)          = T2old_ab_x(a,i,b1,j1)*L2old_bb(j1,b1,j,b)
                  T1iajb(i,a,j,b)         *= 0.125
                  Tibja(i,b,j,a)           = T1iajb(i,a,j,b)
                  Tibja(i,b,j,a)          *= 4.0
                  PREPARE Vibja_abba_x(i,b,j,a) += Tibja(i,b,j,a)

                  Tjbjb(j,b,j1,b1)         = t1b_old_x(b1,j)^tbj(b,j1)
                  T1iajb(i,a,j,b)          = Tjbjb(j,b,j1,b1)*L2old_ab(i,a,j1,b1)
                  T1iajb(i,a,j,b)         *= -0.125
                  T1iajb(i,a,j,b)         *= Mone
                  Tiajb(i,a,j,b)          += T1iajb(i,a,j,b)

                  Tjbjb(j,b,j1,b1)         = t1b_old(b1,j)^tbj_x(b,j1)
                  T1iajb(i,a,j,b)          = Tjbjb(j,b,j1,b1)*L2old_ab(i,a,j1,b1)
                  T1iajb(i,a,j,b)         *= -0.125
                  T1iajb(i,a,j,b)         *= Mone
                  Tiajb(i,a,j,b)          += T1iajb(i,a,j,b)

                  Tjbjb(j,b,j1,b1)         = t1b_old(b1,j)^tbj(b,j1)
                  T1iajb(i,a,j,b)          = Tjbjb(j,b,j1,b1)*L2old_ab_x(i,a,j1,b1)
                  T1iajb(i,a,j,b)         *= -0.125
                  T1iajb(i,a,j,b)         *= Mone
                  Tiajb(i,a,j,b)          += T1iajb(i,a,j,b)
               ENDDO b1
            ENDDO j1
# Multiply by 4(VFL) to match aces: Note the 'switched' storage pattern  
#           Tiajb(i,a,j,b)          *= 4.0 

            Tibja(i,b,j,a)                 = Tiajb(i,a,j,b)
            PREPARE Dibja_abba_x(i,b,j,a) += Tibja(i,b,j,a)
      ENDPARDO i, a, b, j
      execute server_barrier

# Backtransform to AO representation 
#---------------------------------------------------------------

      PARDO sigma, b1, i, j1
            Tibjx(i,b1,j1,sigma) = 0.0
            DO a
               REQUEST Dibja_abba_x(i,b1,j1,a) a
               Tibja(i,b1,j1,a) = Dibja_abba_x(i,b1,j1,a)
               Tibja(i,b1,j1,a)*= -0.5
#                                                                  ++
# Two particle contribution to G-tensor: O(pq,rs)*<AB|S_z(1)+2S_z(2)pqsr|AB>
# DABAB = +1/2 DABAB - DABAB
# Here particle-1 is A and particle-2 is B

#bgn_debug 
#               Tibja(i,b1,j1,a) *= -0.5
#               Tibja(i,b1,j1,a) *= 1.0
#end_debug
               T1ibjx(i,b1,j1,sigma) = Tibja(i,b1,j1,a)*ca(sigma,a)
               Tibjx(i,b1,j1,sigma) += T1ibjx(i,b1,j1,sigma)
            ENDDO a
            PREPARE Dibjx_x(i,b1,j1,sigma) = Tibjx(i,b1,j1,sigma)
      ENDPARDO sigma, b1, i, j1
      execute server_barrier

      PARDO sigma, nu, i, j1

            Tixxj(i,nu,sigma,j1) = 0.0

            DO b1
               REQUEST Dibjx_x(i,b1,j1,sigma) sigma 
               T1ixxj(i,nu,sigma,j1) = Dibjx_x(i,b1,j1,sigma)*cb(nu,b1)
               Tixxj(i,nu,sigma,j1) += T1ixxj(i,nu,sigma,j1)
            ENDDO b1

            Tixxj(i,nu,sigma,j1)         *= 4.0
            PREPARE Dixxj_x(i,nu,sigma,j1) += Tixxj(i,nu,sigma,j1)
      ENDPARDO sigma, nu, i, j1

      execute server_barrier

      ENDPROC DIBJAABBA_X
#     -------------------
#-----------------------------------------------------
   PROC DIBJA_X
        CALL DIBJAAAAA_X
        CALL DIBJABBBB_X

# We have to go through these for all the properties 

           CALL DIBJAABAB_X
           CALL DIBJABABA_X
           CALL DIBJABAAB_X
           CALL DIBJAABBA_X

      ENDPROC DIBJA_X
#----------------------------------------------------
      PROC I2XX 
#     ---------
# Form the two-particle intermediate I3aa, I3bb, I3ab, and I3ba  needed in 
# place of V^{ab}_{cd}. 
# Form the intermediate I3aa 
      PARDO a, a1 
            DO i2 
            DO i1 
            DO i 

               REQUEST L2old_aa(i2,a,i1,a1) a  
               GET t1a_old(a1,i) 
               Tiaii(i2,a,i1,i) = L2old_aa(i2,a,i1,a1)*t1a_old(a1,i) 
               PREPARE I3aa(i2,a,i1,i) += Tiaii(i2,a,i1,i) 
            ENDDO i 
            ENDDO i1 
            ENDDO i2 
      ENDPARDO a, a1 
# Form the intermediate I3bb 
      PARDO b, b1 
            DO j2 
            DO j1 
            DO j 
               REQUEST L2old_bb(j2,b,j1,b1) b1  
               GET t1b_old(b1,j) 
               Tjbjj(j2,b,j1,j) = L2old_bb(j2,b,j1,b1)*t1b_old(b1,j) 
               PREPARE I3bb(j2,b,j1,j) += Tjbjj(j2,b,j1,j) 
            ENDDO j 
            ENDDO j1 
            ENDDO j2 
      ENDPARDO b, b1 
# Form the intermediate I3ab 
      PARDO a, b1 
            DO i2 
            DO j1 
            DO j 
               REQUEST L2old_ab(i2,a,j1,b1) b1  
               GET t1b_old(b1,j) 
               Tiajj(i2,a,j1,j) = L2old_ab(i2,a,j1,b1)*t1b_old(b1,j) 
               PREPARE I3ab(i2,a,j1,j) += Tiajj(i2,a,j1,j) 
            ENDDO j 
            ENDDO j1 
            ENDDO i2 
      ENDPARDO a, b1 
      PARDO b, a1 
            DO j 
            DO i1 
            DO i 
               REQUEST L2old_ab(i1,a1,j,b) b  
               GET t1a_old(a1,i) 
               Tjbii(j,b,i1,i) = L2old_ab(i1,a1,j,b)*t1a_old(a1,i) 
               PREPARE I3ba(j,b,i1,i) += Tjbii(j,b,i1,i) 
            ENDDO i 
            ENDDO i1 
            ENDDO j 
      ENDPARDO b, a1 
      ENDPROC I2XX 
#     ------------
# Start the calculation of the D^{ab}_{ci} type contributions to the
# density. Equivalent to Gamma5   

      PROC DABCIAAAA 
#     --------------
      PARDO a, a1, a2, i 
            Taaai(a,a1,a2,i) = 0.0  

            GET Gae_a(a2,a) 
            GET t1a_old(a1,i) 
            GET Gae_a(a2,a1) 
            GET t1a_old(a,i) 

            T1aaai(a,a1,a2,i)  = Gae_a(a2,a)^t1a_old(a1,i) 
            T1aaai(a,a1,a2,i) *= -0.125 
#bgn_debug
#            T1aaai(a,a1,a2,i) *= 1.0
#end_debug
            Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)  

            T1aaai(a,a1,a2,i)  = Gae_a(a2,a1)^t1a_old(a,i)
            T1aaai(a,a1,a2,i) *= 0.125
#bgn_debug
#            T1aaai(a,a1,a2,i) *= 1.0
#end_debug
            Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)
            DO i1 
               REQUEST Tau_aa(a,i1,a1,i)      i1  
               REQUEST L2old_aa(i1,a,i,a1)    i1  
               REQUEST Vibja_aaaa(i,a2,i1,a)  i1  
               REQUEST Vibja_aaaa(i,a2,i1,a1) i1  
               GET l1a_old(i1,a2) 
               GET t1a_old(a2,i1) 
               GET t1a_old(a1,i1) 
               GET t1a_old(a,i1) 

               T1aaai(a,a1,a2,i)  = Tau_aa(a,i1,a1,i)*l1a_old(i1,a2) 
               T1aaai(a,a1,a2,i) *= 0.125 
#bgn_debug
#               T1aaai(a,a1,a2,i) *= 1.0
#end_debug
               Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)  

               T1aaai(a,a1,a2,i)  = L2old_aa(i1,a,i,a1)*t1a_old(a2,i1) 
               T1aaai(a,a1,a2,i) *= 0.125 
#bgn_debug
#               T1aaai(a,a1,a2,i) *= 1.0
#end_debug
               Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)  

               T1aaai(a,a1,a2,i)  = Vibja_aaaa(i,a2,i1,a)*t1a_old(a1,i1)  
               T1aaai(a,a1,a2,i) *= -0.25 
#bgn_debug
#               T1aaai(a,a1,a2,i) *= 1.0
#end_debug
               Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)  

               T1aaai(a,a1,a2,i)  = Vibja_aaaa(i,a2,i1,a1)*t1a_old(a,i1)  
               T1aaai(a,a1,a2,i) *= 0.25 
#bgn_debug
#               T1aaai(a,a1,a2,i) *= 1.0
#end_debug
               Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)  

               DO i2 

                  REQUEST I3aa(i1,a2,i2,i)   i2 
                  REQUEST Tau_aa(a,i1,a1,i2) i2 

#                 T1aaai(a,a1,a2,i)  = Tau_aa(a,i1,a1,i2)*I3aa(i1,a2,i2,i)
                  Taaii(a,a1,i1,i2)  = Tau_aa(a,i1,a1,i2)
                  Tiiai(i1,i2,a2,i)  = I3aa(i1,a2,i2,i)
                  T1aaai(a,a1,a2,i)  = Taaii(a,a1,i1,i2)*Tiiai(i1,i2,a2,i)
                  T1aaai(a,a1,a2,i) *= -0.0625
#bgn_debug
#                  T1aaai(a,a1,a2,i) *= 1.0
#end_debug
                  Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)
               ENDDO i2 
            ENDDO i1 
# Multiply by 4 to match aces 
#bgn_debug
#           Taaai(a,a1,a2,i) *= 4.0 
#            PREPARE Dabci_aaaa(a,a1,a2,i) += Taaai(a,a1,a2,i) 
#end_debug

            DO mu 
               Txaai(mu,a1,a2,i)      = Taaai(a,a1,a2,i)*ca(mu,a) 
               Txaai(mu,a1,a2,i)     *= Pthalf 
               PREPARE Dxaai(mu,a1,a2,i) += Txaai(mu,a1,a2,i)  
            ENDDO mu 
      ENDPARDO a, a1, a2, i 
      execute server_barrier 

# Back transform to full AO representation

      PARDO mu, a1, a2, i 
            REQUEST Dxaai(mu,a1,a2,i) a1  
            DO nu 
               Txxai(mu,nu,a2,i)      = Dxaai(mu,a1,a2,i)*ca(nu,a1) 
               PREPARE Dxxai(mu,nu,a2,i) += Txxai(mu,nu,a2,i)  
            ENDDO nu 
      ENDPARDO mu, a1, a2, i 
      execute server_barrier 

      PARDO mu, nu, i 
            allocate Lxxai(mu,nu,*,i) 
            DO a2 
               REQUEST Dxxai(mu,nu,a2,i) i  
               Lxxai(mu,nu,a2,i) = Dxxai(mu,nu,a2,i) 
            ENDDO a2 
            DO lambda 
               Txxxi(mu,nu,lambda,i) = 0.0 
               DO a2   
                  T1xxxi(mu,nu,lambda,i) = Lxxai(mu,nu,a2,i)*ca(lambda,a2) 
                  Txxxi(mu,nu,lambda,i) += T1xxxi(mu,nu,lambda,i)  
               ENDDO a2  
               PREPARE Dxxxi(mu,nu,lambda,i) = Txxxi(mu,nu,lambda,i)  
            ENDDO lambda 
            deallocate Lxxai(mu,nu,*,i) 
      ENDPARDO mu, nu, i 
      execute server_barrier 

      ENDPROC DABCIAAAA 
#     -----------------
#
      PROC DABCIBBBB 
#     --------------
      PARDO b, b1, b2, j 
            Tbbbj(b,b1,b2,j) = 0.0  

            GET Gae_b(b2,b) 
            GET t1b_old(b1,j) 
            GET Gae_b(b2,b1) 
            GET t1b_old(b,j) 

            T1bbbj(b,b1,b2,j)  = Gae_b(b2,b)^t1b_old(b1,j) 
            T1bbbj(b,b1,b2,j) *= -0.125 
            Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)  

            T1bbbj(b,b1,b2,j)  = Gae_b(b2,b1)^t1b_old(b,j) 
            T1bbbj(b,b1,b2,j) *= 0.125 
            Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)  
            DO j1 

               REQUEST Tau_bb(b,j1,b1,j)      j1  
               REQUEST L2old_bb(j1,b,j,b1)    j1  
               REQUEST Vibja_bbbb(j,b2,j1,b)  j1  
               REQUEST Vibja_bbbb(j,b2,j1,b1) j1  
               GET l1b_old(j1,b2) 
               GET t1b_old(b2,j1) 
               GET t1b_old(b1,j1) 
               GET t1b_old(b,j1) 

               T1bbbj(b,b1,b2,j)  = Tau_bb(b,j1,b1,j)*l1b_old(j1,b2) 
               T1bbbj(b,b1,b2,j) *= 0.125 
               Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)  

               T1bbbj(b,b1,b2,j)  = L2old_bb(j1,b,j,b1)*t1b_old(b2,j1) 
               T1bbbj(b,b1,b2,j) *= 0.125 
               Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)  

               T1bbbj(b,b1,b2,j)  = Vibja_bbbb(j,b2,j1,b)*t1b_old(b1,j1)  
               T1bbbj(b,b1,b2,j) *= -0.25 
               Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)  

               T1bbbj(b,b1,b2,j)  = Vibja_bbbb(j,b2,j1,b1)*t1b_old(b,j1)  
               T1bbbj(b,b1,b2,j) *= 0.25 
               Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)  
               DO j2 
                  REQUEST I3bb(j1,b2,j2,j)   j2 
                  REQUEST Tau_bb(b,j1,b1,j2) j2 

                  Tbbjj(b,b1,j1,j2)  = Tau_bb(b,j1,b1,j2)
                  Tjjbj(j1,j2,b2,j)  = I3bb(j1,b2,j2,j)
                  T1bbbj(b,b1,b2,j)  = Tbbjj(b,b1,j1,j2)*Tjjbj(j1,j2,b2,j)
                  T1bbbj(b,b1,b2,j) *= -0.0625
                  Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)
               ENDDO j2 
            ENDDO j1 
# Multiply by 4 to match aces 
#bgn_debug
#           Tbbbj(b,b1,b2,j) *= 4.0 
#           PREPARE Dabci_bbbb(b,b1,b2,j) += Tbbbj(b,b1,b2,j) 
#end_debug

            DO mu 
               Txbbj(mu,b1,b2,j)          = Tbbbj(b,b1,b2,j)*cb(mu,b) 
               Txbbj(mu,b1,b2,j)         *= Mthalf 
               PREPARE Dxbbj(mu,b1,b2,j) += Txbbj(mu,b1,b2,j)  
            ENDDO mu 
      ENDPARDO b, b1, b2, j 
      execute server_barrier 

# Back transform to full AO representation

      PARDO mu, b1, b2, j 
            REQUEST Dxbbj(mu,b1,b2,j) j  
            DO nu 
               Txxbj(mu,nu,b2,j)      = Dxbbj(mu,b1,b2,j)*cb(nu,b1) 
               PREPARE Dxxbj(mu,nu,b2,j) += Txxbj(mu,nu,b2,j)  
            ENDDO nu 
      ENDPARDO mu, b1, b2, j
      execute server_barrier 

      PARDO mu, nu, j 
            allocate Lxxbj(mu,nu,*,j) 
            DO b2 
               REQUEST Dxxbj(mu,nu,b2,j) j  
               Lxxbj(mu,nu,b2,j) = Dxxbj(mu,nu,b2,j) 
            ENDDO b2 
            DO lambda 
               Txxxj(mu,nu,lambda,j) = 0.0 
               DO b2   
                  T1xxxj(mu,nu,lambda,j) = Lxxbj(mu,nu,b2,j)*cb(lambda,b2) 
                  Txxxj(mu,nu,lambda,j) += T1xxxj(mu,nu,lambda,j)  
               ENDDO b2  
               PREPARE Dxxxj(mu,nu,lambda,j) = Txxxj(mu,nu,lambda,j)  
            ENDDO lambda 
            deallocate Lxxbj(mu,nu,*,j) 
      ENDPARDO mu, nu, j 
      execute server_barrier 

      ENDPROC DABCIBBBB 
#     -----------------

      PROC DABCIABAB 
#     --------------
      PARDO a, a1, b, j 
            Tabaj(a,b,a1,j) = 0.0 

            GET Gae_a(a,a1) 
            GET t1b_old(b,j) 

            T1abaj(a,b,a1,j)  = Gae_a(a,a1)^t1b_old(b,j) 
            T1abaj(a,b,a1,j) *= -0.125 
#bgn_debug
#            T1abaj(a,b,a1,j) *=1.0
#end_debug
            Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j) 
            DO i 

               REQUEST Tau_ab(a,i,b,j)      i  
               REQUEST L2old_ab(i,a,j,b)    i  
               REQUEST Vibja_baab(j,a1,i,b) i  
               GET l1a_old(i,a1) 
               GET t1a_old(a1,i) 
               GET t1a_old(a,i) 

               T1abaj(a,b,a1,j)  = Tau_ab(a,i,b,j)*l1a_old(i,a1) 
               T1abaj(a,b,a1,j) *= 0.125 
#bgn_debug
#               T1abaj(a,b,a1,j) *=1.0
#end_debug
               Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j) 

               T1abaj(a,b,a1,j)  = L2old_ab(i,a,j,b)*t1a_old(a1,i)  
               T1abaj(a,b,a1,j) *= 0.125 
#bgn_debug
#               T1abaj(a,b,a1,j) *=1.0
#end_debug
               Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j) 

               T1abaj(a,b,a1,j)  = Vibja_baab(j,a1,i,b)*t1a_old(a,i) 
               T1abaj(a,b,a1,j) *= 0.25 
#bgn_debug
#               T1abaj(a,b,a1,j) *=1.0
#end_debug
               Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j) 

            ENDDO i 

            DO j1 

               REQUEST Vibja_baba(j,a1,j1,a) j1  
               GET t1b_old(b,j1) 

               T1abaj(a,b,a1,j)  = Vibja_baba(j,a1,j1,a)*t1b_old(b,j1) 
               T1abaj(a,b,a1,j) *= -0.25 
#bgn_debug
#               T1abaj(a,b,a1,j) *=1.0
#end_debug
               Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j) 

               DO i 

                  REQUEST I3ab(i,a1,j1,j)  i 
                  REQUEST Tau_ab(a,i,b,j1) i 

                  Tabij(a,b,i,j1)   = Tau_ab(a,i,b,j1)
                  Tijaj(i,j1,a1,j)  = I3ab(i,a1,j1,j)
                  T1abaj(a,b,a1,j)  = Tabij(a,b,i,j1)*Tijaj(i,j1,a1,j)
                  T1abaj(a,b,a1,j) *= -0.125
#bgn_debug
#               T1abaj(a,b,a1,j) *=1.0
#end_debug
                  Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j)
               ENDDO i 
            ENDDO j1 
# Multiply by 4 to match aces 
#bgn_debug
#           Tabaj(a,b,a1,j) *= 4.0
#           PREPARE Dabci_abab(a,b,a1,j) += Tabaj(a,b,a1,j)
#end_debug

            DO mu 
               Txbaj(mu,b,a1,j)          = Tabaj(a,b,a1,j)*ca(mu,a) 
               Txbaj(mu,b,a1,j)         *= Mhalf 
               PREPARE Dxbaj(mu,b,a1,j) += Txbaj(mu,b,a1,j)  
            ENDDO mu 
      ENDPARDO a, a1, b, j 
      execute server_barrier 

# Back transform to full AO representation

      PARDO mu, b, a1, j 
            REQUEST Dxbaj(mu,b,a1,j) j  
            DO nu 
               Txxaj(mu,nu,a1,j)      = Dxbaj(mu,b,a1,j)*cb(nu,b) 
               PREPARE Dxxaj(mu,nu,a1,j) += Txxaj(mu,nu,a1,j)  
            ENDDO nu 
      ENDPARDO mu, b, a1, j 
      execute server_barrier 

      PARDO mu, nu, j 
            allocate Lxxaj(mu,nu,*,j) 
            DO a1 
               REQUEST Dxxaj(mu,nu,a1,j) j  
               Lxxaj(mu,nu,a1,j) = Dxxaj(mu,nu,a1,j) 
            ENDDO a1 
            DO lambda    
               Txxxj(mu,nu,lambda,j) = 0.0 
               DO a1  
                  T1xxxj(mu,nu,lambda,j) = Lxxaj(mu,nu,a1,j)*ca(lambda,a1) 
                  Txxxj(mu,nu,lambda,j) += T1xxxj(mu,nu,lambda,j)   
               ENDDO a1  
               PREPARE Dxxxj(mu,nu,lambda,j) += Txxxj(mu,nu,lambda,j)  
            ENDDO lambda   
            deallocate Lxxaj(mu,nu,*,j) 
      ENDPARDO mu, nu, j 
      execute server_barrier 

      ENDPROC DABCIABAB 
#     -----------------
      PROC DABCIBABA 
#     --------------
      PARDO b1, b, a, i 
            Tbabi(b1,a,b,i) = 0.0 
            GET Gae_b(b1,b) 
            GET t1a_old(a,i) 

            T1babi(b1,a,b,i)  = Gae_b(b1,b)^t1a_old(a,i) 
            T1babi(b1,a,b,i) *= -0.125 
#bgn_debug
#            T1babi(b1,a,b,i) *=1.0
#end_debug
            Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i) 
            DO j 
               REQUEST Tau_ab(a,i,b1,j)    j  
               REQUEST L2old_ab(i,a,j,b1)  j  
               REQUEST Vibja_abba(i,b,j,a) j  
               GET l1b_old(j,b) 
               GET t1b_old(b,j) 
               GET t1b_old(b1,j) 

               T1babi(b1,a,b,i)  = Tau_ab(a,i,b1,j)*l1b_old(j,b) 
               T1babi(b1,a,b,i) *= 0.125 
#bgn_debug
#               T1babi(b1,a,b,i) *=1.0
#end_debug
               Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i) 

               T1babi(b1,a,b,i)  = L2old_ab(i,a,j,b1)*t1b_old(b,j)  
               T1babi(b1,a,b,i) *= 0.125 
#bgn_debug
#               T1babi(b1,a,b,i) *=1.0
#end_debug
               Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i) 

               T1babi(b1,a,b,i)  = Vibja_abba(i,b,j,a)*t1b_old(b1,j) 
               T1babi(b1,a,b,i) *= 0.25 
#bgn_debug
#               T1babi(b1,a,b,i) *=1.0
#end_debug
               Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i) 
            ENDDO j 
            DO i1 
               REQUEST Vibja_abab(i,b,i1,b1) b1  
               GET t1a_old(a,i1) 

               T1babi(b1,a,b,i)  = Vibja_abab(i,b,i1,b1)*t1a_old(a,i1) 
               T1babi(b1,a,b,i) *= -0.25 
#bgn_debug
#               T1babi(b1,a,b,i) *=1.0
#end_debug
               Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i) 
               DO j 
                  REQUEST I3ba(j,b,i1,i) j 
                  REQUEST Tau_ab(a,i1,b1,j) j 

                  Tbaji(b1,a,j,i1)  = Tau_ab(a,i1,b1,j)
                  Tjibi(j,i1,b,i)   = I3ba(j,b,i1,i)
                  T1babi(b1,a,b,i)  = Tbaji(b1,a,j,i1)*Tjibi(j,i1,b,i)
                  T1babi(b1,a,b,i) *= -0.125
#bgn_debug
#                  T1babi(b1,a,b,i) *=1.0
#end_debug
                  Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i)
               ENDDO j 
            ENDDO i1 
# Multiply by 4 to match aces
# ---------------------------
#bgn_debug
#           Tbabi(b1,a,b,i) *= 4.0
#
#           PREPARE Dabci_baba(b1,a,b,i) += Tbabi(b1,a,b,i)
#end_debug

            DO mu 
               Txabi(mu,a,b,i)          = Tbabi(b1,a,b,i)*cb(mu,b1) 
               Txabi(mu,a,b,i)         *= Phalf 
               PREPARE Dxabi(mu,a,b,i) += Txabi(mu,a,b,i)  
            ENDDO mu 
      ENDPARDO b1, b, a, i 
      execute server_barrier 

# Back transform to full AO representation
      PARDO mu, a, b1, i 
            REQUEST Dxabi(mu,a,b1,i) i  
            DO nu 
               Txxbi(mu,nu,b1,i)      = Dxabi(mu,a,b1,i)*ca(nu,a) 
               PREPARE Dxxbi(mu,nu,b1,i) += Txxbi(mu,nu,b1,i)  
            ENDDO nu 
      ENDPARDO mu, a, b1, i 
      execute server_barrier 

      PARDO mu, nu, i 
            allocate Lxxbi(mu,nu,*,i) 
            DO b 
               REQUEST Dxxbi(mu,nu,b,i) i  
               Lxxbi(mu,nu,b,i) = Dxxbi(mu,nu,b,i) 
            ENDDO b 
            DO lambda 
               Txxxi(mu,nu,lambda,i) = 0.0 
               DO b  
                  T1xxxi(mu,nu,lambda,i) = Lxxbi(mu,nu,b,i)*cb(lambda,b) 
                  Txxxi(mu,nu,lambda,i) += T1xxxi(mu,nu,lambda,i)  
               ENDDO b 
               PREPARE Dxxxi(mu,nu,lambda,i) += Txxxi(mu,nu,lambda,i)  
            ENDDO lambda 
            deallocate Lxxbi(mu,nu,*,i) 
      ENDPARDO mu, nu, i 
      execute server_barrier 

      ENDPROC DABCIBABA 
#     ------------------

      PROC DABCI
        CALL I2XX
        execute server_barrier
        CALL DABCIAAAA
        CALL DABCIBBBB
        CALL DABCIABAB
        CALL DABCIBABA
      ENDPROC DABCI
# -----------------------------------------------------------

       PROC I2XX_X
#      ----------
# Form the two-particle intermediate I3aa, I3bb, I3ab, and I3ba  needed in 
# place of V^{ab}_{cd}. 
# Form the intermediate I3aa 
      
      PARDO i2,a,i1,i
            Tiaii(i2,a,i1,i) = 0.0
            PREPARE I3aa_x(i2,a,i1,i) = Tiaii(i2,a,i1,i)
      ENDPARDO i2,a,i1,i

      PARDO j2,b,j1,j
            Tjbjj(j2,b,j1,j) = 0.0
            PREPARE I3bb_x(j2,b,j1,j) = Tjbjj(j2,b,j1,j)
      ENDPARDO j2,b,j1,j

      PARDO i2,a,j1,j
            Tiajj(i2,a,j1,j) = 0.0
            PREPARE I3ab_x(i2,a,j1,j) = Tiajj(i2,a,j1,j)
      ENDPARDO i2,a,j1,j

      PARDO j,b,i1,i 
            Tjbii(j,b,i1,i) = 0.0
            PREPARE I3ba_x(j,b,i1,i) = Tjbii(j,b,i1,i)
      ENDPARDO j,b,i1,i 
   
      EXECUTE SERVER_BARRIER

      PARDO a, a1
            DO i2
            DO i1
            DO i
               REQUEST L2old_aa(i2,a,i1,a1) a
               GET t1a_old(a1,i)
               REQUEST L2old_aa_x(i2,a,i1,a1) a
               GET t1a_old_x(a1,i)

               Tiaii(i2,a,i1,i) = L2old_aa(i2,a,i1,a1)*t1a_old_x(a1,i)
               PREPARE I3aa_x(i2,a,i1,i) += Tiaii(i2,a,i1,i)

               Tiaii(i2,a,i1,i) = L2old_aa_x(i2,a,i1,a1)*t1a_old(a1,i)
               PREPARE I3aa_x(i2,a,i1,i) += Tiaii(i2,a,i1,i)
            ENDDO i
            ENDDO i1
            ENDDO i2
      ENDPARDO a, a1
# Form the intermediate I3bb 
      PARDO b, b1
            DO j2
            DO j1
            DO j
               REQUEST L2old_bb(j2,b,j1,b1) b1
               GET t1b_old(b1,j)

               REQUEST L2old_bb_x(j2,b,j1,b1) b1
               GET t1b_old_x(b1,j)

               Tjbjj(j2,b,j1,j) = L2old_bb(j2,b,j1,b1)*t1b_old_x(b1,j)
               PREPARE I3bb_x(j2,b,j1,j) += Tjbjj(j2,b,j1,j)

               Tjbjj(j2,b,j1,j) = L2old_bb_x(j2,b,j1,b1)*t1b_old(b1,j)
               PREPARE I3bb_x(j2,b,j1,j) += Tjbjj(j2,b,j1,j)
            ENDDO j
            ENDDO j1
            ENDDO j2
      ENDPARDO b, b1
# Form the intermediate I3ab 
      PARDO a, b1
            DO i2
            DO j1
            DO j
               REQUEST L2old_ab(i2,a,j1,b1) b1
               GET t1b_old(b1,j)

               REQUEST L2old_ab_x(i2,a,j1,b1) b1
               GET t1b_old_x(b1,j)

               Tiajj(i2,a,j1,j) = L2old_ab(i2,a,j1,b1)*t1b_old_x(b1,j)
               PREPARE I3ab_x(i2,a,j1,j) += Tiajj(i2,a,j1,j)

               Tiajj(i2,a,j1,j) = L2old_ab_x(i2,a,j1,b1)*t1b_old(b1,j)
               PREPARE I3ab_x(i2,a,j1,j) += Tiajj(i2,a,j1,j)
            ENDDO j
            ENDDO j1
            ENDDO i2
      ENDPARDO a, b1
      PARDO b, a1
            DO j
            DO i1
            DO i
               REQUEST L2old_ab(i1,a1,j,b) b
               GET t1a_old(a1,i)
               
               REQUEST L2old_ab_x(i1,a1,j,b) b
               GET t1a_old_x(a1,i)

               Tjbii(j,b,i1,i) = L2old_ab(i1,a1,j,b)*t1a_old_x(a1,i)
               PREPARE I3ba_x(j,b,i1,i) += Tjbii(j,b,i1,i)

               Tjbii(j,b,i1,i) = L2old_ab_x(i1,a1,j,b)*t1a_old(a1,i)
               PREPARE I3ba_x(j,b,i1,i) += Tjbii(j,b,i1,i)
            ENDDO i
            ENDDO i1
            ENDDO j
      ENDPARDO b, a1
      ENDPROC I2XX_X
#     --------------
# Start the calculation of the D^{ab}_{ci} type contributions to the
# density. Equivalent to Gamma5   

      PROC DCIABAAAA_X
#     ----------------
      PARDO a, a1, a2, i
            Taaai(a,a1,a2,i) = 0.0 
            Taiaa(a,i,a1,a2) = 0.0 
            PREPARE Dabci_aaaa_x(a,a1,a2,i) = Taaai(a,a1,a2,i)
            PREPARE Dciab_aaaa_x(a,i,a1,a2) = Taiaa(a,i,a1,a2)
      ENDPARDO a, a1, a2, i
     
      EXECUTE SERVER_BARRIER

      PARDO a, a1, a2, i
            Taaai(a,a1,a2,i) = 0.0
            Taiaa(a,i,a1,a2) = 0.0 

            GET Gae_a(a2,a)
            GET t1a_old(a1,i)
            GET Gae_a(a2,a1)
            GET t1a_old(a,i)

            GET Gae_a_x(a2,a)
            GET t1a_old_x(a1,i)
            GET Gae_a_x(a2,a1)
            GET t1a_old_x(a,i)

# -1/4P_(ab)[t2(mn,ae)*l2(ce,mn)*t1_x(i,b)]
# Question about the factor??

            T1aaai(a,a1,a2,i)  = Gae_a(a2,a)^t1a_old_x(a1,i)
            T1aaai(a,a1,a2,i) *= -0.125
#bgn_debug
#            T1aaai(a,a1,a2,i) *= 1.0
#end_debug
            Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)

            T1aaai(a,a1,a2,i)  = Gae_a(a2,a1)^t1a_old_x(a,i)
            T1aaai(a,a1,a2,i) *= 0.125

#bgn_debug
#           T1aaai(a,a1,a2,i) *= 1.0
#end_debug
            Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)

# 1/8P_(ab)[t2_x(mn,ae)*l2(ce_mn)*t1(i,b) + t2(mn,ae)*l2_x(ce,mn)*t1(i,b)]
# Factor is right.

            T1aaai(a,a1,a2,i)  = Gae_a_x(a2,a)^t1a_old(a1,i)
            T1aaai(a,a1,a2,i) *= -0.125
#bgn_debug
#           T1aaai(a,a1,a2,i) *= 1.0
#end_debug
            Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)

            T1aaai(a,a1,a2,i)  = Gae_a_x(a2,a1)^t1a_old(a,i)
            T1aaai(a,a1,a2,i) *= 0.125
#bgn_debug
#            T1aaai(a,a1,a2,i) *= 1.0
#end_debug

            Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)

            DO i1
               REQUEST Tau_aa(a,i1,a1,i)      i1
               REQUEST L2old_aa(i1,a,i,a1)    i1
               REQUEST Vibja_aaaa(i,a2,i1,a)  i1
               REQUEST Vibja_aaaa(i,a2,i1,a1) i1
               GET l1a_old(i1,a2)
               GET t1a_old(a2,i1)
               GET t1a_old(a1,i1)
               GET t1a_old(a,i1)

               REQUEST Tau_aa_x(a,i1,a1,i)      i1
               REQUEST L2old_aa_x(i1,a,i,a1)    i1
               REQUEST Vibja_aaaa_x(i,a2,i1,a)  i1
               REQUEST Vibja_aaaa_x(i,a2,i1,a1) i1
               GET l1a_old_x(i1,a2)
               GET t1a_old_x(a2,i1)
               GET t1a_old_x(a1,i1)
               GET t1a_old_x(a,i1)

# 1/4[Tau_x(mi,ab)*l1(c,m) + Tau(mi,ab)*l1_x(c,m)]
# A question about factor??
             
               T1aaai(a,a1,a2,i)  = Tau_aa_x(a,i1,a1,i)*l1a_old(i1,a2)
               T1aaai(a,a1,a2,i) *= 0.125                              
#bgn_debug
#               T1aaai(a,a1,a2,i) *= 1.0
#end_debug

               Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)

               T1aaai(a,a1,a2,i)  = Tau_aa(a,i1,a1,i)*l1a_old_x(i1,a2)
               T1aaai(a,a1,a2,i) *= 0.125                           
#bgn_debug
#               T1aaai(a,a1,a2,i) *= 1.0
#end_debug
               Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)

# ABCI_X begin (CIAB pieces are put into ABCI)
# 1/8[l2_x(ab,mi)*t1(m,c) + l2(ab,mi)*t1(m,c)] {Stanton&Gauus has 1/4}
# Moved DABCI
#
               T1aiaa(a,i,a1,a2)  = L2old_aa(i1,a,i,a1)*t1a_old_x(a2,i1)
               T1aiaa(a,i,a1,a2) *= 0.125
#bgn_debug
#               T1aiaa(a,i,a1,a2) *= 1.0
#end_debug
               Taiaa(a,i,a1,a2)  += T1aiaa(a,i,a1,a2)

               T1aiaa(a,i,a1,a2)  = L2old_aa_x(i1,a,i,a1)*t1a_old(a2,i1)
               T1aiaa(a,i,a1,a2) *= 0.125
#bgn_debug
#               T1aiaa(a,i,a1,a2) *= 1.0
#end_debug

               Taiaa(a,i,a1,a2)  += T1aiaa(a,i,a1,a2)
# ABCI_X ends

#-1/4P_(ab)[t2(in,ae)*l2(ce,mn)*t1_x(m,b)]

               T1aaai(a,a1,a2,i)  = Vibja_aaaa(i,a2,i1,a)*t1a_old_x(a1,i1)
               T1aaai(a,a1,a2,i) *= -0.25
#bgn_debug
#               T1aaai(a,a1,a2,i) *= 1.0
#end_debug

               Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)

               T1aaai(a,a1,a2,i)  = Vibja_aaaa(i,a2,i1,a1)*t1a_old_x(a,i1)
               T1aaai(a,a1,a2,i) *= 0.25
#bgn_debug
#               T1aaai(a,a1,a2,i) *= 1.0
#end_debug

               Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)

#-1/4P_(ab)[t2_x(in,ae)*l2(ce,mn)*t1(m,b) + t2(in,ae)*l2_x(ce,mn)*t1(m,b)]

               T1aaai(a,a1,a2,i)  = Vibja_aaaa_x(i,a2,i1,a)*t1a_old(a1,i1)
               T1aaai(a,a1,a2,i) *= -0.25
#bgn_debug
#               T1aaai(a,a1,a2,i) *= 1.0
#end_debug
               Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)

               T1aaai(a,a1,a2,i)  = Vibja_aaaa_x(i,a2,i1,a1)*t1a_old(a,i1)
               T1aaai(a,a1,a2,i) *= 0.25
#bgn_debug
#               T1aaai(a,a1,a2,i) *= 1.0
#end_debug

               Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)

               DO i2
                  REQUEST I3aa(i1,a2,i2,i)   i2
                  REQUEST Tau_aa(a,i1,a1,i2) i2

                  REQUEST I3aa_x(i1,a2,i2,i)   i2
                  REQUEST Tau_aa_x(a,i1,a1,i2) i2

# -1/8[t1_x(i,e)*l2(ce,mn)*Tau(mn,ab) + t1(i,e)*l2_x(ce,mn)*Tau(mn,ab) +
#      Tau_x(mn,ab)*l2(ce,mn)*t(i,e)] [1/8 in Gauss & Stanton)
# Question about the factor??

                  Taaii(a,a1,i1,i2)  = Tau_aa_x(a,i1,a1,i2)
                  Tiiai(i1,i2,a2,i)  = I3aa(i1,a2,i2,i)
                  T1aaai(a,a1,a2,i)  = Taaii(a,a1,i1,i2)*Tiiai(i1,i2,a2,i)
                  T1aaai(a,a1,a2,i) *= -0.0625
#bgn_debug
#                  T1aaai(a,a1,a2,i) *= 1.0
#end_debug
                  Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)

                  Taaii(a,a1,i1,i2)  = Tau_aa(a,i1,a1,i2)
                  Tiiai(i1,i2,a2,i)  = I3aa_x(i1,a2,i2,i)
                  T1aaai(a,a1,a2,i)  = Taaii(a,a1,i1,i2)*Tiiai(i1,i2,a2,i)
                  T1aaai(a,a1,a2,i) *= -0.0625
#bgn_debug
#                  T1aaai(a,a1,a2,i) *= 1.0
#end_debug
                  Taaai(a,a1,a2,i)  += T1aaai(a,a1,a2,i)
               ENDDO i2
            ENDDO i1
#
           T1AHaaai(a,a1,a2,i)       = Taiaa(a,i,a1,a2)
           T1AHaaai(a,a1,a2,i)      *= Fact
           Taaai(a,a1,a2,i)         += T1AHaaai(a,a1,a2,i)

# Multiply by 4 to match aces 
#bgn_debug
#           Taaai(a,a1,a2,i) *= 4.0 
#           PREPARE Dabci_aaaa_x(a,a1,a2,i) += Taaai(a,a1,a2,i)  
#end_debug
#                                                                   ++
#  Two particle contribution to G-tensor: O(pq,rs)*<AA|S_z(1)+2S_z(2)pqsr|AA>
#  DAAAA = 1/2 DAAAA + DAAAA
#
            dO mu

               Taaai(a,a1,a2,i) *= 1.5
#bgn_debug
#               Taaai(a,a1,a2,i) *= 1.5
#               Taaai(a,a1,a2,i) *= 1.0
#end_debug
               Txaai(mu,a1,a2,i)      = Taaai(a,a1,a2,i)*ca(mu,a)
               PREPARE Dxaai_x(mu,a1,a2,i) += Txaai(mu,a1,a2,i)
            ENDDO mu
      ENDPARDO a, a1, a2, i
      execute server_barrier

# Back transform to full AO representation
      PARDO mu, a1, a2, i
            REQUEST Dxaai_x(mu,a1,a2,i) i
            DO nu
               Txxai(mu,nu,a2,i)      = Dxaai_x(mu,a1,a2,i)*ca(nu,a1) 
               PREPARE Dxxai_x(mu,nu,a2,i) += Txxai(mu,nu,a2,i)
            ENDDO nu
      ENDPARDO mu, a1, a2, i
      execute server_barrier

      PARDO mu, nu, i
            allocate Lxxai(mu,nu,*,i)
            DO a2
               REQUEST Dxxai_x(mu,nu,a2,i) i
               Lxxai(mu,nu,a2,i) = Dxxai_x(mu,nu,a2,i)
            ENDDO a2
            DO lambda
               Txxxi(mu,nu,lambda,i) = 0.0
               DO a2
                  T1xxxi(mu,nu,lambda,i) = Lxxai(mu,nu,a2,i)*ca(lambda,a2)
                  Txxxi(mu,nu,lambda,i) += T1xxxi(mu,nu,lambda,i)
               ENDDO a2
               PREPARE Dxxxi_x(mu,nu,lambda,i) = Txxxi(mu,nu,lambda,i)
            ENDDO lambda
            deallocate Lxxai(mu,nu,*,i)
      ENDPARDO mu, nu, i
      execute server_barrier

#bgn_debug
#
#      PARDO mu, nu, lambda, sigma
#          Txxxx_aa_x(mu,nu,lambda,sigma) = 0.0
#          do i
#            request Dxxxi_x(mu,nu,lambda,i) i
#            T1xxxx(mu,nu,lambda,sigma)  = Dxxxi_x(mu,nu,lambda,i)*ca(sigma,i)
#            Txxxx_aa_x(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)
#            Txxxx_aa_x(mu,nu,lambda,sigma) *= 8.0
#          enddo i
#          PREPARE Dxxxx_aaaa_x(mu,nu,lambda,sigma) +=Txxxx_aa_x(mu,nu,lambda,sigma)
#       ENDPARDO mu, nu, lambda, sigma
#end_debug

      ENDPROC DCIABAAAA_X
#    ---------------------
      PROC DCIABBBBB_X
#     -----------------

      PARDO b, b1, b2, j
            Tbbbj(b,b1,b2,j) = 0.0
            Tbjbb(b,j,b1,b2) = 0.0
            PREPARE Dabci_bbbb_x(b,b1,b2,j) = Tbbbj(b,b1,b2,j)
            PREPARE Dciab_bbbb_x(b,j,b1,b2) = Tbjbb(b,j,b1,b2)
      ENDPARDO b, b1, b2, j

      EXECUTE SERVER_BARRIER
  
      PARDO b, b1, b2, j
            Tbbbj(b,b1,b2,j) = 0.0 
            Tbjbb(b,j,b1,b2) = 0.0

            GET Gae_b(b2,b)
            GET t1b_old(b1,j)
            GET Gae_b(b2,b1)
            GET t1b_old(b,j)

            GET Gae_b_x(b2,b)
            GET t1b_old_x(b1,j)
            GET Gae_b_x(b2,b1)
            GET t1b_old_x(b,j)

            T1bbbj(b,b1,b2,j)  = Gae_b(b2,b)^t1b_old_x(b1,j)
            T1bbbj(b,b1,b2,j) *= -0.125
            Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)

            T1bbbj(b,b1,b2,j)  = Gae_b(b2,b1)^t1b_old_x(b,j)
            T1bbbj(b,b1,b2,j) *= 0.125
            Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)

            T1bbbj(b,b1,b2,j)  = Gae_b_x(b2,b)^t1b_old(b1,j)
            T1bbbj(b,b1,b2,j) *= -0.125
            Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)

            T1bbbj(b,b1,b2,j)  = Gae_b_x(b2,b1)^t1b_old(b,j)
            T1bbbj(b,b1,b2,j) *= 0.125
            Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)

            DO j1

               REQUEST Tau_bb(b,j1,b1,j)      j1
               REQUEST L2old_bb(j1,b,j,b1)    j1
               REQUEST Vibja_bbbb(j,b2,j1,b)  j1
               REQUEST Vibja_bbbb(j,b2,j1,b1) j1
               GET l1b_old(j1,b2)
               GET t1b_old(b2,j1)
               GET t1b_old(b1,j1)
               GET t1b_old(b,j1)

               REQUEST Tau_bb_x(b,j1,b1,j)      j1
               REQUEST L2old_bb_x(j1,b,j,b1)    j1
               REQUEST Vibja_bbbb_x(j,b2,j1,b)  j1
               REQUEST Vibja_bbbb_x(j,b2,j1,b1) j1
               GET l1b_old_x(j1,b2)
               GET t1b_old_x(b2,j1)
               GET t1b_old_x(b1,j1)
               GET t1b_old_x(b,j1)

               T1bbbj(b,b1,b2,j)  = Tau_bb(b,j1,b1,j)*l1b_old_x(j1,b2)
               T1bbbj(b,b1,b2,j) *= 0.125
               Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)

               T1bbbj(b,b1,b2,j)  = Tau_bb_x(b,j1,b1,j)*l1b_old(j1,b2)
               T1bbbj(b,b1,b2,j) *= 0.125
               Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)

# DABCI_X begins

               T1bjbb(b,j,b1,b2)  = L2old_bb(j1,b,j,b1)*t1b_old_x(b2,j1)
               T1bjbb(b,j,b1,b2) *= 0.125
               Tbjbb(b,j,b1,b2)  += T1bjbb(b,j,b1,b2)

               T1bjbb(b,j,b1,b2)  = L2old_bb_x(j1,b,j,b1)*t1b_old(b2,j1)
               T1bjbb(b,j,b1,b2) *= 0.125
               Tbjbb(b,j,b1,b2)  += T1bjbb(b,j,b1,b2)
# DABCI_X end
               T1bbbj(b,b1,b2,j)  = Vibja_bbbb(j,b2,j1,b)*t1b_old_x(b1,j1)
               T1bbbj(b,b1,b2,j) *= -0.25
               Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)

               T1bbbj(b,b1,b2,j)  = Vibja_bbbb(j,b2,j1,b1)*t1b_old_x(b,j1)
               T1bbbj(b,b1,b2,j) *= 0.25
               Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)

               T1bbbj(b,b1,b2,j)  = Vibja_bbbb_x(j,b2,j1,b)*t1b_old(b1,j1)
               T1bbbj(b,b1,b2,j) *= -0.25
               Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)

               T1bbbj(b,b1,b2,j)  = Vibja_bbbb_x(j,b2,j1,b1)*t1b_old(b,j1)
               T1bbbj(b,b1,b2,j) *= 0.25
               Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)

               DO j2
                  REQUEST I3bb(j1,b2,j2,j)   j2
                  REQUEST Tau_bb(b,j1,b1,j2) j2

                  REQUEST I3bb_x(j1,b2,j2,j)   j2
                  REQUEST Tau_bb_x(b,j1,b1,j2) j2

                  Tbbjj(b,b1,j1,j2)  = Tau_bb_x(b,j1,b1,j2)
                  Tjjbj(j1,j2,b2,j)  = I3bb(j1,b2,j2,j)
                  T1bbbj(b,b1,b2,j)  = Tbbjj(b,b1,j1,j2)*Tjjbj(j1,j2,b2,j)
                  T1bbbj(b,b1,b2,j) *= -0.0625
                  Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)

                  Tbbjj(b,b1,j1,j2)  = Tau_bb(b,j1,b1,j2)
                  Tjjbj(j1,j2,b2,j)  = I3bb_x(j1,b2,j2,j)
                  T1bbbj(b,b1,b2,j)  = Tbbjj(b,b1,j1,j2)*Tjjbj(j1,j2,b2,j)
                  T1bbbj(b,b1,b2,j) *= -0.0625
                  Tbbbj(b,b1,b2,j)  += T1bbbj(b,b1,b2,j)
               ENDDO j2
            ENDDO j1
#          
            T1AHbbbj(b,b1,b2,j)      = Tbjbb(b,j,b1,b2) 
            T1AHbbbj(b,b1,b2,j)     *= Fact
            Tbbbj(b,b1,b2,j)        += T1AHbbbj(b,b1,b2,j)

# Multiply by 4 to match aces 
#bgn_debug
#           Tbbbj(b,b1,b2,j) *= 4.0 
#            PREPARE Dabci_bbbb_x(b,b1,b2,j) += Tbbbj(b,b1,b2,j) 
#end_debug
#                                                                   ++
#  Two particle contribution to G-tensor: O(pq,rs)*<AA|S_z(1)+2S_z(2)pqsr|AA>
#  DBBBB = -1/2 DBBBB - DBBBB
#
            DO mu

               Tbbbj(b,b1,b2,j)  *= -1.5
#bgn_debug
#               Tbbbj(b,b1,b2,j) *= -1.5
#               Tbbbj(b,b1,b2,j) *= 1.0
#end_debug
               Txbbj(mu,b1,b2,j)      = Tbbbj(b,b1,b2,j)*cb(mu,b)
               PREPARE Dxbbj_x(mu,b1,b2,j) += Txbbj(mu,b1,b2,j)
            ENDDO mu
      ENDPARDO b, b1, b2, j
      execute server_barrier

# Back transform to full AO representation

      PARDO mu, b1, b2, j
            REQUEST Dxbbj_x(mu,b1,b2,j) j
            DO nu
               Txxbj(mu,nu,b2,j)      = Dxbbj_x(mu,b1,b2,j)*cb(nu,b1)
               PREPARE Dxxbj_x(mu,nu,b2,j) += Txxbj(mu,nu,b2,j)
            ENDDO nu
      ENDPARDO mu, b1, b2, j
      execute server_barrier

      PARDO mu, nu, j
            allocate Lxxbj(mu,nu,*,j)
            DO b2
               REQUEST Dxxbj_x(mu,nu,b2,j) j
               Lxxbj(mu,nu,b2,j) = Dxxbj_x(mu,nu,b2,j)
            ENDDO b2
            DO lambda
               Txxxj(mu,nu,lambda,j) = 0.0
               DO b2  
                  T1xxxj(mu,nu,lambda,j) = Lxxbj(mu,nu,b2,j)*cb(lambda,b2)
                  Txxxj(mu,nu,lambda,j) += T1xxxj(mu,nu,lambda,j) 
               ENDDO b2 
               PREPARE Dxxxj_x(mu,nu,lambda,j) = Txxxj(mu,nu,lambda,j)
            ENDDO lambda
            deallocate Lxxbj(mu,nu,*,j)
      ENDPARDO mu, nu, j
      execute server_barrier

     ENDPROC DCIABBBBB_X
#    -------------------
      PROC DCIABBABA_X
#     ----------------

      PARDO b1, b, a, i
            Tbabi(b1,a,b,i) = 0.0
            Tbiab(b1,i,a,b) = 0.0
            PREPARE Dabci_baba_x(b1,a,b,i) = Tbabi(b1,a,b,i)
            PREPARE Dciab_baab_x(b1,i,a,b) = Tbiab(b1,i,a,b)
      ENDPARDO b1, b, a, i

      EXECUTE SERVER_BARRIER

      PARDO b1, b, a, i
            Tbabi(b1,a,b,i) = 0.0
            Tbiab(b1,i,a,b) = 0.0
            GET Gae_b(b1,b)
            GET t1a_old(a,i)
             
            GET Gae_b_x(b1,b)
            GET t1a_old_x(a,i)

            T1babi(b1,a,b,i)  = Gae_b(b1,b)^t1a_old_x(a,i)
            T1babi(b1,a,b,i) *= -0.125
#bgn_debug
#            T1babi(b1,a,b,i) *=1.0
#end_debug
            Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i)

            T1babi(b1,a,b,i)  = Gae_b_x(b1,b)^t1a_old(a,i)
            T1babi(b1,a,b,i) *= -0.125
#bgn_debug
#            T1babi(b1,a,b,i) *=1.0
#end_debug
            Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i)

            DO j
               REQUEST Tau_ab(a,i,b1,j)    j
               REQUEST L2old_ab(i,a,j,b1)  j
               REQUEST Vibja_abba(i,b,j,a) j
               GET l1b_old(j,b)
               GET t1b_old(b,j)
               GET t1b_old(b1,j)

               REQUEST Tau_ab_x(a,i,b1,j)    j
               REQUEST L2old_ab_x(i,a,j,b1)  j
               REQUEST Vibja_abba_x(i,b,j,a) j
               GET l1b_old_x(j,b)
               GET t1b_old_x(b,j)
               GET t1b_old_x(b1,j)

               T1babi(b1,a,b,i)  = Tau_ab(a,i,b1,j)*l1b_old_x(j,b)
               T1babi(b1,a,b,i) *= 0.125
#bgn_debug
#               T1babi(b1,a,b,i) *=1.0
#end_debug
               Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i)

               T1babi(b1,a,b,i)  = Tau_ab_x(a,i,b1,j)*l1b_old(j,b)
               T1babi(b1,a,b,i) *= 0.125
#bgn_debug
#               T1babi(b1,a,b,i) *=1.0
#end_debug
               Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i)
#bgn_debug
# DABCI_X begins
               T1biab(b1,i,a,b)  = L2old_ab(i,a,j,b1)*t1b_old_x(b,j)
               T1biab(b1,i,a,b) *= 0.125
#bgn_debug
#               T1biab(b1,i,a,b) *=1.0
#end_debug
               Tbiab(b1,i,a,b)  += T1biab(b1,i,a,b)

               T1biab(b1,i,a,b)  = L2old_ab_x(i,a,j,b1)*t1b_old(b,j)
               T1biab(b1,i,a,b) *= 0.125
#bgn_debug
#               T1biab(b1,i,a,b) *=1.0
#end_debug
               Tbiab(b1,i,a,b)  += T1biab(b1,i,a,b)
#end_debug
# DABCI_X ends

               T1babi(b1,a,b,i)  = Vibja_abba(i,b,j,a)*t1b_old_x(b1,j)
               T1babi(b1,a,b,i) *= 0.25
#bgn_debug
#               T1babi(b1,a,b,i) *=1.0
#end_debug
               Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i)

               T1babi(b1,a,b,i)  = Vibja_abba_x(i,b,j,a)*t1b_old(b1,j)
               T1babi(b1,a,b,i) *= 0.25
#bgn_debug
#               T1babi(b1,a,b,i) *=1.0
#end_debug
               Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i)

            ENDDO j
            DO i1
               REQUEST Vibja_abab(i,b,i1,b1) b1
               GET t1a_old(a,i1)

               REQUEST Vibja_abab_x(i,b,i1,b1) b1
               GET t1a_old_x(a,i1)

               T1babi(b1,a,b,i)  = Vibja_abab(i,b,i1,b1)*t1a_old_x(a,i1)
               T1babi(b1,a,b,i) *= -0.25
#bgn_debug
#               T1babi(b1,a,b,i) *=1.0
#end_debug
               Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i)

               T1babi(b1,a,b,i)  = Vibja_abab_x(i,b,i1,b1)*t1a_old(a,i1)
               T1babi(b1,a,b,i) *= -0.25
#bgn_debug
#               T1babi(b1,a,b,i) *=1.0
#end_debug
               Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i)
               DO j
                  REQUEST I3ba(j,b,i1,i) j
                  REQUEST Tau_ab(a,i1,b1,j) j

                  REQUEST I3ba_x(j,b,i1,i) j
                  REQUEST Tau_ab_x(a,i1,b1,j) j

                  Tbaji(b1,a,j,i1)  = Tau_ab(a,i1,b1,j)
                  Tjibi(j,i1,b,i)   = I3ba_x(j,b,i1,i)
                  T1babi(b1,a,b,i)  = Tbaji(b1,a,j,i1)*Tjibi(j,i1,b,i)
#bgn_debug
#                  T1babi(b1,a,b,i) *=1.0
#end_debug
                  T1babi(b1,a,b,i) *= -0.125
                  Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i)

                  Tbaji(b1,a,j,i1)  = Tau_ab_x(a,i1,b1,j)
                  Tjibi(j,i1,b,i)   = I3ba(j,b,i1,i)
                  T1babi(b1,a,b,i)  = Tbaji(b1,a,j,i1)*Tjibi(j,i1,b,i)
#bgn_debug
#                  T1babi(b1,a,b,i) *=1.0
#end_debug
                  T1babi(b1,a,b,i) *= -0.125
                  Tbabi(b1,a,b,i)  += T1babi(b1,a,b,i)
               ENDDO j
            ENDDO i1

           T1AHbabi(b1,a,b,i)       = Tbiab(b1,i,a,b) 
           T1AHbabi(b1,a,b,i)      *= Fact 
           Tbabi(b1,a,b,i)         +=  T1AHbabi(b1,a,b,i)

# Multiply by 4 to match aces
# ---------------------------
#bgn_debug
#           Tbabi(b1,a,b,i) *= 4.0
#           PREPARE Dabci_baba_x(b1,a,b,i) += Tbabi(b1,a,b,i)
#end_debug
#                                                                   ++
#  Two particle contribution to G-tensor: O(pq,rs)*<AA|S_z(1)+2S_z(2)pqsr|AA>
#  DBABA = -1/2 DBABA + DBABA
#
            Tbabi(b1,a,b,i)  *= 0.5

            DO mu

               Txabi(mu,a,b,i)      = Tbabi(b1,a,b,i)*cb(mu,b1)
               PREPARE Dxabi_x(mu,a,b,i) += Txabi(mu,a,b,i)
            ENDDO mu
      ENDPARDO b1, b, a, i
      execute server_barrier

# Back transform to full AO representation

      PARDO mu, a, b1, i
            REQUEST Dxabi_x(mu,a,b1,i) i
            DO nu
               Txxbi(mu,nu,b1,i)      = Dxabi_x(mu,a,b1,i)*ca(nu,a)
               PREPARE Dxxbi_x(mu,nu,b1,i) += Txxbi(mu,nu,b1,i)
            ENDDO nu
      ENDPARDO mu, a, b1, i
      execute server_barrier

      PARDO mu, nu, i
            allocate Lxxbi(mu,nu,*,i)
            DO b
               REQUEST Dxxbi_x(mu,nu,b,i) i
               Lxxbi(mu,nu,b,i) = Dxxbi_x(mu,nu,b,i)
            ENDDO b
            DO lambda
               Txxxi(mu,nu,lambda,i) = 0.0
               DO b
                  T1xxxi(mu,nu,lambda,i) = Lxxbi(mu,nu,b,i)*cb(lambda,b)
                  Txxxi(mu,nu,lambda,i) += T1xxxi(mu,nu,lambda,i)
               ENDDO b
               PREPARE Dxxxi_x(mu,nu,lambda,i) += Txxxi(mu,nu,lambda,i)
            ENDDO lambda
            deallocate Lxxbi(mu,nu,*,i)
      ENDPARDO mu, nu, i
      execute server_barrier

      ENDPROC DCIABBABA_X
#     --------------------
      PROC DCIABABAB_X
#     -----------------
      PARDO a, a1, b, j
            Tabaj(a,b,a1,j) = 0.0
            Tajba(a,j,b,a1) = 0.0
            PREPARE Dabci_abab_x(a,b,a1,j) = Tabaj(a,b,a1,j)
            PREPARE Dciab_abba_x(a,j,b,a1) = Tajba(a,j,b,a1)
      ENDPARDO a, a1, b, j

      EXECUTE SERVER_BARRIER

      PARDO a, a1, b, j
            Tabaj(a,b,a1,j) = 0.0
            Tajba(a,j,b,a1) = 0.0

            GET Gae_a(a,a1)
            GET t1b_old(b,j)

            GET Gae_a_x(a,a1)
            GET t1b_old_x(b,j)

            T1abaj(a,b,a1,j)  = Gae_a(a,a1)^t1b_old_x(b,j)
            T1abaj(a,b,a1,j) *= -0.125
#bgn_debug
#            T1abaj(a,b,a1,j) *=1.0
#end_debug
            Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j)

            T1abaj(a,b,a1,j)  = Gae_a_x(a,a1)^t1b_old(b,j)
#bgn_debug
#            T1abaj(a,b,a1,j) *=1.0
#end_debug
            T1abaj(a,b,a1,j) *= -0.125
            Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j)

            DO i

               REQUEST Tau_ab(a,i,b,j)      i
               REQUEST L2old_ab(i,a,j,b)    i
               REQUEST Vibja_baab(j,a1,i,b) i
               GET l1a_old(i,a1)
               GET t1a_old(a1,i)
               GET t1a_old(a,i)
    
               REQUEST Tau_ab_x(a,i,b,j)      i
               REQUEST L2old_ab_x(i,a,j,b)    i
               REQUEST Vibja_baab_x(j,a1,i,b) i
               GET l1a_old_x(i,a1)
               GET t1a_old_x(a1,i)
               GET t1a_old_x(a,i)

               T1abaj(a,b,a1,j)  = Tau_ab(a,i,b,j)*l1a_old_x(i,a1)
               T1abaj(a,b,a1,j) *= 0.125
#bgn_debug
#               T1abaj(a,b,a1,j) *=1.0
#end_debug
               Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j)

               T1abaj(a,b,a1,j)  = Tau_ab_x(a,i,b,j)*l1a_old(i,a1)
               T1abaj(a,b,a1,j) *= 0.125
#bgn_debug
#               T1abaj(a,b,a1,j) *=1.0
#end_debug
               Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j)

# DABCI_X begin
               T1ajba(a,j,b,a1)  = L2old_ab(i,a,j,b)*t1a_old_x(a1,i)
               T1ajba(a,j,b,a1) *= 0.125
#bgn_debug
#               T1ajba(a,j,b,a1) *=1.0
#end_debug
               Tajba(a,j,b,a1)  += T1ajba(a,j,b,a1)

               T1ajba(a,j,b,a1)  = L2old_ab_x(i,a,j,b)*t1a_old(a1,i)
               T1ajba(a,j,b,a1) *= 0.125
#bgn_debug
#               T1ajba(a,j,b,a1) *=1.0
#end_debug
               Tajba(a,j,b,a1)  += T1ajba(a,j,b,a1)
#end_debug
# DABCI_X end
               T1abaj(a,b,a1,j)  = Vibja_baab(j,a1,i,b)*t1a_old_x(a,i)
               T1abaj(a,b,a1,j) *= 0.25
#bgn_debug
#               T1abaj(a,b,a1,j) *=1.0
#end_debug
               Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j)

               T1abaj(a,b,a1,j)  = Vibja_baab_x(j,a1,i,b)*t1a_old(a,i)
               T1abaj(a,b,a1,j) *= 0.25
#bgn_debug
#               T1abaj(a,b,a1,j) *=1.0
#end_debug
               Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j)

            ENDDO i
            DO j1
               REQUEST Vibja_baba(j,a1,j1,a) j1
               GET t1b_old(b,j1)

               REQUEST Vibja_baba_x(j,a1,j1,a) j1
               GET t1b_old_x(b,j1)

               T1abaj(a,b,a1,j)  = Vibja_baba(j,a1,j1,a)*t1b_old_x(b,j1)
               T1abaj(a,b,a1,j) *= -0.25
#bgn_debug
#               T1abaj(a,b,a1,j) *=1.0
#end_debug
               Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j)

               T1abaj(a,b,a1,j)  = Vibja_baba_x(j,a1,j1,a)*t1b_old(b,j1)
               T1abaj(a,b,a1,j) *= -0.25
#bgn_debug
#               T1abaj(a,b,a1,j) *=1.0
#end_debug
               Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j)

               DO i
                  REQUEST I3ab(i,a1,j1,j)  i
                  REQUEST Tau_ab(a,i,b,j1) i

                  REQUEST I3ab_x(i,a1,j1,j)  i
                  REQUEST Tau_ab_x(a,i,b,j1) i

                  Tabij(a,b,i,j1)   = Tau_ab(a,i,b,j1)
                  Tijaj(i,j1,a1,j)  = I3ab_x(i,a1,j1,j)
                  T1abaj(a,b,a1,j)  = Tabij(a,b,i,j1)*Tijaj(i,j1,a1,j)
                  T1abaj(a,b,a1,j) *= -0.125
#bgn_debug
#                  T1abaj(a,b,a1,j) *=1.0
#end_debug
                  Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j)

                  Tabij(a,b,i,j1)   = Tau_ab_x(a,i,b,j1)
                  Tijaj(i,j1,a1,j)  = I3ab(i,a1,j1,j)
                  T1abaj(a,b,a1,j)  = Tabij(a,b,i,j1)*Tijaj(i,j1,a1,j)
                  T1abaj(a,b,a1,j) *= -0.125
#bgn_debug
#                  T1abaj(a,b,a1,j) *=1.0
#end_debug
                  Tabaj(a,b,a1,j)  += T1abaj(a,b,a1,j)
               ENDDO i
            ENDDO j1

           T1AHabaj(a,b,a1,j)              = Tajba(a,j,b,a1)  
           T1AHabaj(a,b,a1,j)             *= Fact
           Tabaj(a,b,a1,j)                += T1AHabaj(a,b,a1,j)

# Multiply by 4 to match aces 
#bgn_debug
#           Tabaj(a,b,a1,j) *= 4.0
#           PREPARE Dabci_abab_x(a,b,a1,j) += Tabaj(a,b,a1,j)
#end_debug
#                                                                   ++
#  Two particle contribution to G-tensor: O(pq,rs)*<AA|S_z(1)+S_z(2)pqsr|AA>
#  DABAB = 1/2 DABAB - DABAB
#
            Tabaj(a,b,a1,j)  *= -0.5

            DO mu

               Txbaj(mu,b,a1,j)      = Tabaj(a,b,a1,j)*ca(mu,a)
               PREPARE Dxbaj_x(mu,b,a1,j) += Txbaj(mu,b,a1,j)
            ENDDO mu
      ENDPARDO a, a1, b, j
      execute server_barrier

# Back transform to full AO representation

      PARDO mu, b, a1, j
            REQUEST Dxbaj_x(mu,b,a1,j) j
            DO nu
               Txxaj(mu,nu,a1,j)      = Dxbaj_x(mu,b,a1,j)*cb(nu,b)
               PREPARE Dxxaj_x(mu,nu,a1,j) += Txxaj(mu,nu,a1,j)
            ENDDO nu
      ENDPARDO mu, b, a1, j
      execute server_barrier

      PARDO mu, nu, j
            allocate Lxxaj(mu,nu,*,j)
            DO a1
               REQUEST Dxxaj_x(mu,nu,a1,j) j
               Lxxaj(mu,nu,a1,j) = Dxxaj_x(mu,nu,a1,j)
            ENDDO a1
            DO lambda
               Txxxj(mu,nu,lambda,j) = 0.0
               DO a1
                  T1xxxj(mu,nu,lambda,j) = Lxxaj(mu,nu,a1,j)*ca(lambda,a1)
                  Txxxj(mu,nu,lambda,j) += T1xxxj(mu,nu,lambda,j)
               ENDDO a1
               PREPARE Dxxxj_x(mu,nu,lambda,j) += Txxxj(mu,nu,lambda,j)
            ENDDO lambda
            deallocate Lxxaj(mu,nu,*,j)
      ENDPARDO mu, nu, j
      execute server_barrier

     ENDPROC DCIABABAB_X
#    -------------------
#----------------------------------------------------------
      PROC DCIAB_X
        CALL I2XX_X
        execute server_barrier

        CALL DCIABAAAA_X
        CALL DCIABBBBB_X
        CALL DCIABABAB_X
        CALL DCIABBABA_X

      ENDPROC DCIAB_X
#-----------------------------------------------------------
# In this procedure the D(ij,ka) block of the two-particle 
# density matrix is evaluated. Only the AAAA contribution is computed.  
#
# ----------------------------------------------------------------------------- 
      PROC DIJKAAAAA 
#     --------------
      PARDO i, i1, i2, a 
            Tiiia(i,i1,i2,a) = 0.0 
            GET Gmi_a(i,i2) 
            GET t1a_old(a,i1) 
            GET Gmi_a(i1,i2) 
            GET t1a_old(a,i) 

            T1iiia(i,i1,i2,a)  = Gmi_a(i,i2)^t1a_old(a,i1) 
            T1iiia(i,i1,i2,a) *= -0.125  
#bgn_debug
#            T1iiia(i,i1,i2,a) *=1.0
#end_debug
            Tiiia(i,i1,i2,a)  += T1iiia(i,i1,i2,a) 

            T1iiia(i,i1,i2,a)  = Gmi_a(i1,i2)^t1a_old(a,i) 
            T1iiia(i,i1,i2,a) *= 0.125  
#bgn_debug
#            T1iiia(i,i1,i2,a) *=1.0
#end_debug
            Tiiia(i,i1,i2,a)  += T1iiia(i,i1,i2,a) 
            DO a1 
               REQUEST Tau_aa(a1,i,a,i1)      a1  
               REQUEST L2old_aa(i,a1,i1,a)    a1  
               REQUEST Vibja_aaaa(i,a1,i2,a)  a1  
               REQUEST Vibja_aaaa(i1,a1,i2,a) a1  
               GET l1a_old(i2,a1) 
               GET t1a_old(a1,i1) 
               GET t1a_old(a1,i) 
               GET t1a_old(a1,i2) 

               T1iiia(i,i1,i2,a) = Tau_aa(a1,i,a,i1)*l1a_old(i2,a1) 
               T1iiia(i,i1,i2,a)*= -0.125  
#bgn_debug
#               T1iiia(i,i1,i2,a) *=1.0
#end_debug
               Tiiia(i,i1,i2,a) += T1iiia(i,i1,i2,a) 

               T1iiia(i,i1,i2,a) = L2old_aa(i,a1,i1,a)*t1a_old(a1,i2) 
               T1iiia(i,i1,i2,a)*= -0.125  
#bgn_debug
#               T1iiia(i,i1,i2,a) *=1.0
#end_debug
               Tiiia(i,i1,i2,a) += T1iiia(i,i1,i2,a) 

               T1iiia(i,i1,i2,a) = Vibja_aaaa(i,a1,i2,a)*t1a_old(a1,i1) 
               T1iiia(i,i1,i2,a)*= 0.25  
#bgn_debug
#               T1iiia(i,i1,i2,a) *=1.0
#end_debug
               Tiiia(i,i1,i2,a) += T1iiia(i,i1,i2,a) 

               T1iiia(i,i1,i2,a) = Vibja_aaaa(i1,a1,i2,a)*t1a_old(a1,i) 
               T1iiia(i,i1,i2,a)*= -0.25  
#bgn_debug
#               T1iiia(i,i1,i2,a) *=1.0
#end_debug
               Tiiia(i,i1,i2,a) += T1iiia(i,i1,i2,a) 
            ENDDO a1 
            DO i3 
               REQUEST Vijmn_aaaa(i,i1,i2,i3) i3  
               GET t1a_old(a,i3) 
               T1iiia(i,i1,i2,a) = Vijmn_aaaa(i,i1,i2,i3)*t1a_old(a,i3) 
               T1iiia(i,i1,i2,a)*= 0.125  
#bgn_debug
#               T1iiia(i,i1,i2,a) *=1.0
#end_debug
               Tiiia(i,i1,i2,a) += T1iiia(i,i1,i2,a) 
            ENDDO i3 

# Multiply by 4 to match aces 
# ---------------------------
#bgn_debug
#
#           Tiiia(i,i1,i2,a) *= 4.0
#            PREPARE Dijka_aaaa(i,i1,i2,a) += Tiiia(i,i1,i2,a)
#end_debug

            DO sigma 
               Tiiix(i,i1,i2,sigma)          = Tiiia(i,i1,i2,a)*ca(sigma,a) 
               Tiiix(i,i1,i2,sigma)         *= Pthalf 
               PREPARE Diiix(i,i1,i2,sigma) += Tiiix(i,i1,i2,sigma) 
            ENDDO sigma 
      ENDPARDO i, i1, i2, a 
      execute server_barrier 

# Backtransform to AO basis

      PARDO i, i1, lambda, sigma  
            Tiixx(i,i1,lambda,sigma) = 0.0  
            DO i2  
               REQUEST Diiix(i,i1,i2,sigma) i  
               T1iixx(i,i1,lambda,sigma) = Diiix(i,i1,i2,sigma)*ca(lambda,i2) 
               Tiixx(i,i1,lambda,sigma) += T1iixx(i,i1,lambda,sigma)  
            ENDDO i2 
            Tiixx(i,i1,lambda,sigma)         *= 8.0  
            PREPARE Diixx(i,i1,lambda,sigma) += Tiixx(i,i1,lambda,sigma) 
      ENDPARDO i, i1, lambda, sigma 
      execute server_barrier

# Done Backtransformation 
      ENDPROC DIJKAAAAA 
#     ------------------
# In this procedure the D(iJ,kA) block of the two-particle 
# density matrix is evaluated. The AB block is computed.  

      PROC DIJKAABAB 
      PARDO i, j, i1, b 
            Tijib(i,j,i1,b) = 0.0 
            GET Gmi_a(i,i1) 
            GET t1b_old(b,j) 

            T1ijib(i,j,i1,b) = Gmi_a(i,i1)^t1b_old(b,j) 
            T1ijib(i,j,i1,b)*= -0.125  
#bgn_debug
#            T1ijib(i,j,i1,b) *=1.0
#end_debug
            Tijib(i,j,i1,b) += T1ijib(i,j,i1,b) 
            DO a 
               REQUEST Tau_ab(a,i,b,j)      a  
               REQUEST L2old_ab(i,a,j,b)    a  
               REQUEST Vibja_baab(j,a,i1,b) a  
               GET t1a_old(a,i1) 
               GET t1a_old(a,i) 
               GET l1a_old(i1,a) 

               T1ijib(i,j,i1,b) = Tau_ab(a,i,b,j)*l1a_old(i1,a) 
               T1ijib(i,j,i1,b)*= -0.125  
#bgn_debug
#               T1ijib(i,j,i1,b) *=1.0
#end_debug
               Tijib(i,j,i1,b) += T1ijib(i,j,i1,b) 

               T1ijib(i,j,i1,b) = L2old_ab(i,a,j,b)*t1a_old(a,i1) 
               T1ijib(i,j,i1,b)*= -0.125  
#bgn_debug
#               T1ijib(i,j,i1,b) *=1.0
#end_debug
               Tijib(i,j,i1,b) += T1ijib(i,j,i1,b) 

               T1ijib(i,j,i1,b) = Vibja_baab(j,a,i1,b)*t1a_old(a,i) 
               T1ijib(i,j,i1,b)*= -0.25  
#bgn_debug
#               T1ijib(i,j,i1,b) *=1.0
#end_debug
               Tijib(i,j,i1,b) += T1ijib(i,j,i1,b) 
            ENDDO a 
            DO b1 
               REQUEST Vibja_abab(i,b1,i1,b) b1  
               GET t1b_old(b1,j) 

               T1ijib(i,j,i1,b) = Vibja_abab(i,b1,i1,b)*t1b_old(b1,j) 
               T1ijib(i,j,i1,b)*= 0.25  
#bgn_debug
#               T1ijib(i,j,i1,b) *=1.0
#end_debug
               Tijib(i,j,i1,b) += T1ijib(i,j,i1,b) 
            ENDDO b1 
            DO j1 
               REQUEST Vijmn_abab(i,j,i1,j1) j1  
               GET t1b_old(b,j1) 

               T1ijib(i,j,i1,b) = Vijmn_abab(i,j,i1,j1)*t1b_old(b,j1) 
               T1ijib(i,j,i1,b)*= 0.125  
#bgn_debug
#               T1ijib(i,j,i1,b) *=1.0
#end_debug
               Tijib(i,j,i1,b) += T1ijib(i,j,i1,b) 
            ENDDO j1 

# Multiply by 4 to match aces 
#bgn_debug
#           Tijib(i,j,i1,b) *= 4.0 
#            PREPARE Dijka_abab(i,j,i1,b) += Tijib(i,j,i1,b) 
#end_debug

            DO sigma 
               Tijix(i,j,i1,sigma)          = Tijib(i,j,i1,b)*cb(sigma,b) 
               Tijix(i,j,i1,sigma)         *= Mhalf 
               PREPARE Dijix(i,j,i1,sigma) += Tijix(i,j,i1,sigma) 
            ENDDO sigma 
      ENDPARDO i, j, i1, b 
      execute server_barrier 

# Backtransform to AO basis

      PARDO i, j1, lambda, sigma  
            Tijxx(i,j1,lambda,sigma) = 0.0  
            DO i2  
               REQUEST Dijix(i,j1,i2,sigma) i  
               T1ijxx(i,j1,lambda,sigma) = Dijix(i,j1,i2,sigma)*ca(lambda,i2) 
               Tijxx(i,j1,lambda,sigma) += T1ijxx(i,j1,lambda,sigma)  
            ENDDO i2 
            Tijxx(i,j1,lambda,sigma)         *= 8.0  
            PREPARE Dijxx(i,j1,lambda,sigma) += Tijxx(i,j1,lambda,sigma) 
      ENDPARDO i, j1, lambda, sigma 
      execute server_barrier

# Done Backtransformation 
      ENDPROC DIJKAABAB 
#     ------------------
# In this procedure the D(Ij,Ka) block of the two-particle 
# density matrix is evaluated. The BABA block is computed.  
      PROC DIJKABABA 
      PARDO j, i, j1, a 
            Tjija(j,i,j1,a) = 0.0 
            GET Gmi_b(j,j1) 
            GET t1a_old(a,i) 

            T1jija(j,i,j1,a) = Gmi_b(j,j1)^t1a_old(a,i) 
            T1jija(j,i,j1,a)*= -0.125  
#bgn_debug
#             T1jija(j,i,j1,a)*=1.0
#end_debug
            Tjija(j,i,j1,a) += T1jija(j,i,j1,a) 

            DO b 
               REQUEST Tau_ab(a,i,b,j)      b  
               REQUEST L2old_ab(i,a,j,b)    b  
               REQUEST Vibja_abba(i,b,j1,a) b  
               GET t1b_old(b,j1) 
               GET t1b_old(b,j) 
               GET l1b_old(j1,b) 

               T1jija(j,i,j1,a) = Tau_ab(a,i,b,j)*l1b_old(j1,b) 
               T1jija(j,i,j1,a)*= -0.125  
#bgn_debug
#               T1jija(j,i,j1,a)*=1.0
#end_debug
               Tjija(j,i,j1,a) += T1jija(j,i,j1,a) 

               T1jija(j,i,j1,a) = L2old_ab(i,a,j,b)*t1b_old(b,j1) 
               T1jija(j,i,j1,a)*= -0.125  
#bgn_debug
#               T1jija(j,i,j1,a)*=1.0
#end_debug
               Tjija(j,i,j1,a) += T1jija(j,i,j1,a) 

               T1jija(j,i,j1,a) = Vibja_abba(i,b,j1,a)*t1b_old(b,j) 
               T1jija(j,i,j1,a)*= -0.25  
#bgn_debug
#               T1jija(j,i,j1,a)*=1.0
#end_debug
               Tjija(j,i,j1,a) += T1jija(j,i,j1,a) 
            ENDDO b 
            DO i1 
               REQUEST Vijmn_abab(i,j,i1,j1) i1  
               GET t1a_old(a,i1) 
               T1jija(j,i,j1,a) = Vijmn_abab(i,j,i1,j1)*t1a_old(a,i1) 
               T1jija(j,i,j1,a)*= 0.125  
#bgn_debug
#               T1jija(j,i,j1,a)*=1.0
#end_debug
               Tjija(j,i,j1,a) += T1jija(j,i,j1,a) 
            ENDDO i1 
            DO a1 
               REQUEST Vibja_baba(j,a1,j1,a) a1  
               GET t1a_old(a1,i) 
               T1jija(j,i,j1,a) = Vibja_baba(j,a1,j1,a)*t1a_old(a1,i) 
               T1jija(j,i,j1,a)*= 0.25  
#bgn_debug
#               T1jija(j,i,j1,a)*=1.0
#end_debug
               Tjija(j,i,j1,a) += T1jija(j,i,j1,a) 
            ENDDO a1 

# Multiply by 4 to match aces 
#bgn_debug
#           Tjija(j,i,j1,a) *= 4.0 
#            PREPARE Dijka_baba(j,i,j1,a) += Tjija(j,i,j1,a) 
#end_debug

            DO sigma 
               Tjijx(j,i,j1,sigma)          = Tjija(j,i,j1,a)*ca(sigma,a) 
               Tjijx(j,i,j1,sigma)         *= Phalf 
               PREPARE Djijx(j,i,j1,sigma) += Tjijx(j,i,j1,sigma) 
            ENDDO sigma 
      ENDPARDO j, i, j1, a 
      execute server_barrier 

# Backtransform to AO basis
#
      PARDO j, i1, lambda, sigma
            Tijxx(i1,j,sigma,lambda) = 0.0
            DO j2
               REQUEST Djijx(j,i1,j2,sigma) j
               T1ijxx(i1,j,sigma,lambda) = Djijx(j,i1,j2,sigma)*cb(lambda,j2)
               Tijxx(i1,j,sigma,lambda) += T1ijxx(i1,j,sigma,lambda)
            ENDDO j2
            Tijxx(i1,j,sigma,lambda)         *= 8.0
            PREPARE Dijxx(i1,j,sigma,lambda) += Tijxx(i1,j,sigma,lambda)
      ENDPARDO j, i1, lambda, sigma
      execute server_barrier

#bgn_debug
#      execute server_barrier
#      esuma   = 0.0
#      ecorraa = 0.0
#      PARDO i1,j,sigma,lambda
#            request Dijxx(i1,j,sigma,lambda) lambda
#            etemp = Dijxx(i1,j,sigma,lambda)*Dijxx(i1,j,sigma,lambda)
#            esuma += etemp
#      ENDPARDO i1,j,sigma,lambda
#      execute server_barrier
#      collective ecorraa += esuma
#      execute print_scalar ecorraa
# Done Backtransformation 

      ENDPROC DIJKABABA 
#     -------------------
# ----------------------------------------------------------------------------- 
#
# In this procedure the D(IJ,KA) block of the two-particle 
# density matrix is evaluated. Only the BBBB contribution is computed.  
# ----------------------------------------------------------------------------- 
      PROC DIJKABBBB 
      PARDO j, j1, j2, b 
            Tjjjb(j,j1,j2,b) = 0.0 
            GET Gmi_b(j,j2) 
            GET t1b_old(b,j1) 

            GET Gmi_b(j1,j2) 
            GET t1b_old(b,j) 
            T1jjjb(j,j1,j2,b) = Gmi_b(j,j2)^t1b_old(b,j1) 
            T1jjjb(j,j1,j2,b)*= -0.125  
            Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b) 

            T1jjjb(j,j1,j2,b)  = Gmi_b(j1,j2)^t1b_old(b,j) 
            T1jjjb(j,j1,j2,b) *= 0.125  
            Tjjjb(j,j1,j2,b)  += T1jjjb(j,j1,j2,b) 
            DO b1 
               REQUEST Tau_bb(b1,j,b,j1)      b1  
               REQUEST L2old_bb(j,b1,j1,b)    b1  
               REQUEST Vibja_bbbb(j,b1,j2,b)  b1  
               REQUEST Vibja_bbbb(j1,b1,j2,b) b1  
               GET l1b_old(j2,b1) 
               GET t1b_old(b1,j2) 
               GET t1b_old(b1,j1) 
               GET t1b_old(b1,j) 

               T1jjjb(j,j1,j2,b) = Tau_bb(b1,j,b,j1)*l1b_old(j2,b1) 
               T1jjjb(j,j1,j2,b)*= -0.125  
               Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b) 

               T1jjjb(j,j1,j2,b) = L2old_bb(j,b1,j1,b)*t1b_old(b1,j2) 
               T1jjjb(j,j1,j2,b)*= -0.125  
               Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b) 

               T1jjjb(j,j1,j2,b) = Vibja_bbbb(j,b1,j2,b)*t1b_old(b1,j1) 
               T1jjjb(j,j1,j2,b)*= 0.25  
               Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b) 

               T1jjjb(j,j1,j2,b) = Vibja_bbbb(j1,b1,j2,b)*t1b_old(b1,j) 
               T1jjjb(j,j1,j2,b)*= -0.25  
               Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b) 
            ENDDO b1 
            DO j3 
               REQUEST Vijmn_bbbb(j,j1,j2,j3) j3  
               GET t1b_old(b,j3) 
               T1jjjb(j,j1,j2,b) = Vijmn_bbbb(j,j1,j2,j3)*t1b_old(b,j3) 
               T1jjjb(j,j1,j2,b)*= 0.125  
               Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b) 
            ENDDO j3 
# Multiply by 4 to match aces 
#bgn_debug
#           Tjjjb(j,j1,j2,b) *= 4.0 
#            PREPARE Dijka_bbbb(j,j1,j2,b) += Tjjjb(j,j1,j2,b) 
#end_debug
            DO sigma 
               Tjjjx(j,j1,j2,sigma)          = Tjjjb(j,j1,j2,b)*cb(sigma,b) 
               Tjjjx(j,j1,j2,sigma)         *= Mthalf 
               PREPARE Djjjx(j,j1,j2,sigma) += Tjjjx(j,j1,j2,sigma)
            ENDDO sigma 
      ENDPARDO j, j1, j2, b 

      execute server_barrier 

# Backtransform to AO basis
      PARDO j, j1, lambda, sigma  
            Tjjxx(j,j1,lambda,sigma) = 0.0  
            DO j2  
               REQUEST Djjjx(j,j1,j2,sigma) j  
               T1jjxx(j,j1,lambda,sigma) = Djjjx(j,j1,j2,sigma)*cb(lambda,j2) 
               Tjjxx(j,j1,lambda,sigma) += T1jjxx(j,j1,lambda,sigma)  
            ENDDO j2 
            Tjjxx(j,j1,lambda,sigma)         *= 8.0  
            PREPARE Djjxx(j,j1,lambda,sigma) += Tjjxx(j,j1,lambda,sigma) 
      ENDPARDO j, j1, lambda, sigma 
      execute server_barrier
#
# Done Backtransformation 
#      esuma   = 0.0
#      ecorraa = 0.0
#      PARDO i,j1,lambda,sigma            
#            request Dijxx(i,j1,lambda,sigma) sigma
#            etemp = Dijxx(i,j1,lambda,sigma)*Dijxx_abab(i,j1,lambda,sigma)
#            esuma += etemp
#      ENDPARDO i,j1,lambda,sigma              
#      execute server_barrier
#      collective ecorraa += esuma
#      execute print_scalar ecorraa

      ENDPROC DIJKABBBB 
#     ------------------
#-------------------------------------------------------------------------
      PROC DIJKA
           CALL DIJKAAAAA
           CALL DIJKAABAB
           CALL DIJKABABA
           CALL DIJKABBBB
      ENDPROC DIJKA
#--------------------------------------------------------------------------

      PROC DIJKAAAAA_X

      PARDO i, i1, i2, a
            Tiiia(i,i1,i2,a) = 0.0
            Taiii(a,i,i1,i2) = 0.0
            PREPARE Dijka_aaaa_x(i,i1,i2,a) = Tiiia(i,i1,i2,a)
            PREPARE Dakij_aaaa_x(a,i,i1,i2) = Taiii(a,i,i1,i2)
      ENDPARDO i, i1, i2, a
      EXECUTE SERVER_BARRIER 

      PARDO i, i1, i2, a
            Tiiia(i,i1,i2,a) = 0.0
            Taiii(a,i,i1,i2) = 0.0
            GET Gmi_a(i,i2)
            GET t1a_old(a,i1)
            GET Gmi_a(i1,i2)
            GET t1a_old(a,i)
     
            GET Gmi_a_x(i,i2)
            GET t1a_old_x(a,i1)
            GET Gmi_a_x(i1,i2)
            GET t1a_old_x(a,i)

# -1/8[P(ij)G(i,k)t_x(j,a) + P(ij)G_x(i,k)t(j,a)]


            T1iiia(i,i1,i2,a)  = Gmi_a(i,i2)^t1a_old_x(a,i1)
            T1iiia(i,i1,i2,a) *= -0.125 
#bgn_debug
#            T1iiia(i,i1,i2,a) *=1.0
#end_debug
            Tiiia(i,i1,i2,a)  += T1iiia(i,i1,i2,a)

            T1iiia(i,i1,i2,a)  = Gmi_a(i1,i2)^t1a_old_x(a,i)
            T1iiia(i,i1,i2,a) *= 0.125 
#bgn_debug
#            T1iiia(i,i1,i2,a) *=1.0
#end_debug
            Tiiia(i,i1,i2,a)  += T1iiia(i,i1,i2,a)

            T1iiia(i,i1,i2,a)  = Gmi_a_x(i,i2)^t1a_old(a,i1)
            T1iiia(i,i1,i2,a) *= -0.125
#bgn_debug
#            T1iiia(i,i1,i2,a) *=1.0
#end_debug
            Tiiia(i,i1,i2,a)  += T1iiia(i,i1,i2,a)

            T1iiia(i,i1,i2,a)  = Gmi_a_x(i1,i2)^t1a_old(a,i)
            T1iiia(i,i1,i2,a) *= 0.125
#bgn_debug
#            T1iiia(i,i1,i2,a) *=1.0
#end_debug
            Tiiia(i,i1,i2,a)  += T1iiia(i,i1,i2,a)

            DO a1
               REQUEST Tau_aa(a1,i,a,i1)      a1 
               REQUEST L2old_aa(i,a1,i1,a)    a1 
               REQUEST Vibja_aaaa(i,a1,i2,a)  a1 
               REQUEST Vibja_aaaa(i1,a1,i2,a) a1
               GET l1a_old(i2,a1)
               GET t1a_old(a1,i1)
               GET t1a_old(a1,i)
               GET t1a_old(a1,i2)

               REQUEST Tau_aa_x(a1,i,a,i1)      a1
               REQUEST L2old_aa_x(i,a1,i1,a)    a1
               REQUEST Vibja_aaaa_x(i,a1,i2,a)  a1
               REQUEST Vibja_aaaa_x(i1,a1,i2,a) a1
               GET l1a_old_x(i2,a1)
               GET t1a_old_x(a1,i1)
               GET t1a_old_x(a1,i)
               GET t1a_old_x(a1,i2)

#-1/8 [Tau(ij,ea)l1_x(e,k) - Tau_x(ij,ea)l1(e,k)] (Gauss&Stanton 1/4??)

               T1iiia(i,i1,i2,a) = Tau_aa(a1,i,a,i1)*l1a_old_x(i2,a1)
               T1iiia(i,i1,i2,a)*= -0.125
#bgn_debug
#               T1iiia(i,i1,i2,a) *=1.0
#end_debug
               Tiiia(i,i1,i2,a) += T1iiia(i,i1,i2,a)

               T1iiia(i,i1,i2,a) = Tau_aa_x(a1,i,a,i1)*l1a_old(i2,a1)
               T1iiia(i,i1,i2,a)*= -0.125
#bgn_debug
#               T1iiia(i,i1,i2,a) *=1.0
#end_debug
               Tiiia(i,i1,i2,a) += T1iiia(i,i1,i2,a)

# AKIJ-begins 
#bgn_debug
#-/4 [l2(ae,ij)*t1i_x(k,e) + L2_x(ae,ij)*t(k,e)] (moved to DAKIJ_X)

               T1aiii(a,i,i1,i2) = L2old_aa(i,a1,i1,a)*t1a_old_x(a1,i2)
               T1aiii(a,i,i1,i2)*= -0.125
#bgn_debug
#               T1aiii(a,i,i1,i2) *=1.0
#end_debug
               Taiii(a,i,i1,i2) += T1aiii(a,i,i1,i2)

               T1aiii(a,i,i1,i2) = L2old_aa_x(i,a1,i1,a)*t1a_old(a1,i2)
               T1aiii(a,i,i1,i2)*= -0.125
#bgn_debug
#               T1aiii(a,i,i1,i2) *=1.0
#end_debug
               Taiii(a,i,i1,i2) += T1aiii(a,i,i1,i2)
# AKIJ-ends

# 1/4 P_(ij)[t1_x(j,f)*T2(im,ae)*L2(ef,mk)]

               T1iiia(i,i1,i2,a) = Vibja_aaaa(i,a1,i2,a)*t1a_old_x(a1,i1)
               T1iiia(i,i1,i2,a)*= 0.25
#bgn_debug
#               T1iiia(i,i1,i2,a) *=1.0
#end_debug
               Tiiia(i,i1,i2,a) += T1iiia(i,i1,i2,a)

               T1iiia(i,i1,i2,a) = Vibja_aaaa(i1,a1,i2,a)*t1a_old_x(a1,i)
               T1iiia(i,i1,i2,a)*= -0.25
#bgn_debug
#               T1iiia(i,i1,i2,a) *=1.0
#end_debug
               Tiiia(i,i1,i2,a) += T1iiia(i,i1,i2,a)

#-1/4 P_(ij)[t1(j,a)*T2_x(im,ef)*L2(ef,km)]

               T1iiia(i,i1,i2,a) = Vibja_aaaa_x(i,a1,i2,a)*t1a_old(a1,i1)
               T1iiia(i,i1,i2,a)*= 0.25
#bgn_debug
#               T1iiia(i,i1,i2,a) *=1.0
#end_debug
               Tiiia(i,i1,i2,a) += T1iiia(i,i1,i2,a)

               T1iiia(i,i1,i2,a) = Vibja_aaaa_x(i1,a1,i2,a)*t1a_old(a1,i)
               T1iiia(i,i1,i2,a)*= -0.25
#bgn_debug
#               T1iiia(i,i1,i2,a) *=1.0
#end_debug
               Tiiia(i,i1,i2,a) += T1iiia(i,i1,i2,a)
            ENDDO a1

            DO i3
               REQUEST Vijmn_aaaa(i,i1,i2,i3) i3
               GET t1a_old(a,i3)
               REQUEST Vijmn_aaaa_x(i,i1,i2,i3) i3
               GET t1a_old_x(a,i3)

# 1/8 [Tau(ij,ef)*L2_x(ef,km)*t1(a,m) + Tau(ij,ef)*L2(ef,km)*t_x(m,a)]

               T1iiia(i,i1,i2,a) = Vijmn_aaaa(i,i1,i2,i3)*t1a_old_x(a,i3)
               T1iiia(i,i1,i2,a)*= 0.125
#bgn_debug
#               T1iiia(i,i1,i2,a) *=1.0
#end_debug
               Tiiia(i,i1,i2,a) += T1iiia(i,i1,i2,a)

               T1iiia(i,i1,i2,a) = Vijmn_aaaa_x(i,i1,i2,i3)*t1a_old(a,i3)
               T1iiia(i,i1,i2,a)*= 0.125
#bgn_debug
#               T1iiia(i,i1,i2,a) *=1.0
#end_debug
               Tiiia(i,i1,i2,a) += T1iiia(i,i1,i2,a)
            ENDDO i3

           T1AHiiia(i,i1,i2,a)   = Taiii(a,i,i1,i2)
           T1AHiiia(i,i1,i2,a)  *= Fact
           Tiiia(i,i1,i2,a)     += T1AHiiia(i,i1,i2,a)

# Multiply by 4 to match aces 
# ---------------------------
#bgn_debug
#           Tiiia(i,i1,i2,a) *= 4.0
#           PREPARE Dijka_aaaa_x(i,i1,i2,a) += Tiiia(i,i1,i2,a)
#end_debug
#                                                                   ++
#  Two particle contribution to G-tensor: O(pq,rs)*<AA|S_z(1)+2S_z(2)pqsr|AA>
#  DAAAA = 1/2 DAAAA + DAAAA
#
            DO sigma

                Tiiia(i,i1,i2,a)  *= 1.5
#bgn_debug
#               Tiiia(i,i1,i2,a)  *= 1.5
#               Tiiia(i,i1,i2,a)  *= 1.0
#end_debug
               Tiiix(i,i1,i2,sigma)      = Tiiia(i,i1,i2,a)*ca(sigma,a)
               PREPARE Diiix_x(i,i1,i2,sigma) += Tiiix(i,i1,i2,sigma)
            ENDDO sigma
      ENDPARDO i, i1, i2, a
      execute server_barrier

# Backtransform to AO basis

      PARDO i, i1, lambda, sigma
            Tiixx(i,i1,lambda,sigma) = 0.0
            DO i2
               REQUEST Diiix_x(i,i1,i2,sigma) i

               T1iixx(i,i1,lambda,sigma) = Diiix_x(i,i1,i2,sigma)*ca(lambda,i2)
               Tiixx(i,i1,lambda,sigma) += T1iixx(i,i1,lambda,sigma)
            ENDDO i2
            Tiixx(i,i1,lambda,sigma)         *= 8.0
            PREPARE Diixx_x(i,i1,lambda,sigma) += Tiixx(i,i1,lambda,sigma)
      ENDPARDO i, i1, lambda, sigma
      execute server_barrier

      ENDPROC DIJKAAAAA_X
#     -------------------
#____________________________________________________________________________    
      PROC DIJKABBBB_X
#     ----------------
      PARDO j, j1, j2, b
            Tjjjb(j,j1,j2,b) = 0.0
            Tbjjj(b,j,j1,j2) = 0.0
            PREPARE Dijka_bbbb_x(j,j1,j2,b) = Tjjjb(j,j1,j2,b)
            PREPARE Dakij_bbbb_x(b,j,j1,j2) = Tbjjj(b,j,j1,j2) 
      ENDPARDO j, j1, j2, b
      
      PARDO j, j1, j2, sigma
            Tjjjx(j,j1,j2,sigma) = 0.0
             PREPARE Djjjx_x(j,j1,j2,sigma) = Tjjjx(j,j1,j2,sigma)
      ENDPARDO j, j1, j2, sigma

      EXECUTE SERVER_BARRIER

      PARDO j, j1, j2, b
            Tjjjb(j,j1,j2,b) = 0.0
            Tbjjj(b,j,j1,j2) = 0.0
            GET Gmi_b(j,j2)
            GET t1b_old(b,j1)

            GET Gmi_b(j1,j2)
            GET t1b_old(b,j)

            GET Gmi_b_x(j,j2)
            GET t1b_old_x(b,j1)
            GET Gmi_b_x(j1,j2)
            GET t1b_old_x(b,j)

            T1jjjb(j,j1,j2,b) = Gmi_b(j,j2)^t1b_old_x(b,j1)
            T1jjjb(j,j1,j2,b)*= -0.125
            Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b)

            T1jjjb(j,j1,j2,b)  = Gmi_b(j1,j2)^t1b_old_x(b,j)
            T1jjjb(j,j1,j2,b) *= 0.125
            Tjjjb(j,j1,j2,b)  += T1jjjb(j,j1,j2,b)

            T1jjjb(j,j1,j2,b) = Gmi_b_x(j,j2)^t1b_old(b,j1)
            T1jjjb(j,j1,j2,b)*= -0.125
            Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b)

            T1jjjb(j,j1,j2,b)  = Gmi_b_x(j1,j2)^t1b_old(b,j)
            T1jjjb(j,j1,j2,b) *= 0.125
            Tjjjb(j,j1,j2,b)  += T1jjjb(j,j1,j2,b)

           DO b1
               REQUEST Tau_bb(b1,j,b,j1)      b1
               REQUEST L2old_bb(j,b1,j1,b)    b1
               REQUEST Vibja_bbbb(j,b1,j2,b)  b1
               REQUEST Vibja_bbbb(j1,b1,j2,b) b1
               GET l1b_old(j2,b1)
               GET t1b_old(b1,j2)
               GET t1b_old(b1,j1)
               GET t1b_old(b1,j)

               REQUEST Tau_bb_x(b1,j,b,j1)      b1
               REQUEST L2old_bb_x(j,b1,j1,b)    b1
               REQUEST Vibja_bbbb_x(j,b1,j2,b)  b1
               REQUEST Vibja_bbbb_x(j1,b1,j2,b) b1
               GET l1b_old_x(j2,b1)
               GET t1b_old_x(b1,j2)
               GET t1b_old_x(b1,j1)
               GET t1b_old_x(b1,j)

               T1jjjb(j,j1,j2,b) = Tau_bb(b1,j,b,j1)*l1b_old_x(j2,b1)
               T1jjjb(j,j1,j2,b)*= -0.125
               Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b)

               T1jjjb(j,j1,j2,b) = Tau_bb_x(b1,j,b,j1)*l1b_old(j2,b1)
               T1jjjb(j,j1,j2,b)*= -0.125
               Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b)

# DAKIJ_X begin

               T1bjjj(b,j,j1,j2) = L2old_bb(j,b1,j1,b)*t1b_old_x(b1,j2)
               T1bjjj(b,j,j1,j2)*= -0.125
               Tbjjj(b,j,j1,j2) += T1bjjj(b,j,j1,j2)

               T1bjjj(b,j,j1,j2) = L2old_bb_x(j,b1,j1,b)*t1b_old(b1,j2)
               T1bjjj(b,j,j1,j2)*= -0.125
               Tbjjj(b,j,j1,j2) += T1bjjj(b,j,j1,j2)

# DAKIJ_X ends
               T1jjjb(j,j1,j2,b) = Vibja_bbbb(j,b1,j2,b)*t1b_old_x(b1,j1)
               T1jjjb(j,j1,j2,b)*= 0.25
               Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b)

               T1jjjb(j,j1,j2,b) = Vibja_bbbb(j1,b1,j2,b)*t1b_old_x(b1,j)
               T1jjjb(j,j1,j2,b)*= -0.25
               Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b)

               T1jjjb(j,j1,j2,b) = Vibja_bbbb_x(j,b1,j2,b)*t1b_old(b1,j1)
               T1jjjb(j,j1,j2,b)*= 0.25
               Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b)

               T1jjjb(j,j1,j2,b) = Vibja_bbbb_x(j1,b1,j2,b)*t1b_old(b1,j)
               T1jjjb(j,j1,j2,b)*= -0.25
               Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b)

            ENDDO b1
            DO j3
               REQUEST Vijmn_bbbb(j,j1,j2,j3) j3
               GET t1b_old(b,j3)
               REQUEST Vijmn_bbbb_x(j,j1,j2,j3) j3
               GET t1b_old_x(b,j3)

               T1jjjb(j,j1,j2,b) = Vijmn_bbbb(j,j1,j2,j3)*t1b_old_x(b,j3)
               T1jjjb(j,j1,j2,b)*= 0.125
               Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b)

               T1jjjb(j,j1,j2,b) = Vijmn_bbbb_x(j,j1,j2,j3)*t1b_old(b,j3)
               T1jjjb(j,j1,j2,b)*= 0.125
               Tjjjb(j,j1,j2,b) += T1jjjb(j,j1,j2,b)
            ENDDO j3

           T1AHjjjb(j,j1,j2,b)   = Tbjjj(b,j,j1,j2)
           T1AHjjjb(j,j1,j2,b)  *= Fact
           Tjjjb(j,j1,j2,b)     += T1AHjjjb(j,j1,j2,b)

# Multiply by 4 to match aces 
#bgn_debug
#           Tjjjb(j,j1,j2,b) *= 4.0 
#           PREPARE Dijka_bbbb_x(j,j1,j2,b) += Tjjjb(j,j1,j2,b) 
#end_debug
#                                                                   ++
#  Two particle contribution to G-tensor: O(pq,rs)*<BB|S_z(1)+2S_z(2)pqsr|BB>
#  -1/2 BBBBB - BBBB
#
            DO sigma

               Tjjjb(j,j1,j2,b)  *= -1.5
#bgn_debug
#               Tjjjb(j,j1,j2,b) *= -1.5
#               Tjjjb(j,j1,j2,b) *= 1.0
#end_debug
               Tjjjx(j,j1,j2,sigma)      = Tjjjb(j,j1,j2,b)*cb(sigma,b)
               PREPARE Djjjx_x(j,j1,j2,sigma) += Tjjjx(j,j1,j2,sigma)
            ENDDO sigma
      ENDPARDO j, j1, j2, b
      execute server_barrier

# Backtransform to AO basis

      PARDO j, j1, lambda, sigma
            Tjjxx(j,j1,lambda,sigma) = 0.0
            DO j2
               REQUEST Djjjx_x(j,j1,j2,sigma) j
               T1jjxx(j,j1,lambda,sigma) = Djjjx_x(j,j1,j2,sigma)*cb(lambda,j2)
               Tjjxx(j,j1,lambda,sigma) += T1jjxx(j,j1,lambda,sigma)
            ENDDO j2

            Tjjxx(j,j1,lambda,sigma)         *= 8.0
#bgn_debug
#            Tjjxx(j,j1,lambda,sigma)         *= 1.0
#end_debug
            PREPARE Djjxx_x(j,j1,lambda,sigma) += Tjjxx(j,j1,lambda,sigma)
      ENDPARDO j, j1, lambda, sigma
      execute server_barrier

     ENDPROC DIJKABBBB_X
#................................................................................
      PROC DIJKAABAB_X
#     ----------------
      PARDO i, j, i1, b
            Tijib(i,j,i1,b) = 0.0
            Tbiji(b,i,j,i1) = 0.0
            PREPARE Dijka_abab_x(i,j,i1,b) = Tijib(i,j,i1,b)
            PREPARE Dakij_baba_x(b,i,j,i1) = Tbiji(b,i,j,i1) 
      ENDPARDO i, j, i1, b
      EXECUTE SERVER_BARRIER
     
      PARDO i, j, i1, b
            Tijib(i,j,i1,b) = 0.0
            Tbiji(b,i,j,i1) = 0.0
            GET Gmi_a(i,i1)
            GET t1b_old(b,j)

            GET Gmi_a_x(i,i1)
            GET t1b_old_x(b,j)

            T1ijib(i,j,i1,b) = Gmi_a(i,i1)^t1b_old_x(b,j)
            T1ijib(i,j,i1,b)*= -0.125
#bgn_debug
#            T1ijib(i,j,i1,b) *=1.0
#end_debug
            Tijib(i,j,i1,b) += T1ijib(i,j,i1,b)

            T1ijib(i,j,i1,b) = Gmi_a_x(i,i1)^t1b_old(b,j)
            T1ijib(i,j,i1,b)*= -0.125
#bgn_debug
#            T1ijib(i,j,i1,b) *=1.0
#end_debug
            Tijib(i,j,i1,b) += T1ijib(i,j,i1,b)

            DO a
               REQUEST Tau_ab(a,i,b,j)      a
               REQUEST L2old_ab(i,a,j,b)    a
               REQUEST Vibja_baab(j,a,i1,b) a
               GET t1a_old(a,i1)
               GET t1a_old(a,i)
               GET l1a_old(i1,a)
 
               REQUEST Tau_ab_x(a,i,b,j)      a
               REQUEST L2old_ab_x(i,a,j,b)    a
               REQUEST Vibja_baab_x(j,a,i1,b) a
               GET t1a_old_x(a,i1)
               GET t1a_old_x(a,i)
               GET l1a_old_x(i1,a)

               T1ijib(i,j,i1,b) = Tau_ab(a,i,b,j)*l1a_old_x(i1,a)
               T1ijib(i,j,i1,b)*= -0.125
#bgn_debug
#               T1ijib(i,j,i1,b) *=1.0
#end_debug
               Tijib(i,j,i1,b) += T1ijib(i,j,i1,b)

               T1ijib(i,j,i1,b) = Tau_ab_x(a,i,b,j)*l1a_old(i1,a)
               T1ijib(i,j,i1,b)*= -0.125
#bgn_debug
#               T1ijib(i,j,i1,b) *=1.0
#end_debug
               Tijib(i,j,i1,b) += T1ijib(i,j,i1,b)

# DAKIJ begin
               T1biji(b,i,j,i1) = L2old_ab(i,a,j,b)*t1a_old_x(a,i1)
               T1biji(b,i,j,i1)*= -0.125
#bgn_debug
#               T1biji(b,i,j,i1) *=1.0
#end_debug
               Tbiji(b,i,j,i1) += T1biji(b,i,j,i1)

               T1biji(b,i,j,i1) = L2old_ab_x(i,a,j,b)*t1a_old(a,i1)
               T1biji(b,i,j,i1)*= -0.125
#bgn_debug
#               T1biji(b,i,j,i1) *=1.0
#end_debug
               Tbiji(b,i,j,i1) += T1biji(b,i,j,i1)
#DAKIJ end

               T1ijib(i,j,i1,b) = Vibja_baab(j,a,i1,b)*t1a_old_x(a,i)
               T1ijib(i,j,i1,b)*= -0.25
#bgn_debug
#               T1ijib(i,j,i1,b) *=1.0
#end_debug
               Tijib(i,j,i1,b) += T1ijib(i,j,i1,b)

               T1ijib(i,j,i1,b) = Vibja_baab_x(j,a,i1,b)*t1a_old(a,i)
               T1ijib(i,j,i1,b)*= -0.25
#bgn_debug
#               T1ijib(i,j,i1,b) *=1.0
#end_debug
               Tijib(i,j,i1,b) += T1ijib(i,j,i1,b)

            ENDDO a
            DO b1
               REQUEST Vibja_abab(i,b1,i1,b) b1
               GET t1b_old(b1,j)
               REQUEST Vibja_abab_x(i,b1,i1,b) b1
               GET t1b_old_x(b1,j)
 
               T1ijib(i,j,i1,b) = Vibja_abab(i,b1,i1,b)*t1b_old_x(b1,j)
               T1ijib(i,j,i1,b)*= 0.25
#bgn_debug
#               T1ijib(i,j,i1,b) *=1.0
#end_debug
               Tijib(i,j,i1,b) += T1ijib(i,j,i1,b)

               T1ijib(i,j,i1,b) = Vibja_abab_x(i,b1,i1,b)*t1b_old(b1,j)
               T1ijib(i,j,i1,b)*= 0.25
#bgn_debug
#               T1ijib(i,j,i1,b) *=1.0
#end_debug
               Tijib(i,j,i1,b) += T1ijib(i,j,i1,b)
            ENDDO b1
            DO j1
               REQUEST Vijmn_abab(i,j,i1,j1) j1
               GET t1b_old(b,j1)

               REQUEST Vijmn_abab_x(i,j,i1,j1) j1
               GET t1b_old_x(b,j1)

               T1ijib(i,j,i1,b) = Vijmn_abab(i,j,i1,j1)*t1b_old_x(b,j1)
               T1ijib(i,j,i1,b)*= 0.125
#bgn_debug
#               T1ijib(i,j,i1,b) *=1.0
#end_debug
               Tijib(i,j,i1,b) += T1ijib(i,j,i1,b)

               T1ijib(i,j,i1,b) = Vijmn_abab_x(i,j,i1,j1)*t1b_old(b,j1)
               T1ijib(i,j,i1,b)*= 0.125
#bgn_debug
#               T1ijib(i,j,i1,b) *=1.0
#end_debug
               Tijib(i,j,i1,b) += T1ijib(i,j,i1,b)
            ENDDO j1

           T1AHijib(i,j,i1,b)   = Tbiji(b,i,j,i1)
           T1AHijib(i,j,i1,b)  *= Fact 
           Tijib(i,j,i1,b)     += T1AHijib(i,j,i1,b) 

# Multiply by 4 to match aces 
#bgn_debug
#           Tijib(i,j,i1,b) *= 4.0 
#           PREPARE Dijka_abab_x(i,j,i1,b) += Tijib(i,j,i1,b) 
#end_debug
#                                                                   ++
#  Two particle contribution to G-tensor: O(pq,rs)*<AB|S_z(1)+2S_z(2)pqsr|AB>
#  DABAB = 1/2 DABAB - DABAB
#
            DO sigma

               Tijib(i,j,i1,b)  *= -0.5
#bgn_debug                  
#               Tijib(i,j,i1,b) *= -0.5
#               Tijib(i,j,i1,b) *= 1.0
#end_debug
               Tijix(i,j,i1,sigma)      = Tijib(i,j,i1,b)*cb(sigma,b)
               PREPARE Dijix_x(i,j,i1,sigma) += Tijix(i,j,i1,sigma)
            ENDDO sigma
      ENDPARDO i, j, i1, b
      Execute server_barrier

# Backtransform to AO basis
      PARDO i, j1, lambda, sigma
            Tijxx(i,j1,lambda,sigma) = 0.0
            DO i2
               REQUEST Dijix_x(i,j1,i2,sigma) i
               T1ijxx(i,j1,lambda,sigma) = Dijix_x(i,j1,i2,sigma)*ca(lambda,i2)
               Tijxx(i,j1,lambda,sigma) += T1ijxx(i,j1,lambda,sigma)
            ENDDO i2
            Tijxx(i,j1,lambda,sigma)         *= 8.0
            PREPARE Dijxx_x(i,j1,lambda,sigma) += Tijxx(i,j1,lambda,sigma)
      ENDPARDO i, j1, lambda, sigma
      execute server_barrier
#
#bgn_debug
#       esuma   = 0.0
#       ecorraa = 0.0
#       PARDO i,j1,lambda,sigma            
#             request Dijxx_x(i,j1,lambda,sigma) sigma 
#             etemp = Dijxx_x(i,j1,lambda,sigma)*Dijxx_x(i,j1,lambda,sigma) 
#             esuma += etemp
#       ENDPARDO i,j1,lambda,sigma              
#       execute server_barrier
#       collective ecorraa += esuma
#       execute print_scalar ecorraa
#end_debug
#
      ENDPROC DIJKAABAB_X
#     --------------------
#.................................................................................
      PROC DIJKABABA_X
#     ----------------
      PARDO j, i, j1, a
            Tjija(j,i,j1,a) = 0.0
            Tajij(a,j,i,j1) = 0.0
            PREPARE Dijka_baba_x(j,i,j1,a) = Tjija(j,i,j1,a)
            PREPARE Dakij_abab_x(a,j,i,j1) = Tajij(a,j,i,j1)
      ENDPARDO j, i, j1, a
      EXECUTE SERVER_BARRIER

      PARDO j, i, j1, a
            Tjija(j,i,j1,a) = 0.0
            Tajij(a,j,i,j1) = 0.0
            GET Gmi_b(j,j1)
            GET t1a_old(a,i)

            GET Gmi_b_x(j,j1)
            GET t1a_old_x(a,i)

            T1jija(j,i,j1,a) = Gmi_b(j,j1)^t1a_old_x(a,i)
            T1jija(j,i,j1,a)*= -0.125
#bgn_debug
#            T1jija(j,i,j1,a) *=1.0
#end_debug
            Tjija(j,i,j1,a) += T1jija(j,i,j1,a)

            T1jija(j,i,j1,a) = Gmi_b_x(j,j1)^t1a_old(a,i)
            T1jija(j,i,j1,a)*= -0.125
#bgn_debug
#            T1jija(j,i,j1,a) *=1.0
#end_debug
            Tjija(j,i,j1,a) += T1jija(j,i,j1,a)

            DO b
               REQUEST Tau_ab(a,i,b,j)      b
               REQUEST L2old_ab(i,a,j,b)    b
               REQUEST Vibja_abba(i,b,j1,a) b
               GET t1b_old(b,j1)
               GET t1b_old(b,j)
               GET l1b_old(j1,b)

               REQUEST Tau_ab_x(a,i,b,j)      b
               REQUEST L2old_ab_x(i,a,j,b)    b
               REQUEST Vibja_abba_x(i,b,j1,a) b
               GET t1b_old_x(b,j1)
               GET t1b_old_x(b,j)
               GET l1b_old_x(j1,b)

               T1jija(j,i,j1,a) = Tau_ab(a,i,b,j)*l1b_old_x(j1,b)
               T1jija(j,i,j1,a)*= -0.125
#bgn_debug
#               T1jija(j,i,j1,a) *=1.0
#end_debug
               Tjija(j,i,j1,a) += T1jija(j,i,j1,a)

# DAKIJ_X begins
               T1ajij(a,j,i,j1) = Tau_ab_x(a,i,b,j)*l1b_old(j1,b)
               T1ajij(a,j,i,j1)*= -0.125
#bgn_debug
#               T1ajij(a,j,i,j1) *=1.0
#end_debug
               Tajij(a,j,i,j1) += T1ajij(a,j,i,j1)
#
               T1ajij(a,j,i,j1) = L2old_ab(i,a,j,b)*t1b_old_x(b,j1)
               T1ajij(a,j,i,j1)*= -0.125
#bgn_debug
#               T1ajij(a,j,i,j1) *=1.0
#end_debug
               Tajij(a,j,i,j1) += T1ajij(a,j,i,j1)
# DAKIJ_X ends

               T1jija(j,i,j1,a) = L2old_ab_x(i,a,j,b)*t1b_old(b,j1)
               T1jija(j,i,j1,a)*= -0.125
#bgn_debug
#               T1jija(j,i,j1,a) *=1.0
#end_debug
               Tjija(j,i,j1,a) += T1jija(j,i,j1,a)

               T1jija(j,i,j1,a) = Vibja_abba(i,b,j1,a)*t1b_old_x(b,j)
               T1jija(j,i,j1,a)*= -0.25
#bgn_debug
#               T1jija(j,i,j1,a) *=1.0
#end_debug
               Tjija(j,i,j1,a) += T1jija(j,i,j1,a)

               T1jija(j,i,j1,a) = Vibja_abba_x(i,b,j1,a)*t1b_old(b,j)
               T1jija(j,i,j1,a)*= -0.25
#bgn_debug
#               T1jija(j,i,j1,a) *=1.0
#end_debug
               Tjija(j,i,j1,a) += T1jija(j,i,j1,a)

            ENDDO b
            DO i1
               REQUEST Vijmn_abab(i,j,i1,j1) i1
               GET t1a_old(a,i1)

               REQUEST Vijmn_abab_x(i,j,i1,j1) i1
               GET t1a_old_x(a,i1)

               T1jija(j,i,j1,a) = Vijmn_abab(i,j,i1,j1)*t1a_old_x(a,i1)
               T1jija(j,i,j1,a)*= 0.125
#bgn_debug
#               T1jija(j,i,j1,a) *=1.0
#end_debug
               Tjija(j,i,j1,a) += T1jija(j,i,j1,a)

               T1jija(j,i,j1,a) = Vijmn_abab_x(i,j,i1,j1)*t1a_old(a,i1)
               T1jija(j,i,j1,a)*= 0.125
#bgn_debug
#               T1jija(j,i,j1,a) *=1.0
#end_debug
               Tjija(j,i,j1,a) += T1jija(j,i,j1,a)
            ENDDO i1
            DO a1
               REQUEST Vibja_baba(j,a1,j1,a) a1
               GET t1a_old(a1,i)
               REQUEST Vibja_baba_x(j,a1,j1,a) a1
               GET t1a_old_x(a1,i)
               T1jija(j,i,j1,a) = Vibja_baba(j,a1,j1,a)*t1a_old_x(a1,i)
               T1jija(j,i,j1,a)*= 0.25
#bgn_debug
#               T1jija(j,i,j1,a) *=1.0
#end_debug
               Tjija(j,i,j1,a) += T1jija(j,i,j1,a)

               T1jija(j,i,j1,a) = Vibja_baba_x(j,a1,j1,a)*t1a_old(a1,i)
               T1jija(j,i,j1,a)*= 0.25
#bgn_debug
#               T1jija(j,i,j1,a) *=1.0
#end_debug
               Tjija(j,i,j1,a) += T1jija(j,i,j1,a)
            ENDDO a1

           T1AHjija(j,i,j1,a)   = Tajij(a,j,i,j1)
           T1AHjija(j,i,j1,a)  *= Fact
           Tjija(j,i,j1,a)     += T1AHjija(j,i,j1,a)

# Multiply by 4 to match aces 
#bgn_debug
#           Tjija(j,i,j1,a) *= 4.0 
#           PREPARE Dijka_baba_x(j,i,j1,a) += Tjija(j,i,j1,a) 
#end_debug
#                                                                   ++
#  Two particle contribution to G-tensor: O(pq,rs)*<BA|S_z(1)+2S_z(2)pqsr|BA>
#  DABAB = -1/2 DABAB + DABAB

            DO sigma

               Tjija(j,i,j1,a)  *= 0.5
#bgn_debug               
#               Tjija(j,i,j1,a)  *= 0.5
#               Tjija(j,i,j1,a)  *= 1.0
#end_debug
               Tjijx(j,i,j1,sigma)      = Tjija(j,i,j1,a)*ca(sigma,a)
               PREPARE Djijx_x(j,i,j1,sigma) += Tjijx(j,i,j1,sigma)
            ENDDO sigma
      ENDPARDO j, i, j1, a
      execute server_barrier

      PARDO j, i1, lambda, sigma
            Tijxx(i1,j,sigma,lambda) = 0.0
            DO j2
               REQUEST Djijx_x(j,i1,j2,lambda) j
               T1ijxx(i1,j,sigma,lambda) = Djijx_x(j,i1,j2,lambda)*cb(sigma,j2)
               Tijxx(i1,j,sigma,lambda) += T1ijxx(i1,j,sigma,lambda)
            ENDDO j2
            Tijxx(i1,j,sigma,lambda)         *= 8.0
            PREPARE Dijxx_x(i1,j,sigma,lambda) += Tijxx(i1,j,sigma,lambda)
      ENDPARDO j, i1, lambda, sigma
     execute server_barrier
#
# Done Backtransformation 
#bgn_debug
#      esuma   = 0.0
#      ecorraa = 0.0
#      PARDO i1,j,sigma,lambda            
#            request Dijxx_x(i1,j,sigma,lambda) lambda
#            etemp = Dijxx_x(i1,j,sigma,lambda)*Dijxx_x(i1,j,sigma,lambda)
#            esuma += etemp
#      ENDPARDO i1,j,sigma,lambda         
#      execute sip_barrier
#      execute server_barrier
#      collective ecorraa += esuma
#      execute print_scalar ecorraa
#enddebug

      ENDPROC DIJKABABA_X
#     -------------------
#------------------------------------------------------------------
      PROC DIJKA_X
           CALL DIJKAAAAA_X
           CALL DIJKAABAB_X
           CALL DIJKABABA_X
           CALL DIJKABBBB_X
      ENDPROC DIJKA_X
#-----------------------------------------------------------------
# In this superprocedure the particle-particle block of the relaxed density 
# matrix is computed. The expressions programmed are: 
# 
# D_{ab} = 1/4 P_+(ab) t^{ae}_{mn} \lambda^{mn}_{be}  
#        + 1/4 P_+(ab) t^{aE}_{mN} \lambda^{mN}_{bE}  
#        + 1/2 P_+(ab) t^{a}_{m} \lambda^{m}_{b} 
#
# D_{AB} = D_{ab} [a<-->A, b<-->B, i<-->I, j<-->J, m<-->M, n<-->N] 
#
      PROC DABA 
      PARDO a, a1, i  
            GET t1a_old(a,i) 
            GET l1a_old(i,a1) 

            Taa(a,a1)        = t1a_old(a,i)*l1a_old(i,a1) 
            Taa(a,a1)       *= 0.5 
            T1aa(a1,a)       = Taa(a,a1)  

            PUT Dab_a(a,a1) += Taa(a,a1) 
            PUT Dab_a(a1,a) += T1aa(a1,a) 
            DO a2 
            DO i1 
               REQUEST T2old_aa(a,i,a2,i1)  i1  
               REQUEST L2old_aa(i,a1,i1,a2) i1  

               Taa(a,a1)        = T2old_aa(a,i,a2,i1)*L2old_aa(i,a1,i1,a2)
               Taa(a,a1)       *= 0.25 
               T1aa(a1,a)       = Taa(a,a1)  

               PUT Dab_a(a,a1) += Taa(a,a1) 
               PUT Dab_a(a1,a) += T1aa(a1,a) 
            ENDDO i1 
            ENDDO a2 
            DO b 
            DO j 
               REQUEST T2old_ab(a,i,b,j)  j  
               REQUEST L2old_ab(i,a1,j,b) j  

               Taa(a,a1)        = T2old_ab(a,i,b,j)*L2old_ab(i,a1,j,b)
               Taa(a,a1)       *= 0.5 
               T1aa(a1,a)       = Taa(a,a1)  

               PUT Dab_a(a,a1) += Taa(a,a1) 
               PUT Dab_a(a1,a) += T1aa(a1,a) 
            ENDDO j 
            ENDDO b 
      ENDPARDO a, a1, i  
      ENDPROC DABA 
#......................................................................
      PROC DABB 
      PARDO b1, b, j  
            GET t1b_old(b1,j) 
            GET l1b_old(j,b) 

            Tbb(b1,b)        = t1b_old(b1,j)*l1b_old(j,b) 
            Tbb(b1,b)       *= 0.5 
            T1bb(b,b1)       = Tbb(b1,b)  

            PUT Dab_b(b1,b) += Tbb(b1,b) 
            PUT Dab_b(b,b1) += T1bb(b,b1) 

            DO b2 
            DO j1 
               REQUEST T2old_bb(b1,j,b2,j1) j1  
               REQUEST L2old_bb(j,b,j1,b2)  j1  

               Tbb(b1,b)        = T2old_bb(b1,j,b2,j1)*L2old_bb(j,b,j1,b2)
               Tbb(b1,b)       *= 0.25 
               T1bb(b,b1)       = Tbb(b1,b)  

               PUT Dab_b(b1,b) += Tbb(b1,b) 
               PUT Dab_b(b,b1) += T1bb(b,b1) 
            ENDDO j1 
            ENDDO b2 
            DO a 
            DO i 
               REQUEST T2old_ab(a,i,b1,j) i  
               REQUEST L2old_ab(i,a,j,b)  i  

               Tbb(b1,b)        = T2old_ab(a,i,b1,j)*L2old_ab(i,a,j,b)
               Tbb(b1,b)       *= 0.5 
               T1bb(b,b1)       = Tbb(b1,b)  

               PUT Dab_b(b1,b) += Tbb(b1,b) 
               PUT Dab_b(b,b1) += T1bb(b,b1) 
            ENDDO i 
            ENDDO a 
      ENDPARDO b1, b, j  
      ENDPROC DABB 
#.............................................................................
      PROC DAB 
           CALL DABA 
           CALL DABB 
      ENDPROC DAB 
#____________________________________________________________________________ 
      PROC DABA_x
      PARDO a, a1, i
            GET t1a_old(a,i)
            GET l1a_old(i,a1)

            GET t1a_old_x(a,i)
            GET l1a_old_x(i,a1)

            Taa(a,a1)        = t1a_old(a,i)*l1a_old_x(i,a1)
            Taa(a,a1)       *= 0.5
            T1aa(a1,a)       = Taa(a,a1)

            PUT Dab_a_x(a,a1) += Taa(a,a1)
            PUT Dab_a_x(a1,a) += T1aa(a1,a)

            Taa(a,a1)        = t1a_old_x(a,i)*l1a_old(i,a1)
            Taa(a,a1)       *= 0.5
            T1aa(a1,a)       = Taa(a,a1)

            PUT Dab_a_x(a,a1) += Taa(a,a1)
            PUT Dab_a_x(a1,a) += T1aa(a1,a)

            DO a2
            DO i1
               REQUEST T2old_aa(a,i,a2,i1)  i1
               REQUEST L2old_aa(i,a1,i1,a2) i1

               REQUEST T2old_aa(a,i,a2,i1)  i1
               REQUEST L2old_aa(i,a1,i1,a2) i1

               Taa(a,a1)        = T2old_aa(a,i,a2,i1)*L2old_aa_x(i,a1,i1,a2)
               Taa(a,a1)       *= 0.25
               T1aa(a1,a)       = Taa(a,a1)

               PUT Dab_a_x(a,a1) += Taa(a,a1)
               PUT Dab_a_x(a1,a) += T1aa(a1,a)

               Taa(a,a1)        = T2old_aa_x(a,i,a2,i1)*L2old_aa(i,a1,i1,a2)
               Taa(a,a1)       *= 0.25
               T1aa(a1,a)       = Taa(a,a1)
            
               PUT Dab_a_x(a,a1) += Taa(a,a1)
               PUT Dab_a_x(a1,a) += T1aa(a1,a)
            ENDDO i1
            ENDDO a2
            DO b
            DO j
               REQUEST T2old_ab(a,i,b,j)  j
               REQUEST L2old_ab(i,a1,j,b) j

               REQUEST T2old_ab_x(a,i,b,j)  j
               REQUEST L2old_ab_x(i,a1,j,b) j

               Taa(a,a1)        = T2old_ab(a,i,b,j)*L2old_ab_x(i,a1,j,b)
               Taa(a,a1)       *= 0.5
               T1aa(a1,a)       = Taa(a,a1)

               Taa(a,a1)        = T2old_ab_x(a,i,b,j)*L2old_ab(i,a1,j,b)
               Taa(a,a1)       *= 0.5
               T1aa(a1,a)       = Taa(a,a1)

               PUT Dab_a_x(a,a1) += Taa(a,a1)
               PUT Dab_a_x(a1,a) += T1aa(a1,a)
            ENDDO j
            ENDDO b
      ENDPARDO a, a1, i
      ENDPROC DABA_x
#........................................................................
      PROC DABB_x
      PARDO b1, b, j 
            GET t1b_old(b1,j)
            GET l1b_old(j,b)

            GET t1b_old_x(b1,j)
            GET l1b_old_x(j,b)

            Tbb(b1,b)        = t1b_old(b1,j)*l1b_old_x(j,b)
            Tbb(b1,b)       *= 0.5
            T1bb(b,b1)       = Tbb(b1,b)

            PUT Dab_b_x(b1,b) += Tbb(b1,b)
            PUT Dab_b_x(b,b1) += T1bb(b,b1)

            Tbb(b1,b)        = t1b_old_x(b1,j)*l1b_old(j,b)
            Tbb(b1,b)       *= 0.5
            T1bb(b,b1)       = Tbb(b1,b)

            PUT Dab_b_x(b1,b) += Tbb(b1,b)
            PUT Dab_b_x(b,b1) += T1bb(b,b1)

            DO b2
            DO j1
               REQUEST T2old_bb(b1,j,b2,j1) j1
               REQUEST L2old_bb(j,b,j1,b2)  j1

               REQUEST T2old_bb_x(b1,j,b2,j1) j1
               REQUEST L2old_bb_x(j,b,j1,b2)  j1

               Tbb(b1,b)        = T2old_bb(b1,j,b2,j1)*L2old_bb_x(j,b,j1,b2)
               Tbb(b1,b)       *= 0.25
               T1bb(b,b1)       = Tbb(b1,b)

               PUT Dab_b_x(b1,b) += Tbb(b1,b)
               PUT Dab_b_x(b,b1) += T1bb(b,b1)

               Tbb(b1,b)        = T2old_bb_x(b1,j,b2,j1)*L2old_bb(j,b,j1,b2)
               Tbb(b1,b)       *= 0.25
               T1bb(b,b1)       = Tbb(b1,b)
            
               PUT Dab_b_x(b1,b) += Tbb(b1,b)
               PUT Dab_b_x(b,b1) += T1bb(b,b1)
            ENDDO j1
            ENDDO b2
            DO a
            DO i
               REQUEST T2old_ab(a,i,b1,j) i
               REQUEST L2old_ab(i,a,j,b)  i

               REQUEST T2old_ab_x(a,i,b1,j) i
               REQUEST L2old_ab_x(i,a,j,b)  i

               Tbb(b1,b)        = T2old_ab(a,i,b1,j)*L2old_ab_x(i,a,j,b)
               Tbb(b1,b)       *= 0.5
               T1bb(b,b1)       = Tbb(b1,b)

               PUT Dab_b_x(b1,b) += Tbb(b1,b)
               PUT Dab_b_x(b,b1) += T1bb(b,b1)

               Tbb(b1,b)        = T2old_ab_x(a,i,b1,j)*L2old_ab(i,a,j,b)
               Tbb(b1,b)       *= 0.5
               T1bb(b,b1)       = Tbb(b1,b)

               PUT Dab_b_x(b1,b) += Tbb(b1,b)
               PUT Dab_b_x(b,b1) += T1bb(b,b1)
            ENDDO i
            ENDDO a
      ENDPARDO b1, b, j 
      ENDPROC DABB_x
#.............................................................................
      PROC DAB_x
           CALL DABA_x
           CALL DABB_x
      ENDPROC DAB_x
#_____________________________________________________________________________
# In this superprocedure the occupied-occupied block of the relaxed
# density matrix is computed. The expressions programmed are:
# D_{ij} = -1/4 P_+(ij) t^{ef}_{im} \lambda^{jm}_{ef} 
#          -1/4 P_+(ij) t^{eF}_{iM} \lambda^{jM}_{eF}   
#          -1/2 P_+(ij) t^{e}_{i} \lambda^{j}_{e}   
#
# D_{IJ} = D_{ij} [i<-->I, j<-->J, e<-->E, f<-->F] 
# --------------------------------------------------------------------------- 
      PROC DIJA 
      PARDO a, a1, i, i2 
            REQUEST T2old_aa(a,i,a1,i2) a  
            DO i1 
               REQUEST L2old_aa(i1,a,i2,a1) i1  
               Tii(i,i1)        = T2old_aa(a,i,a1,i2)*L2old_aa(i1,a,i2,a1) 
               Tii(i,i1)       *= -0.25   
               T1ii(i1,i)       = Tii(i,i1) 
               PUT Dij_a(i,i1) += Tii(i,i1) 
               PUT Dij_a(i1,i) += T1ii(i1,i) 
            ENDDO i1 
      ENDPARDO a, a1, i, i2 
      PARDO a, b, i, j 
            REQUEST T2old_ab(a,i,b,j) a  
            DO i1 
               REQUEST L2old_ab(i1,a,j,b) i1  
               Tii(i,i1)        = T2old_ab(a,i,b,j)*L2old_ab(i1,a,j,b) 
               Tii(i,i1)       *= -0.5   
               T1ii(i1,i)       = Tii(i,i1) 
               PUT Dij_a(i,i1) += Tii(i,i1) 
               PUT Dij_a(i1,i) += T1ii(i1,i) 
            ENDDO i1 
      ENDPARDO a, b, i, j 
      PARDO a, i, i1  
            GET t1a_old(a,i) 
            GET l1a_old(i1,a) 
            Tii(i,i1)        = t1a_old(a,i)*l1a_old(i1,a) 
            Tii(i,i1)       *= -0.5   
            T1ii(i1,i)       = Tii(i,i1) 
            PUT Dij_a(i,i1) += Tii(i,i1) 
            PUT Dij_a(i1,i) += T1ii(i1,i) 
      ENDPARDO a, i, i1  
      ENDPROC DIJA 
#...................................................................
      PROC DIJB 
      PARDO b, b1, j, j2 
            REQUEST L2old_bb(j,b,j2,b1) b  
            DO j1 
               REQUEST T2old_bb(b,j1,b1,j2) j1  
               Tjj(j1,j)        = T2old_bb(b,j1,b1,j2)*L2old_bb(j,b,j2,b1) 
               Tjj(j1,j)       *= -0.25   
               T1jj(j,j1)       = Tjj(j1,j) 
               PUT Dij_b(j1,j) += Tjj(j1,j) 
               PUT Dij_b(j,j1) += T1jj(j,j1) 
            ENDDO j1 
      ENDPARDO b, b1, j, j2 
      PARDO b, a, j, i 
            REQUEST L2old_ab(i,a,j,b) b  
            DO j1 
               REQUEST T2old_ab(a,i,b,j1) j1  
               Tjj(j1,j)        = T2old_ab(a,i,b,j1)*L2old_ab(i,a,j,b) 
               Tjj(j1,j)       *= -0.5   
               T1jj(j,j1)       = Tjj(j1,j) 
               PUT Dij_b(j1,j) += Tjj(j1,j) 
               PUT Dij_b(j,j1) += T1jj(j,j1) 
            ENDDO j1 
      ENDPARDO b, a, j, i 
      PARDO b, j, j1  
            GET t1b_old(b,j1) 
            GET l1b_old(j,b) 
            Tjj(j1,j)        = t1b_old(b,j1)*l1b_old(j,b) 
            Tjj(j1,j)       *= -0.5   
            T1jj(j,j1)       = Tjj(j1,j) 
            PUT Dij_b(j1,j) += Tjj(j1,j) 
            PUT Dij_b(j,j1) += T1jj(j,j1) 
      ENDPARDO b, j, j1  
      ENDPROC DIJB 
#---------------------------------------------------------------
      PROC DIJ 
           CALL DIJA 
           CALL DIJB 
      ENDPROC DIJ 
#---------------------------------------------------------------
     PROC DIJA_X
      PARDO a, a1, i, i2
            REQUEST T2old_aa(a,i,a1,i2) a
            REQUEST T2old_aa_x(a,i,a1,i2) a
            DO i1
               REQUEST L2old_aa(i1,a,i2,a1) i1
               REQUEST L2old_aa_x(i1,a,i2,a1) i1
               Tii(i,i1)        = T2old_aa(a,i,a1,i2)*L2old_aa_x(i1,a,i2,a1)
               Tii(i,i1)       *= -0.25
               T1ii(i1,i)       = Tii(i,i1)
               PUT Dij_a_x(i,i1) += Tii(i,i1)
               PUT Dij_a_x(i1,i) += T1ii(i1,i)
               Tii(i,i1)        = T2old_aa_x(a,i,a1,i2)*L2old_aa(i1,a,i2,a1)
               Tii(i,i1)       *= -0.25
               T1ii(i1,i)       = Tii(i,i1)
               PUT Dij_a_x(i,i1) += Tii(i,i1)   
               PUT Dij_a_x(i1,i) += T1ii(i1,i)
            ENDDO i1
      ENDPARDO a, a1, i, i2
      PARDO a, b, i, j
            REQUEST T2old_ab(a,i,b,j) a
            REQUEST T2old_ab_x(a,i,b,j) a 
            DO i1
               REQUEST L2old_ab(i1,a,j,b) i1
               REQUEST L2old_ab_x(i1,a,j,b) i1
               Tii(i,i1)        = T2old_ab(a,i,b,j)*L2old_ab_x(i1,a,j,b)
               Tii(i,i1)       *= -0.5
               T1ii(i1,i)       = Tii(i,i1)
               PUT Dij_a_x(i,i1) += Tii(i,i1)
               PUT Dij_a_x(i1,i) += T1ii(i1,i)
               Tii(i,i1)        = T2old_ab_x(a,i,b,j)*L2old_ab(i1,a,j,b)
               Tii(i,i1)       *= -0.5
               T1ii(i1,i)       = Tii(i,i1)
               PUT Dij_a_x(i,i1) += Tii(i,i1)   
               PUT Dij_a_x(i1,i) += T1ii(i1,i)
            ENDDO i1
      ENDPARDO a, b, i, j
      PARDO a, i, i1
            GET t1a_old(a,i)
            GET l1a_old(i1,a)
            GET t1a_old_x(a,i)
            GET l1a_old_x(i1,a)
            Tii(i,i1)        = t1a_old(a,i)*l1a_old_x(i1,a)
            Tii(i,i1)       *= -0.5
            T1ii(i1,i)       = Tii(i,i1)
            PUT Dij_a_x(i,i1) += Tii(i,i1)
            PUT Dij_a_x(i1,i) += T1ii(i1,i)
            Tii(i,i1)        = t1a_old_x(a,i)*l1a_old(i1,a)
            Tii(i,i1)       *= -0.5
            T1ii(i1,i)       = Tii(i,i1)
            PUT Dij_a_x(i,i1) += Tii(i,i1)
            PUT Dij_a_x(i1,i) += T1ii(i1,i)
      ENDPARDO a, i, i1
      ENDPROC DIJA_X
#............................................................................
      PROC DIJB_X
      PARDO b, b1, j, j2
            REQUEST L2old_bb(j,b,j2,b1) b 
            REQUEST L2old_bb_x(j,b,j2,b1) b
            DO j1
               REQUEST T2old_bb(b,j1,b1,j2) j1
               REQUEST T2old_bb_x(b,j1,b1,j2) j1
               Tjj(j1,j)        = T2old_bb(b,j1,b1,j2)*L2old_bb_x(j,b,j2,b1)
               Tjj(j1,j)       *= -0.25  
               T1jj(j,j1)       = Tjj(j1,j)
               PUT Dij_b_x(j1,j) += Tjj(j1,j)
               PUT Dij_b_x(j,j1) += T1jj(j,j1)
               Tjj(j1,j)        = T2old_bb_x(b,j1,b1,j2)*L2old_bb(j,b,j2,b1)
               Tjj(j1,j)       *= -0.25
               T1jj(j,j1)       = Tjj(j1,j)     
               PUT Dij_b_x(j1,j) += Tjj(j1,j)
               PUT Dij_b_x(j,j1) += T1jj(j,j1)
            ENDDO j1
      ENDPARDO b, b1, j, j2
      PARDO b, a, j, i
            REQUEST L2old_ab(i,a,j,b) b 
            REQUEST L2old_ab_x(i,a,j,b) b
            DO j1
               REQUEST T2old_ab(a,i,b,j1) j1 
               REQUEST T2old_ab_x(a,i,b,j1) j1
               Tjj(j1,j)        = T2old_ab(a,i,b,j1)*L2old_ab_x(i,a,j,b)
               Tjj(j1,j)       *= -0.5  
               T1jj(j,j1)       = Tjj(j1,j)
               PUT Dij_b_x(j1,j) += Tjj(j1,j)
               PUT Dij_b_x(j,j1) += T1jj(j,j1)

               Tjj(j1,j)          = T2old_ab_x(a,i,b,j1)*L2old_ab(i,a,j,b)
               Tjj(j1,j)         *= -0.5
               T1jj(j,j1)         = Tjj(j1,j)     
               PUT Dij_b_x(j1,j) += Tjj(j1,j)
               PUT Dij_b_x(j,j1) += T1jj(j,j1)
            ENDDO j1
      ENDPARDO b, a, j, i
      PARDO b, j, j1 
            GET t1b_old(b,j1)
            GET l1b_old(j,b)
            GET t1b_old_x(b,j1)
            GET l1b_old_x(j,b)

            Tjj(j1,j)        = t1b_old(b,j1)*l1b_old_x(j,b)
            Tjj(j1,j)       *= -0.5
            T1jj(j,j1)       = Tjj(j1,j)
            PUT Dij_b_x(j1,j) += Tjj(j1,j)
            PUT Dij_b_x(j,j1) += T1jj(j,j1)

            Tjj(j1,j)        = t1b_old_x(b,j1)*l1b_old(j,b)
            Tjj(j1,j)       *= -0.5
            T1jj(j,j1)       = Tjj(j1,j)
            PUT Dij_b_x(j1,j) += Tjj(j1,j)
            PUT Dij_b_x(j,j1) += T1jj(j,j1)
      ENDPARDO b, j, j1
      ENDPROC DIJB_X
#---------------------------------------------------------------
      PROC DIJ_X
           CALL DIJA_X
           CALL DIJB_X
      ENDPROC DIJ_X 
#---------------------------------------------------------------
     PROC DPQRSTODXXXX
#    ------------------
#
#    Form Half back transformed cluster array AAAA spin case
#    -------------------------------------------------------
#
     PARDO a, a1, i, i1
#
           REQUEST Tau_aa(a,i,a1,i1) a
#
           DO lambda
#
              Zaa(lambda,i,a1,i1)  = Tau_aa(a,i,a1,i1)*ca(lambda,a)
#
              DO sigma
#
                 ZZaa(lambda,i,sigma,i1)        = Zaa(lambda,i,a1,i1)*ca(sigma,a1)
                 PREPARE TAO_aa(lambda,i,sigma,i1) += ZZaa(lambda,i,sigma,i1)
#
              ENDDO sigma
#
           ENDDO lambda
#
     ENDPARDO a, a1, i, i1
#
#    Form Half back transformed lambda array AAAA spin case
#    ------------------------------------------------------
#
     PARDO a, a1, i, i1
#
           REQUEST L2old_aa(i,a,i1,a1) a
#
           DO lambda
#
              Qaa(i,lambda,i1,a1) = L2old_aa(i,a,i1,a1)*ca(lambda,a)
#
              DO sigma
#
                 QQaa(i,lambda,i1,sigma)        = Qaa(i,lambda,i1,a1)*ca(sigma,a1)
                 PREPARE LAO_aa(i,lambda,i1,sigma) += QQaa(i,lambda,i1,sigma)
#
              ENDDO sigma
#
           ENDDO lambda
#
     ENDPARDO a, a1, i, i1
     execute server_barrier

#    Form Half back transformed cluster array BBBB spin case
#    -------------------------------------------------------
#
     PARDO b, b1, j, j1
# 
           REQUEST Tau_bb(b,j,b1,j1) b
#
           DO lambda
#
              Zbb(lambda,j,b1,j1) = Tau_bb(b,j,b1,j1)*cb(lambda,b)
#
              DO sigma
#
                 ZZbb(lambda,j,sigma,j1)        = Zbb(lambda,j,b1,j1)*cb(sigma,b1)
                 PREPARE TAO_bb(lambda,j,sigma,j1) += ZZbb(lambda,j,sigma,j1)
#
              ENDDO sigma
#
           ENDDO lambda
#
     ENDPARDO b, b1, j, j1

#    Form Half back transformed lambda array BBBB spin case
#    ------------------------------------------------------
#
     PARDO b, b1, j, j1
#
           REQUEST L2old_bb(j,b,j1,b1) b
           REQUEST L2old_bb(j,b1,j1,b) b
           Tjbjb(j,b,j1,b1)    = L2old_bb(j,b1,j1,b)
           Tjbjb(j,b,j1,b1)   -= L2old_bb(j,b,j1,b1)
           Tjbjb(j,b,j1,b1)   *= -1.0
#
           DO lambda
#
              Qbb(j,lambda,j1,b1) = L2old_bb(j,b,j1,b1)*cb(lambda,b)
#
              DO sigma
#
                 QQbb(j,lambda,j1,sigma)        = Qbb(j,lambda,j1,b1)*cb(sigma,b1)
                 PREPARE LAO_bb(j,lambda,j1,sigma) += QQbb(j,lambda,j1,sigma)
#
              ENDDO sigma
#
           ENDDO lambda
#
     ENDPARDO b, b1, j, j1
     execute server_barrier
#    Form Half back transformed cluster array ABAB spin case
#    -------------------------------------------------------
#
     PARDO a, b, i, j
#
           REQUEST Tau_ab(a,i,b,j) j
#
           DO lambda
#
              Zab(lambda,i,b,j) = Tau_ab(a,i,b,j)*ca(lambda,a)
#
              DO sigma
#
                 ZZab(lambda,i,sigma,j)        = Zab(lambda,i,b,j)*cb(sigma,b)
                 PREPARE TAO_ab(lambda,i,sigma,j) += ZZab(lambda,i,sigma,j)
#
              ENDDO sigma
#
           ENDDO lambda
#
     ENDPARDO a, b, i, j
#
#    Form Half back transformed lambda array ABAB spin case
#    ------------------------------------------------------
#
     PARDO a, b, i, j
#
           REQUEST L2old_ab(i,a,j,b) a
#
           DO lambda
#
              Qab(i,lambda,j,b) = L2old_ab(i,a,j,b)*ca(lambda,a)
#
              DO sigma
#
                 QQab(i,lambda,j,sigma)        = Qab(i,lambda,j,b)*cb(sigma,b)
                 PREPARE LAO_ab(i,lambda,j,sigma) += QQab(i,lambda,j,sigma)
#
              ENDDO sigma
#
           ENDDO lambda
#
     ENDPARDO a, b, i, j
     execute server_barrier

     ENDPROC DPQRSTODXXXX
# -----------------------------------------------------------------------------
     PROC DPQRSTODXXXX_X
#    -------------------
     PARDO lambda,i,sigma,i1 
           ZZaa(lambda,i,sigma,i1) = 0.0
           QQaa(i,lambda,i1,sigma) = 0.0
           PREPARE TAO_aa_x(lambda,i,sigma,i1) = ZZaa(lambda,i,sigma,i1)
           PREPARE LAO_aa_x(i,lambda,i1,sigma) = QQaa(i,lambda,i1,sigma)
     ENDPARDO lambda,i,sigma,i1 

     PARDO lambda,j,sigma,j1
           ZZbb(lambda,j,sigma,j1) = 0.0
           QQbb(j,lambda,j1,sigma) = 0.0
           PREPARE TAO_bb_x(lambda,j,sigma,j1) =  ZZbb(lambda,j,sigma,j1)
           PREPARE LAO_bb_x(j,lambda,j1,sigma) = QQbb(j,lambda,j1,sigma)
     ENDPARDO lambda,j,sigma,j1

     PARDO lambda,i,sigma,j
           ZZab(lambda,i,sigma,j) = 0.0
           QQab(i,lambda,j,sigma) = 0.0
           PREPARE TAO_ab_x(lambda,i,sigma,j) = ZZab(lambda,i,sigma,j) 
           PREPARE LAO_ab_x(i,lambda,j,sigma) = QQab(i,lambda,j,sigma)
     ENDPARDO lambda,i,sigma,j

     EXECUTE SERVER_BARRIER

     PARDO a, a1, i, i1
           REQUEST Tau_aa_x(a,i,a1,i1) a
           DO lambda
              Zaa(lambda,i,a1,i1)  = Tau_aa_x(a,i,a1,i1)*ca(lambda,a)
              DO sigma
                 ZZaa(lambda,i,sigma,i1)        = Zaa(lambda,i,a1,i1)*ca(sigma,a1)
                 PREPARE TAO_aa_x(lambda,i,sigma,i1) += ZZaa(lambda,i,sigma,i1)
              ENDDO sigma
           ENDDO lambda
     ENDPARDO a, a1, i, i1

#    Form Half back transformed lambda array AAAA spin case 
     PARDO a, a1, i, i1
           REQUEST L2old_aa_x(i,a,i1,a1) a
           DO lambda
              Qaa(i,lambda,i1,a1) = L2old_aa_x(i,a,i1,a1)*ca(lambda,a)
              DO sigma
                 QQaa(i,lambda,i1,sigma)        = Qaa(i,lambda,i1,a1)*ca(sigma,a1)
                 PREPARE LAO_aa_x(i,lambda,i1,sigma) += QQaa(i,lambda,i1,sigma)
              ENDDO sigma
           ENDDO lambda
     ENDPARDO a, a1, i, i1
     execute server_barrier

#    Form Half back transformed cluster array BBBB spin case 
     PARDO b, b1, j, j1
           REQUEST Tau_bb_x(b,j,b1,j1) b
           DO lambda
              Zbb(lambda,j,b1,j1) = Tau_bb_x(b,j,b1,j1)*cb(lambda,b)
              DO sigma
                 ZZbb(lambda,j,sigma,j1)        = Zbb(lambda,j,b1,j1)*cb(sigma,b1)
                 PREPARE TAO_bb_x(lambda,j,sigma,j1) += ZZbb(lambda,j,sigma,j1)
              ENDDO sigma
           ENDDO lambda
     ENDPARDO b, b1, j, j1

#    Form Half back transformed lambda array BBBB spin case 
     PARDO b, b1, j, j1
           REQUEST L2old_bb_x(j,b,j1,b1) b

           DO lambda
              Qbb(j,lambda,j1,b1) = L2old_bb_x(j,b,j1,b1)*cb(lambda,b)
              DO sigma
                 QQbb(j,lambda,j1,sigma)        = Qbb(j,lambda,j1,b1)*cb(sigma,b1)
                 PREPARE LAO_bb_x(j,lambda,j1,sigma) += QQbb(j,lambda,j1,sigma)
              ENDDO sigma
           ENDDO lambda
     ENDPARDO b, b1, j, j1
     execute server_barrier

#    Form Half back transformed cluster array ABAB spin case 
     PARDO a, b, i, j
           REQUEST Tau_ab_x(a,i,b,j) j
           DO lambda
              Zab(lambda,i,b,j) = Tau_ab_x(a,i,b,j)*ca(lambda,a)
              DO sigma
                 ZZab(lambda,i,sigma,j)        = Zab(lambda,i,b,j)*cb(sigma,b)
                 PREPARE TAO_ab_x(lambda,i,sigma,j) += ZZab(lambda,i,sigma,j)
              ENDDO sigma
           ENDDO lambda
     ENDPARDO a, b, i, j

#    Form Half back transformed lambda array ABAB spin case 
     PARDO a, b, i, j
           REQUEST L2old_ab_x(i,a,j,b) a
           DO lambda
              Qab(i,lambda,j,b) = L2old_ab_x(i,a,j,b)*ca(lambda,a)
              DO sigma
                 QQab(i,lambda,j,sigma)        = Qab(i,lambda,j,b)*cb(sigma,b)
                 PREPARE LAO_ab_x(i,lambda,j,sigma) += QQab(i,lambda,j,sigma)
              ENDDO sigma
           ENDDO lambda
     ENDPARDO a, b, i, j
     execute server_barrier
     ENDPROC DPQRSTODXXXX_X
#    ----------------------
#--------------------------------------------------------------------
      PROC HFDENS  
      PARDO mu, nu, i  
            Txi(nu,i)        = ca(nu,i) 
            Tpq(mu,nu)       = ca(mu,i)*Txi(nu,i)  
            PUT DhfA(mu,nu) += Tpq(mu,nu) 
      ENDPARDO mu, nu, i  
      PARDO mu, nu, j  
            Txj(nu,j)        = cb(nu,j) 
            Tpq(mu,nu)       = cb(mu,j)*Txj(nu,j)  
            PUT DhfB(mu,nu) += Tpq(mu,nu) 
      ENDPARDO mu, nu, j  
      ENDPROC HFDENS  

#______________________________________________________________________________

      PROC FORM_SPN_TOT_DENS
#     ----------------------

      PARDO mu, nu

            GET DhfA(mu,nu)
            GET DhfB(mu,nu)
            
            GET DpqA(mu,nu)  
            GET DpqB(mu,nu)  

            Tpq(mu,nu)  = DhfA(mu,nu)
            Tpq(mu,nu) -= DhfB(mu,nu)

            PUT HF_SPN_DEN(mu,nu) = Tpq(mu,nu)
            
            Tpq(mu,nu)  = DhfA(mu,nu)
            Tpq(mu,nu) += DpqA(mu,nu) 
            Tpq(mu,nu) -= DhfB(mu,nu) 
            Tpq(mu,nu) -= DpqB(mu,nu) 

            PUT COR_SPN_DEN(mu,nu) = Tpq(mu,nu)

            Tpq(mu,nu)  = DhfA(mu,nu)
            Tpq(mu,nu) += DhfB(mu,nu)

            PUT HF_TOT_DEN(mu,nu) = Tpq(mu,nu)

            Tpq(mu,nu)  = DhfA(mu,nu)
            Tpq(mu,nu) += DpqA(mu,nu) 
            Tpq(mu,nu) += DhfB(mu,nu) 
            Tpq(mu,nu) += DpqB(mu,nu) 

            PUT COR_TOT_DEN(mu,nu) = Tpq(mu,nu)

      ENDPARDO mu, nu
      execute sip_barrier 
#bgn_debug
     suma = 0.0
     sumb = 0.0
     do mu
     do nu 
        get  HF_SPN_DEN(mu,nu)
        get  HF_TOT_DEN(mu,nu)
        execute dump_amp COR_TOT_DEN(mu,nu)
        tmp =  HF_TOT_DEN(mu,nu)*HF_TOT_DEN(mu,nu)
        suma += tmp
        tmp = HF_SPN_DEN(mu,nu)*HF_SPN_DEN(mu,nu)
        sumb += tmp
     enddo nu
     enddo mu
     execute print_scalar suma
     execute print_scalar sumb
#end_debug
 
      ENDPROC FORM_SPN_TOT_DENS
#     -------------------------

      PROC PDCONT_HF
#     --------------
       E2GC_XX_INTMD = 0.0
       E2GC_XY_INTMD = 0.0
       E2GC_XZ_INTMD = 0.0
       E2GC_YX_INTMD = 0.0
       E2GC_YY_INTMD = 0.0
       E2GC_YZ_INTMD = 0.0
       E2GC_ZX_INTMD = 0.0
       E2GC_ZY_INTMD = 0.0
       E2GC_ZZ_INTMD = 0.0

       E2GC_XX_HF = 0.0
       E2GC_XY_HF = 0.0
       E2GC_XZ_HF = 0.0
       E2GC_YX_HF = 0.0
       E2GC_YY_HF = 0.0
       E2GC_YZ_HF = 0.0
       E2GC_ZX_HF = 0.0
       E2GC_ZY_HF = 0.0
       E2GC_ZZ_HF = 0.0
      
       PARDO mu, nu, lambda, sigma
#
            Txxxx(mu,nu,lambda,sigma) = 0.0

            REQUEST AO_2P_DSHIELD_XX(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_XY(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_XZ(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_YX(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_YY(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_YZ(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_ZX(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_ZY(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_ZZ(mu, lambda, nu, sigma) sigma

            GET DHFA(mu,lambda)
            GET DHFB(mu,lambda)
            GET DHFA(nu,sigma)
            GET DHFB(nu,sigma)

            GET DHFA(mu,nu)
            GET DHFA(lambda,sigma)
            GET DHFB(mu,nu)
            GET DHFB(lambda,sigma)
#
# Coulomb terms (Notice the negative sign in the 2nd and the
# third terms. That comes from the operator S_z(1)+2s_z(2).
#
            Txx(mu,lambda)             = DHFa(mu,lambda)
            T1xxxx(mu,nu,lambda,sigma) = Txx(mu,lambda)^DHFa(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 0.75
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)

            Txx(mu,lambda)             = DHFb(mu,lambda)
            T1xxxx(mu,nu,lambda,sigma) = Txx(mu,lambda)^DHFb(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 0.75
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)

            Txx(mu,lambda)             = DHFa(mu,lambda)
            T1xxxx(mu,nu,lambda,sigma) = Txx(mu,lambda)^DHFb(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 0.25
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)

            Txx(mu,lambda)             = DHFb(mu,lambda)
            T1xxxx(mu,nu,lambda,sigma) = Txx(mu,lambda)^DHFa(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 0.25
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)

# Exchange terms

            Txx(mu,sigma)              = DHFa(mu,sigma)
            T1xxxx(mu,nu,lambda,sigma) = Txx(mu,sigma)^DHFa(nu,lambda)
            T1xxxx(mu,nu,lambda,sigma)*= 0.75
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)

            Txx(mu,sigma)              = DHFb(mu,sigma)
            T1xxxx(mu,nu,lambda,sigma) = Txx(mu,sigma)^DHFb(nu,lambda)
            T1xxxx(mu,nu,lambda,sigma)*= 0.75
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)

            T1xxxx(mu,lambda,nu,sigma) = Txxxx(mu,nu,lambda,sigma)

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_XX(mu,lambda,nu,sigma)
            E2GC_XX_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_XY(mu,lambda,nu,sigma)
            E2GC_XY_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_XZ(mu,lambda,nu,sigma)
            E2GC_XZ_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_YX(mu,lambda,nu,sigma)
            E2GC_YX_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_YY(mu,lambda,nu,sigma)
            E2GC_YY_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_YZ(mu,lambda,nu,sigma)
            E2GC_YZ_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_ZX(mu,lambda,nu,sigma)
            E2GC_ZX_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_ZY(mu,lambda,nu,sigma)
            E2GC_ZY_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_ZZ(mu,lambda,nu,sigma)
            E2GC_ZZ_INTMD += tmp

      ENDPARDO mu, nu, lambda, sigma

      execute server_barrier

      COLLECTIVE E2GC_XX_HF += E2GC_XX_INTMD
      COLLECTIVE E2GC_XY_HF += E2GC_XY_INTMD
      COLLECTIVE E2GC_XZ_HF += E2GC_XZ_INTMD
      COLLECTIVE E2GC_YX_HF += E2GC_YX_INTMD
      COLLECTIVE E2GC_YY_HF += E2GC_YY_INTMD
      COLLECTIVE E2GC_YZ_HF += E2GC_YZ_INTMD
      COLLECTIVE E2GC_ZX_HF += E2GC_ZX_INTMD
      COLLECTIVE E2GC_ZY_HF += E2GC_ZY_INTMD
      COLLECTIVE E2GC_ZZ_HF += E2GC_ZZ_INTMD

      execute server_barrier

#bgn_debug
      execute print_scalar  E2GC_XX_HF
      execute print_scalar  E2GC_XY_HF
      execute print_scalar  E2GC_XZ_HF
      execute print_scalar  E2GC_YX_HF
      execute print_scalar  E2GC_YY_HF
      execute print_scalar  E2GC_YZ_HF
      execute print_scalar  E2GC_ZX_HF
      execute print_scalar  E2GC_ZY_HF
      execute print_scalar  E2GC_ZZ_HF
#end_debug

      E2GC_XX_SAVE = E2GC_XX_HF
      E2GC_YY_SAVE = E2GC_YY_HF
      E2GC_ZZ_SAVE = E2GC_ZZ_HF

      E2GC_XX_HF   = E2GC_YY_SAVE
      E2GC_XX_HF  += E2GC_ZZ_SAVE

      E2GC_YY_HF   = E2GC_XX_SAVE
      E2GC_YY_HF  += E2GC_ZZ_SAVE

      E2GC_ZZ_HF   = E2GC_XX_SAVE
      E2GC_ZZ_HF  += E2GC_YY_SAVE

#bgn_debug
      execute print_scalar  E2GC_XX_HF
      execute print_scalar  E2GC_YY_HF
      execute print_scalar  E2GC_ZZ_HF
#end_debug

      ENDPROC PDCONT_HF
#     -----------------
#--------------------------------------------------------------------
      PROC PDCONT
#     -----------
       E2GC_XX_INTMD = 0.0
       E2GC_XY_INTMD = 0.0
       E2GC_XZ_INTMD = 0.0
       E2GC_YX_INTMD = 0.0
       E2GC_YY_INTMD = 0.0
       E2GC_YZ_INTMD = 0.0
       E2GC_ZX_INTMD = 0.0
       E2GC_ZY_INTMD = 0.0
       E2GC_ZZ_INTMD = 0.0

       E2GC_XX = 0.0
       E2GC_XY = 0.0
       E2GC_XZ = 0.0
       E2GC_YX = 0.0
       E2GC_YY = 0.0
       E2GC_YZ = 0.0
       E2GC_ZX = 0.0
       E2GC_ZY = 0.0
       E2GC_ZZ = 0.0
      
       PARDO mu, nu, lambda, sigma
#
            Txxxx(mu,nu,lambda,sigma) = 0.0

            REQUEST AO_2P_DSHIELD_XX(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_XY(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_XZ(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_YX(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_YY(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_YZ(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_ZX(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_ZY(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_DSHIELD_ZZ(mu, lambda, nu, sigma) sigma

            GET DHFA(mu,lambda)
            GET DHFA(nu,sigma)
            GET DHFA(mu,sigma)
            GET DHFA(nu,lambda)
#
            GET DHFB(mu,lambda)
            GET DHFB(nu,sigma)
            GET DHFB(mu,sigma)
            GET DHFB(nu,lambda)
#
            GET DpqA(mu,lambda)
            GET DpqA(nu,sigma)
            GET DpqA(mu,sigma)
            GET DpqA(nu,lambda)
#
            GET DpqB(mu,lambda)
            GET DpqB(nu,sigma)
            GET DpqB(mu,sigma)
            GET DpqB(nu,lambda)
#
# Coulomb terms (Notice the negative sign in the 2nd and the
# third terms. That comes from the operator S_z(1)+2s_z(2).
#
            Txx(mu,lambda)             = DHFa(mu,lambda)
            T1xxxx(mu,nu,lambda,sigma) = Txx(mu,lambda)^DHFa(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 0.75
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)

            Txx(mu,lambda)             = DHFb(mu,lambda)
            T1xxxx(mu,nu,lambda,sigma) = Txx(mu,lambda)^DHFb(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 0.75
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)

            Txx(mu,lambda)             = DHFa(mu,lambda)
            T1xxxx(mu,nu,lambda,sigma) = Txx(mu,lambda)^DHFb(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 0.25
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)

            Txx(mu,lambda)             = DHFb(mu,lambda)
            T1xxxx(mu,nu,lambda,sigma) = Txx(mu,lambda)^DHFa(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 0.25
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)

# Exchange terms

            Txx(mu,sigma)              = DHFa(mu,sigma)
            T1xxxx(mu,nu,lambda,sigma) = Txx(mu,sigma)^DHFa(nu,lambda)
            T1xxxx(mu,nu,lambda,sigma)*= 0.75
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)

            Txx(mu,sigma)              = DHFb(mu,sigma)
            T1xxxx(mu,nu,lambda,sigma) = Txx(mu,sigma)^DHFb(nu,lambda)
            T1xxxx(mu,nu,lambda,sigma)*= 0.75
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)

# Correlation terms 

            T1xxxx(mu,nu,lambda,sigma)  = DpqA(mu,lambda)^DHFA(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma) *= 1.5
            Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)

            T1xxxx(mu,nu,lambda,sigma)  = DpqB(mu,lambda)^DHFB(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma) *= 1.5
            Txxxx(mu,nu,lambda,sigma)  -= T1xxxx(mu,nu,lambda,sigma)

            T1xxxx(mu,nu,lambda,sigma)  = DpqA(mu,lambda)^DHFB(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma) *= 0.5
            Txxxx(mu,nu,lambda,sigma)  -= T1xxxx(mu,nu,lambda,sigma)

            T1xxxx(mu,nu,lambda,sigma)  = DpqB(mu,lambda)^DHFA(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma) *= 0.5
            Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)

# Exchange terms

            T1xxxx(mu,nu,lambda,sigma)  = DpqA(mu,sigma)^DHFA(nu,lambda)
            T1xxxx(mu,nu,lambda,sigma) *= 0.75
            Txxxx(mu,nu,lambda,sigma)  -= T1xxxx(mu,nu,lambda,sigma)

            T1xxxx(mu,nu,lambda,sigma)  = DpqA(nu,lambda)^DHFA(mu,sigma)
            T1xxxx(mu,nu,lambda,sigma) *= 0.75
            Txxxx(mu,nu,lambda,sigma)  -= T1xxxx(mu,nu,lambda,sigma)
           
            T1xxxx(mu,nu,lambda,sigma)  = DpqB(mu,sigma)^DHFB(nu,lambda)
            T1xxxx(mu,nu,lambda,sigma) *= 0.75
            Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma)  = DpqB(nu,lambda)^DHFB(mu,sigma)
            T1xxxx(mu,nu,lambda,sigma) *= 0.75
            Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)

#           Fully transform Diixx
#           ---------------------
            DO i
#
               Tixxx(i,nu,lambda,sigma) = 0.0
#
               DO i1
                  REQUEST Diixx(i,i1,lambda,sigma) i1
                  T1ixxx(i,nu,lambda,sigma) = Diixx(i,i1,lambda,sigma)*ca(nu,i1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
               ENDDO i1
#
               T1xxxx(mu,nu,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
#           Fully transform Djjxx
#           ---------------------
            DO j
#
               Tjxxx(j,nu,lambda,sigma) = 0.0
#
               DO j1
#
                  REQUEST Djjxx(j,j1,lambda,sigma) j1
                  T1jxxx(j,nu,lambda,sigma) = Djjxx(j,j1,lambda,sigma)*cb(nu,j1) 
                  Tjxxx(j,nu,lambda,sigma) += T1jxxx(j,nu,lambda,sigma)
#
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma) = Tjxxx(j,nu,lambda,sigma)*cb(mu,j)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO j
#
#           Fully transform Dijxx
#           ---------------------
            DO i
#
               Tixxx(i,nu,lambda,sigma) = 0.0
#
               DO j1
#
                  REQUEST Dijxx(i,j1,lambda,sigma) j1
                  T1ixxx(i,nu,lambda,sigma) = Dijxx(i,j1,lambda,sigma)*cb(nu,j1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
#
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
#           Fully transform Dixix
#           ---------------------
            DO i
#
               Tixxx(i,nu,lambda,sigma) = 0.0
#
               DO i1
#
                  REQUEST Dixix(i,nu,i1,sigma) i1
                  T1ixxx(i,nu,lambda,sigma) = Dixix(i,nu,i1,sigma)*ca(lambda,i1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
#
               ENDDO i1
#
               T1xxxx(mu,nu,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
#
#           Fully transform Djxjx
#           ---------------------
            DO j
#
               Tjxxx(j,nu,lambda,sigma) = 0.0
#
               DO j1
#
                  REQUEST Djxjx(j,nu,j1,sigma) j1
                  T1jxxx(j,nu,lambda,sigma) = Djxjx(j,nu,j1,sigma)*cb(lambda,j1) 
                  Tjxxx(j,nu,lambda,sigma) += T1jxxx(j,nu,lambda,sigma)
#
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma) = Tjxxx(j,nu,lambda,sigma)*cb(mu,j)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO j
#
#           Fully transform Dixxj
#           ---------------------
            DO i
#
               Tixxx(i,nu,lambda,sigma) = 0.0
#
               DO j1
#
                  REQUEST Dixxj(i,nu,lambda,j1) j1
                  T1ixxx(i,nu,lambda,sigma) = Dixxj(i,nu,lambda,j1)*cb(sigma,j1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
#
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
#           Fully transform Dxiix
#           ---------------------
            DO i
#
               Txixx(mu,i,lambda,sigma) = 0.0
#
               DO i1
                  REQUEST Dxiix(mu,i,i1,sigma) i1
                  T1xixx(mu,i,lambda,sigma) = Dxiix(mu,i,i1,sigma)*ca(lambda,i1) 
                  Txixx(mu,i,lambda,sigma) += T1xixx(mu,i,lambda,sigma)
               ENDDO i1
#
               T1xxxx(mu,nu,lambda,sigma) = Txixx(mu,i,lambda,sigma)*ca(nu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
#           Fully transform Dxjjx
#           ---------------------
            DO j
#
               Txjxx(mu,j,lambda,sigma) = 0.0
#
               DO j1
                  REQUEST Dxjjx(mu,j,j1,sigma) j1
                  T1xjxx(mu,j,lambda,sigma) = Dxjjx(mu,j,j1,sigma)*cb(lambda,j1) 
                  Txjxx(mu,j,lambda,sigma) += T1xjxx(mu,j,lambda,sigma)
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma) = Txjxx(mu,j,lambda,sigma)*cb(nu,j)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO j
#
#           Fully transform Dxxxi
#           ---------------------
            DO i
#
               REQUEST Dxxxi(mu,nu,lambda,i) i
#
               T1xxxx(mu,nu,lambda,sigma)  = Dxxxi(mu,nu,lambda,i)*ca(sigma,i)
               T1xxxx(mu,nu,lambda,sigma) *= 8.0
               Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
#           Fully transform Dxxxj
#           ---------------------
            DO j
#
               REQUEST Dxxxj(mu,nu,lambda,j) j
#
               T1xxxx(mu,nu,lambda,sigma)  = Dxxxj(mu,nu,lambda,j)*cb(sigma,j)
               T1xxxx(mu,nu,lambda,sigma) *= 8.0
               Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO j
#
#           Contract half-transformed amplitudes to form backtransformed Dabcd
#           ------------------------------------------------------------------
#
            PXXXX(mu,nu,lambda,sigma) = 0.0
#            Txxxx(mu,nu,lambda,sigma) = 0.0

#           AAAA spin case
#           --------------
            DO i
            DO i1
#
               REQUEST TAO_AA(mu,i,nu,i1)        i
               REQUEST LAO_AA(i,lambda,i1,sigma) i
#
               Txxii(mu,nu,i,i1)          = TAO_AA(mu,i,nu,i1)
               Tiixx(i,i1,lambda,sigma)   = LAO_AA(i,lambda,i1,sigma)
#
               T1xxxx(mu,nu,lambda,sigma) = Txxii(mu,nu,i,i1)*Tiixx(i,i1,lambda,sigma)
               T1xxxx(mu,nu,lambda,sigma) *= Pthalf 
               PXXXX(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i1
            ENDDO i
#
#           BBBB spin case
#           --------------
            DO j
            DO j1

               REQUEST TAO_bb(mu,j,nu,j1)        j1
               REQUEST LAO_bb(j,lambda,j1,sigma) j1
#
               Txxjj(mu,nu,j,j1)          = TAO_BB(mu,j,nu,j1)
               Tjjxx(j,j1,lambda,sigma)   = LAO_BB(j,lambda,j1,sigma)

               T1xxxx(mu,nu,lambda,sigma) = Txxjj(mu,nu,j,j1)*Tjjxx(j,j1,lambda,sigma)
               T1xxxx(mu,nu,lambda,sigma) *= Mthalf 
               PXXXX(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO j1
            ENDDO j
#
#           ABAB spin case
#           --------------
            DO i
            DO j
#
               REQUEST TAO_ab(mu,i,nu,j)        j
               REQUEST LAO_ab(i,lambda,j,sigma) j
#
               Txxij(mu,nu,i,j)            = TAO_AB(mu,i,nu,j)
               Tijxx(i,j,lambda,sigma)     = LAO_AB(i,lambda,j,sigma)

               T1xxxx(mu,nu,lambda,sigma)  = Txxij(mu,nu,i,j)*Tijxx(i,j,lambda,sigma)
               T1xxxx(mu,nu,lambda,sigma) *= 4.0
               T1xxxx(mu,nu,lambda,sigma) *= Null 
               PXXXX(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO j
            ENDDO i
#
            Pxxxx(mu,nu,lambda,sigma) *= 0.25
            Pxxxx(mu,nu,lambda,sigma) += Txxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,lambda,nu,sigma)  = Pxxxx(mu,nu,lambda,sigma)

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_XX(mu,lambda,nu,sigma)
            E2GC_XX_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_XY(mu,lambda,nu,sigma)
            E2GC_XY_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_XZ(mu,lambda,nu,sigma)
            E2GC_XZ_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_YX(mu,lambda,nu,sigma)
            E2GC_YX_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_YY(mu,lambda,nu,sigma)
            E2GC_YY_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_YZ(mu,lambda,nu,sigma)
            E2GC_YZ_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_ZX(mu,lambda,nu,sigma)
            E2GC_ZX_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_ZY(mu,lambda,nu,sigma)
            E2GC_ZY_INTMD += tmp

            tmp = T1xxxx(mu,lambda,nu,sigma) * AO_2P_DSHIELD_ZZ(mu,lambda,nu,sigma)
            E2GC_ZZ_INTMD += tmp

      ENDPARDO mu, nu, lambda, sigma

      execute server_barrier

      COLLECTIVE E2GC_XX += E2GC_XX_INTMD
      COLLECTIVE E2GC_XY += E2GC_XY_INTMD
      COLLECTIVE E2GC_XZ += E2GC_XZ_INTMD
      COLLECTIVE E2GC_YX += E2GC_YX_INTMD
      COLLECTIVE E2GC_YY += E2GC_YY_INTMD
      COLLECTIVE E2GC_YZ += E2GC_YZ_INTMD
      COLLECTIVE E2GC_ZX += E2GC_ZX_INTMD
      COLLECTIVE E2GC_ZY += E2GC_ZY_INTMD
      COLLECTIVE E2GC_ZZ += E2GC_ZZ_INTMD

      execute server_barrier

#bgn_debug
      execute print_scalar  E2GC_XX
      execute print_scalar  E2GC_XY
      execute print_scalar  E2GC_XZ
      execute print_scalar  E2GC_YX
      execute print_scalar  E2GC_YY
      execute print_scalar  E2GC_YZ
      execute print_scalar  E2GC_ZX
      execute print_scalar  E2GC_ZY
      execute print_scalar  E2GC_ZZ
#enddebug

      E2GC_XX_SAVE = E2GC_XX
      E2GC_YY_SAVE = E2GC_YY
      E2GC_ZZ_SAVE = E2GC_ZZ

      E2GC_XX   = E2GC_YY_SAVE
      E2GC_XX  += E2GC_ZZ_SAVE

      E2GC_YY   = E2GC_XX_SAVE
      E2GC_YY  += E2GC_ZZ_SAVE

      E2GC_ZZ   = E2GC_XX_SAVE
      E2GC_ZZ  += E2GC_YY_SAVE

#bgn_debug
      execute print_scalar  E2GC_XX
      execute print_scalar  E2GC_YY
      execute print_scalar  E2GC_ZZ
#end_debug

      ENDPROC PDCONT 
#     --------------
#--------------------------------------------------------------------
      PROC  CCSD_2DRESPN_X
#     --------------------
      D2SO_PX = 0.0
      D2SO_PY = 0.0
      D2SO_PZ = 0.0
      D2SO_XX = 0.0
      D2SO_YX = 0.0
      D2SO_ZX = 0.0

#bgn_debug
#      esum=0.0
#      PARDO sigma, lambda, i, i1
#            request Diixx_x(i,i1,lambda,sigma) i
#            tmp = Diixx_x(i,i1,lambda,sigma) * Diixx_x(i,i1,lambda,sigma)
#            esum += tmp
#      ENDPARDO sigma, lambda, i, i1
#      execute print_scalar esum
#
#      suma = 0.0
#      PARDO lambda, sigma, j, j1
#               REQUEST Djjxx_x(j,j1,lambda,sigma) j
#               tmp =  Djjxx_x(j,j1,lambda,sigma) * Djjxx_x(j,j1,lambda,sigma)
#               suma += tmp
#      ENDPARDO lambda, sigma, j, j1
#      execute print_scalar suma
#end_debug


       PARDO mu, nu, lambda, sigma
#
            Txxxx(mu,nu,lambda,sigma) = 0.0

            REQUEST AO_2P_SOI_X(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_SOI_Y(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_SOI_Z(mu, lambda, nu, sigma) sigma

            GET DHFA(mu,lambda)
            GET DHFA(nu,sigma)
            GET DHFA(mu,sigma)
            GET DHFA(nu,lambda)
#
            GET DHFB(mu,lambda)
            GET DHFB(nu,sigma)
            GET DHFB(mu,sigma)
            GET DHFB(nu,lambda)
#
            GET DpqA_x(mu,lambda)
            GET DpqA_x(nu,sigma)
            GET DpqA_x(mu,sigma)
            GET DpqA_x(nu,lambda)
#
            GET DpqB_x(mu,lambda)
            GET DpqB_x(nu,sigma)
            GET DpqB_x(mu,sigma)
            GET DpqB_x(nu,lambda)

            T1xxxx(mu,nu,lambda,sigma) = DpqA_x(mu,lambda)^DHFA(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 1.5
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqB_x(mu,lambda)^DHFB(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= -1.5
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqA_x(mu,lambda)^DHFB(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= -0.5
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqB_x(mu,lambda)^DHFA(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 0.5
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)

#exchange terms 

            T1xxxx(mu,nu,lambda,sigma) = DpqA_x(mu,sigma)^DHFA(nu,lambda)
            T1xxxx(mu,nu,lambda,sigma)*= 1.5
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqA_x(nu,lambda)^DHFA(mu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 1.5
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqB_x(mu,sigma)^DHFB(nu,lambda)
            T1xxxx(mu,nu,lambda,sigma)*= -1.5
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqB_x(nu,lambda)^DHFB(mu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= -1.5
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)

#           Fully transform Diixx
#           ---------------------
            DO i
#
               Tixxx(i,nu,lambda,sigma) = 0.0
#bgn_debug
#               Txxxx(mu,nu,lambda,sigma) = 0.0
#end_debug
#
               DO i1
                  REQUEST Diixx_x(i,i1,lambda,sigma) i1
                  T1ixxx(i,nu,lambda,sigma) = Diixx_x(i,i1,lambda,sigma)*ca(nu,i1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
               ENDDO i1
#
               T1xxxx(mu,nu,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
#           Fully transform Djjxx
#           ---------------------
            DO j
#
               Tjxxx(j,nu,lambda,sigma) = 0.0
#
               DO j1
#
                  REQUEST Djjxx_x(j,j1,lambda,sigma) j1
                  T1jxxx(j,nu,lambda,sigma) = Djjxx_x(j,j1,lambda,sigma)*cb(nu,j1) 
                  Tjxxx(j,nu,lambda,sigma) += T1jxxx(j,nu,lambda,sigma)
#
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma) = Tjxxx(j,nu,lambda,sigma)*cb(mu,j)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO j
#
#           Fully transform Dijxx
#           ---------------------
            DO i
#
               Tixxx(i,nu,lambda,sigma) = 0.0
#
               DO j1
#
                  REQUEST Dijxx_x(i,j1,lambda,sigma) j1
                  T1ixxx(i,nu,lambda,sigma) = Dijxx_x(i,j1,lambda,sigma)*cb(nu,j1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
#
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
# The above 3 blocks handles D(IJKL) and D(IJAB) blocks.
#
#           Fully transform Dixix
#           ---------------------
            DO i
#
               Tixxx(i,nu,lambda,sigma) = 0.0
#
               DO i1
#
                  REQUEST Dixix_x(i,nu,i1,sigma) i1
                  T1ixxx(i,nu,lambda,sigma) = Dixix_x(i,nu,i1,sigma)*ca(lambda,i1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
#
               ENDDO i1
#
               T1xxxx(mu,nu,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
#
#           Fully transform Djxjx
#           ---------------------
            DO j
#
               Tjxxx(j,nu,lambda,sigma) = 0.0
#
               DO j1
#
                  REQUEST Djxjx_x(j,nu,j1,sigma) j1
                  T1jxxx(j,nu,lambda,sigma) = Djxjx_x(j,nu,j1,sigma)*cb(lambda,j1) 
                  Tjxxx(j,nu,lambda,sigma) += T1jxxx(j,nu,lambda,sigma)
#
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma) = Tjxxx(j,nu,lambda,sigma)*cb(mu,j)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO j
#
#           Fully transform Dixxj
#           ---------------------
            DO i
#
               Tixxx(i,nu,lambda,sigma) = 0.0
#
               DO j1
#
                  REQUEST Dixxj_x(i,nu,lambda,j1) j1
                  T1ixxx(i,nu,lambda,sigma) = Dixxj_x(i,nu,lambda,j1)*cb(sigma,j1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
#
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
#           Fully transform Dxiix
#           ---------------------
            DO i
#
               Txixx(mu,i,lambda,sigma) = 0.0
#
               DO i1
                  REQUEST Dxiix_x(mu,i,i1,sigma) i1
                  T1xixx(mu,i,lambda,sigma) = Dxiix_x(mu,i,i1,sigma)*ca(lambda,i1) 
                  Txixx(mu,i,lambda,sigma) += T1xixx(mu,i,lambda,sigma)
               ENDDO i1
#
               T1xxxx(mu,nu,lambda,sigma) = Txixx(mu,i,lambda,sigma)*ca(nu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
#           Fully transform Dxjjx
#           ---------------------
            DO j
#
               Txjxx(mu,j,lambda,sigma) = 0.0
#
               DO j1
                  REQUEST Dxjjx_x(mu,j,j1,sigma) j1
                  T1xjxx(mu,j,lambda,sigma) = Dxjjx_x(mu,j,j1,sigma)*cb(lambda,j1) 
                  Txjxx(mu,j,lambda,sigma) += T1xjxx(mu,j,lambda,sigma)
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma) = Txjxx(mu,j,lambda,sigma)*cb(nu,j)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO j

# The above 5 block handle D(IBJA) blocks.

#           Fully transform Dxxxi
#           ---------------------
            DO i

               REQUEST Dxxxi_x(mu,nu,lambda,i) i

               T1xxxx(mu,nu,lambda,sigma)  = Dxxxi_x(mu,nu,lambda,i)*ca(sigma,i)
               T1xxxx(mu,nu,lambda,sigma) *= 8.0
               Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)

            ENDDO i

#           Fully transform Dxxxj
#           ---------------------
            DO j

               REQUEST Dxxxj_x(mu,nu,lambda,j) j

               T1xxxx(mu,nu,lambda,sigma)  = Dxxxj_x(mu,nu,lambda,j)*cb(sigma,j)
               T1xxxx(mu,nu,lambda,sigma) *= 8.0
               Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)
              
            ENDDO j


# The above two blocks handle D(ABCI)

# Bulit the D(ABCD) contribution

# 1/8[L2_x(ab,mn)*Tau(mn,cd) + Tau_x(mn,cd)*L2(ab,mn)]
# 
            PXXXX_x(mu,nu,lambda,sigma) = 0.0

# AAAA spin case
#
# <ab | Sz(1) + 2 S_z(2)| cd > gives additional 3/2, -3/2 and -+1/2.
#
            DO i
            DO i1
               REQUEST TAO_AA(mu,i,nu,i1)        i 
               REQUEST LAO_AA_x(i,lambda,i1,sigma) i 
               Txxii(mu,nu,i,i1)          = TAO_AA(mu,i,nu,i1)
               Tiixx(i,i1,lambda,sigma)   = LAO_AA_x(i,lambda,i1,sigma)

               TSxxxx(mu,nu,lambda,sigma)  = Txxii(mu,nu,i,i1)*Tiixx(i,i1,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu)  = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) *=  Fact

               T1xxxx(mu,nu,lambda,sigma)  = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(lambda,sigma,mu,nu) += TASxxxx(lambda,sigma,mu,nu) 
               T1xxxx(mu,nu,lambda,sigma) *= 1.5

               PXXXX_x(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
            ENDDO i1
            ENDDO i

          DO i
            DO i1
               REQUEST TAO_AA_x(mu,i,nu,i1)        i
               REQUEST LAO_AA(i,lambda,i1,sigma) i
               Txxii(mu,nu,i,i1)          = TAO_AA_x(mu,i,nu,i1)
               Tiixx(i,i1,lambda,sigma)   = LAO_AA(i,lambda,i1,sigma)

               TSxxxx(mu,nu,lambda,sigma)  = Txxii(mu,nu,i,i1)*Tiixx(i,i1,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu)*= Fact

               T1xxxx(mu,nu,lambda,sigma)  = TSxxxx(mu,nu,lambda,sigma) 
               T1xxxx(lambda,sigma,mu,nu) += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma) *= 1.5

               PXXXX_x(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
            ENDDO i1
            ENDDO i

# BBBB spin case

            DO j
            DO j1
               REQUEST TAO_bb(mu,j,nu,j1)        j1 
               REQUEST LAO_bb_x(j,lambda,j1,sigma) j1 
               Txxjj(mu,nu,j,j1)          = TAO_BB(mu,j,nu,j1)
               Tjjxx(j,j1,lambda,sigma)   = LAO_BB_x(j,lambda,j1,sigma)

               TSxxxx(mu,nu,lambda,sigma)  = Txxjj(mu,nu,j,j1)*Tjjxx(j,j1,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu)*= Fact

               T1xxxx(mu,nu,lambda,sigma)  = TSxxxx(mu,nu,lambda,sigma) 
               T1xxxx(lambda,sigma,mu,nu) += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma) *= -1.5

               PXXXX_x(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
            ENDDO j1
            ENDDO j
           DO j
            DO j1
               REQUEST TAO_bb_x(mu,j,nu,j1)        j1
               REQUEST LAO_bb(j,lambda,j1,sigma) j1
               Txxjj(mu,nu,j,j1)          = TAO_BB_x(mu,j,nu,j1)
               Tjjxx(j,j1,lambda,sigma)   = LAO_BB(j,lambda,j1,sigma)
               TSxxxx(mu,nu,lambda,sigma) = Txxjj(mu,nu,j,j1)*Tjjxx(j,j1,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) *= Fact

               T1xxxx(mu,nu,lambda,sigma)   = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(lambda,sigma,mu,nu)  += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma) *= -1.5

               PXXXX_x(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
            ENDDO j1
            ENDDO j

# ABAB spin case (scaling factor zero is used since ABAB + BABA=0), otherwise
# it is 8. 

            DO i
            DO j
               REQUEST TAO_ab(mu,i,nu,j)        j 
               REQUEST LAO_ab_x(i,lambda,j,sigma) j 
               Txxij(mu,nu,i,j)            = TAO_AB(mu,i,nu,j)
               Tijxx(i,j,lambda,sigma)     = LAO_AB_x(i,lambda,j,sigma)

               TSxxxx(mu,nu,lambda,sigma)  = Txxij(mu,nu,i,j)*Tijxx(i,j,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) *= Fact

               T1xxxx(mu,nu,lambda,sigma)   = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(lambda,sigma,mu,nu)  += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma)  *= 0.0

               PXXXX_x(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)
            ENDDO j
            ENDDO i

            DO i
            DO j
               REQUEST TAO_ab_x(mu,i,nu,j)        j
               REQUEST LAO_ab(i,lambda,j,sigma) j
               Txxij(mu,nu,i,j)            = TAO_AB_x(mu,i,nu,j)
               Tijxx(i,j,lambda,sigma)     = LAO_AB(i,lambda,j,sigma)

               TSxxxx(mu,nu,lambda,sigma)  = Txxij(mu,nu,i,j)*Tijxx(i,j,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) *= Fact

               T1xxxx(mu,nu,lambda,sigma)  = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(lambda,sigma,mu,nu) += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma) *= 0.0
                  
               PXXXX_x(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)
            ENDDO j
            ENDDO i
      
            PXXXX_x(mu,nu,lambda,sigma) *= 0.125
            PXXXX_x(mu,nu,lambda,sigma) += Txxxx(mu,nu,lambda,sigma)
            T1xxxx(mu,lambda,nu,sigma)  = Pxxxx_X(mu,nu,lambda,sigma)

# The 1/8 factor is D(ab,cd) = D(cd,ab)
#
            tmp = AO_2P_SOI_X(mu,lambda,nu,sigma)*T1xxxx(mu,lambda,nu,sigma)
#bgn_debug
#            execute dump_amp AO_2P_SOI_X(mu,lambda,nu,sigma)
#end_debug
            D2SO_PX += tmp

            tmp = AO_2P_SOI_Y(mu,lambda,nu,sigma)*T1xxxx(mu,lambda,nu,sigma)
            D2SO_PY += tmp

            tmp = AO_2P_SOI_Z(mu,lambda,nu,sigma)*T1xxxx(mu,lambda,nu,sigma)
            D2SO_PZ += tmp

       ENDPARDO mu, nu, lambda, sigma

       EXECUTE SERVER_BARRIER
       COLLECTIVE D2SO_XX += D2SO_PX
       COLLECTIVE D2SO_YX += D2SO_PY
       COLLECTIVE D2SO_ZX += D2SO_PZ
       EXECUTE SERVER_BARRIER

#bgn_debug
     execute print_scalar D2SO_XX
     execute print_scalar D2SO_YX
     execute print_scalar D2SO_ZX
#end_debug

      ENDPROC CCSD_2DRESPN_X
#     ----------------------

      PROC  CCSD_2DRESPN_Y
#     --------------------
      D2SO_PX = 0.0
      D2SO_PY = 0.0
      D2SO_PZ = 0.0
      D2SO_XY = 0.0
      D2SO_YY = 0.0
      D2SO_ZY = 0.0

#bgn_debug
#      esum=0.0
#      PARDO sigma, lambda, i, i1
#            request Diixx_x(i,i1,lambda,sigma) i
#            tmp = Diixx_x(i,i1,lambda,sigma) * Diixx_x(i,i1,lambda,sigma)
#            esum += tmp
#      ENDPARDO sigma, lambda, i, i1
#      execute print_scalar esum
#
#      suma = 0.0
#      PARDO lambda, sigma, j, j1
#               REQUEST Djjxx_x(j,j1,lambda,sigma) j
#               tmp =  Djjxx_x(j,j1,lambda,sigma) * Djjxx_x(j,j1,lambda,sigma)
#               suma += tmp
#      ENDPARDO lambda, sigma, j, j1
#      execute print_scalar suma
#end_debug

       PARDO mu, nu, lambda, sigma
#
            Txxxx(mu,nu,lambda,sigma) = 0.0

            REQUEST AO_2P_SOI_X(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_SOI_Y(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_SOI_Z(mu, lambda, nu, sigma) sigma

            GET DHFa(mu,lambda)
            GET DHFa(nu,sigma)
            GET DHFa(mu,sigma)
            GET DHFa(nu,lambda)
#
            GET DHFb(mu,lambda)
            GET DHFb(nu,sigma)
            GET DHFb(mu,sigma)
            GET DHFb(nu,lambda)
#
            GET DpqA_y(mu,lambda)
            GET DpqA_y(nu,sigma)
            GET DpqA_y(mu,sigma)
            GET DpqA_y(nu,lambda)
#           
            GET DpqB_y(mu,lambda)
            GET DpqB_y(nu,sigma)
            GET DpqB_y(mu,sigma)
            GET DpqB_y(nu,lambda)

            T1xxxx(mu,nu,lambda,sigma) = DpqA_y(mu,lambda)^DHFA(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 1.5
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqB_y(mu,lambda)^DHFB(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= -1.5
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqA_y(mu,lambda)^DHFB(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= -0.5
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqB_y(mu,lambda)^DHFA(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 0.5
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)

#exchange terms

            T1xxxx(mu,nu,lambda,sigma) = DpqA_y(mu,sigma)^DHFA(nu,lambda)
            T1xxxx(mu,nu,lambda,sigma)*= 1.5
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqA_y(nu,lambda)^DHFA(mu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 1.5
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqB_y(mu,sigma)^DHFB(nu,lambda)
            T1xxxx(mu,nu,lambda,sigma)*= -1.5
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqB_y(nu,lambda)^DHFB(mu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= -1.5
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)
#
#           Fully transform Diixx
#           ---------------------
            DO i
#
               Tixxx(i,nu,lambda,sigma) = 0.0
#bgn_debug
#              Txxxx(mu,nu,lambda,sigma) = 0.0
#end_debug
#
               DO i1
                  REQUEST Diixx_x(i,i1,lambda,sigma) i1
                  T1ixxx(i,nu,lambda,sigma) = Diixx_x(i,i1,lambda,sigma)*ca(nu,i1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
               ENDDO i1
#
               T1xxxx(mu,nu,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(mu,i)

               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
#           Fully transform Djjxx
#           ---------------------
            DO j
#
               Tjxxx(j,nu,lambda,sigma) = 0.0
#
               DO j1
#
                  REQUEST Djjxx_x(j,j1,lambda,sigma) j1
                  T1jxxx(j,nu,lambda,sigma) = Djjxx_x(j,j1,lambda,sigma)*cb(nu,j1) 
                  Tjxxx(j,nu,lambda,sigma) += T1jxxx(j,nu,lambda,sigma)
#
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma) = Tjxxx(j,nu,lambda,sigma)*cb(mu,j)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO j
#
#           Fully transform Dijxx
#           ---------------------
            DO i
#
               Tixxx(i,nu,lambda,sigma) = 0.0
#
               DO j1
#
                  REQUEST Dijxx_x(i,j1,lambda,sigma) j1
                  T1ixxx(i,nu,lambda,sigma) = Dijxx_x(i,j1,lambda,sigma)*cb(nu,j1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
#
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
# The above 3 blocks handles D(IJKL) and D(IJAB) blocks.
#
#           Fully transform Dixix
#           ---------------------
            DO i
#
               Tixxx(i,nu,lambda,sigma) = 0.0
#
               DO i1
#
                  REQUEST Dixix_x(i,nu,i1,sigma) i1
                  T1ixxx(i,nu,lambda,sigma) = Dixix_x(i,nu,i1,sigma)*ca(lambda,i1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
#
               ENDDO i1
#
               T1xxxx(mu,nu,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
#
#           Fully transform Djxjx
#           ---------------------
            DO j
#
               Tjxxx(j,nu,lambda,sigma) = 0.0
#
               DO j1
#
                  REQUEST Djxjx_x(j,nu,j1,sigma) j1
                  T1jxxx(j,nu,lambda,sigma) = Djxjx_x(j,nu,j1,sigma)*cb(lambda,j1) 
                  Tjxxx(j,nu,lambda,sigma) += T1jxxx(j,nu,lambda,sigma)
#
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma) = Tjxxx(j,nu,lambda,sigma)*cb(mu,j)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO j
#
#           Fully transform Dixxj
#           ---------------------
            DO i
#
               Tixxx(i,nu,lambda,sigma) = 0.0
#
               DO j1
#
                  REQUEST Dixxj_x(i,nu,lambda,j1) j1
                  T1ixxx(i,nu,lambda,sigma) = Dixxj_x(i,nu,lambda,j1)*cb(sigma,j1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
#
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
#           Fully transform Dxiix
#           ---------------------
            DO i
#
               Txixx(mu,i,lambda,sigma) = 0.0
#
               DO i1
                  REQUEST Dxiix_x(mu,i,i1,sigma) i1
                  T1xixx(mu,i,lambda,sigma) = Dxiix_x(mu,i,i1,sigma)*ca(lambda,i1) 
                  Txixx(mu,i,lambda,sigma) += T1xixx(mu,i,lambda,sigma)
               ENDDO i1
#
               T1xxxx(mu,nu,lambda,sigma) = Txixx(mu,i,lambda,sigma)*ca(nu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
#           Fully transform Dxjjx
#           ---------------------
            DO j
#
               Txjxx(mu,j,lambda,sigma) = 0.0
#
               DO j1
                  REQUEST Dxjjx_x(mu,j,j1,sigma) j1
                  T1xjxx(mu,j,lambda,sigma) = Dxjjx_x(mu,j,j1,sigma)*cb(lambda,j1) 
                  Txjxx(mu,j,lambda,sigma) += T1xjxx(mu,j,lambda,sigma)
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma) = Txjxx(mu,j,lambda,sigma)*cb(nu,j)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO j

# The above 5 block handle D(IBJA) blocks.

#           Fully transform Dxxxi
#           ---------------------
            DO i

               REQUEST Dxxxi_x(mu,nu,lambda,i) i

               T1xxxx(mu,nu,lambda,sigma)  = Dxxxi_x(mu,nu,lambda,i)*ca(sigma,i)
               T1xxxx(mu,nu,lambda,sigma) *= 8.0

               Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)

            ENDDO i

#           Fully transform Dxxxj
#           ---------------------
            DO j

               REQUEST Dxxxj_x(mu,nu,lambda,j) j

               T1xxxx(mu,nu,lambda,sigma)  = Dxxxj_x(mu,nu,lambda,j)*cb(sigma,j)
               T1xxxx(mu,nu,lambda,sigma) *= 8.0

               Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)

            ENDDO j

# The above two blocks handle D(ABCI)

# Bulit the D(ABCD) contribution

#       ENDPARDO mu, nu, lambda, sigma

# 1/8[L2_x(ab,mn)*Tau(mn,cd) + Tau_x(mn,cd)*L2(ab,mn)]
# 
            PXXXX_x(mu,nu,lambda,sigma) = 0.0

# AAAA spin case
#
# <ab | Sz(1) + 2 S_z(2)| cd > gives additional 3/2, -3/2 and -1/2.
#
            DO i
            DO i1
               REQUEST TAO_AA(mu,i,nu,i1)        i 
               REQUEST LAO_AA_x(i,lambda,i1,sigma) i 
               Txxii(mu,nu,i,i1)          = TAO_AA(mu,i,nu,i1)
               Tiixx(i,i1,lambda,sigma)   = LAO_AA_x(i,lambda,i1,sigma)

               TSxxxx(mu,nu,lambda,sigma)  = Txxii(mu,nu,i,i1)*Tiixx(i,i1,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu)  = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) *= Fact

               T1xxxx(mu,nu,lambda,sigma)   = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(lambda,sigma,mu,nu)  += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma) *= 1.5

            PXXXX_x(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
            ENDDO i1
            ENDDO i

          DO i
            DO i1
               REQUEST TAO_AA_x(mu,i,nu,i1)        i
               REQUEST LAO_AA(i,lambda,i1,sigma) i
               Txxii(mu,nu,i,i1)          = TAO_AA_x(mu,i,nu,i1)
               Tiixx(i,i1,lambda,sigma)   = LAO_AA(i,lambda,i1,sigma)

               TSxxxx(mu,nu,lambda,sigma)  = Txxii(mu,nu,i,i1)*Tiixx(i,i1,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu)  = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) *= Fact

               T1xxxx(mu,nu,lambda,sigma)   = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(lambda,sigma,mu,nu)  += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma) *= 1.5

               PXXXX_x(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
            ENDDO i1
            ENDDO i

# BBBB spin case

            DO j
            DO j1
               REQUEST TAO_bb(mu,j,nu,j1)        j1 
               REQUEST LAO_bb_x(j,lambda,j1,sigma) j1 
               Txxjj(mu,nu,j,j1)          = TAO_BB(mu,j,nu,j1)
               Tjjxx(j,j1,lambda,sigma)   = LAO_BB_x(j,lambda,j1,sigma)

               TSxxxx(mu,nu,lambda,sigma)  = Txxjj(mu,nu,j,j1)*Tjjxx(j,j1,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu)  = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) *= Fact

               T1xxxx(mu,nu,lambda,sigma)   = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(lambda,sigma,mu,nu)  += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma) *= -1.5

               PXXXX_x(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
            ENDDO j1
            ENDDO j
           DO j
            DO j1
               REQUEST TAO_bb_x(mu,j,nu,j1)        j1
               REQUEST LAO_bb(j,lambda,j1,sigma) j1
               Txxjj(mu,nu,j,j1)          = TAO_BB_x(mu,j,nu,j1)
               Tjjxx(j,j1,lambda,sigma)   = LAO_BB(j,lambda,j1,sigma)

               TSxxxx(mu,nu,lambda,sigma) = Txxjj(mu,nu,j,j1)*Tjjxx(j,j1,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu)  = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) *= Fact

               T1xxxx(mu,nu,lambda,sigma)   = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(lambda,sigma,mu,nu)  += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma) *= -1.5

               PXXXX_x(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
            ENDDO j1
            ENDDO j

# ABAB spin-case,(scaling factor zero is used since ABAB + BABA=0), otherwise
# it is 8.

            DO i
            DO j
               REQUEST TAO_ab(mu,i,nu,j)        j
               REQUEST LAO_ab_x(i,lambda,j,sigma) j
               Txxij(mu,nu,i,j)            = TAO_AB(mu,i,nu,j)
               Tijxx(i,j,lambda,sigma)     = LAO_AB_x(i,lambda,j,sigma)
               TSxxxx(mu,nu,lambda,sigma)  = Txxij(mu,nu,i,j)*Tijxx(i,j,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu)  = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) *= Fact

               T1xxxx(mu,nu,lambda,sigma)   = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(lambda,sigma,mu,nu)  += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma)  *= 0.0

               PXXXX_x(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
            ENDDO j
            ENDDO i

            DO i
            DO j
               REQUEST TAO_ab_x(mu,i,nu,j)        j
               REQUEST LAO_ab(i,lambda,j,sigma) j
               Txxij(mu,nu,i,j)            = TAO_AB_x(mu,i,nu,j)
               Tijxx(i,j,lambda,sigma)     = LAO_AB(i,lambda,j,sigma)
               TSxxxx(mu,nu,lambda,sigma)  = Txxij(mu,nu,i,j)*Tijxx(i,j,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu)*= Fact

               T1xxxx(mu,nu,lambda,sigma)  = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(lambda,sigma,mu,nu) += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma) *= 0.0

               PXXXX_x(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
            ENDDO j
            ENDDO i
      
            PXXXX_x(mu,nu,lambda,sigma) *= 0.125
            PXXXX_x(mu,nu,lambda,sigma) += Txxxx(mu,nu,lambda,sigma)
            T1xxxx(mu,lambda,nu,sigma)   = Pxxxx_X(mu,nu,lambda,sigma)

# The 1/8 factor is D(ab,cd) = D(cd,ab) 

            tmp = AO_2P_SOI_X(mu,lambda,nu,sigma)*T1xxxx(mu,lambda,nu,sigma)
            D2SO_PX += tmp

            tmp = AO_2P_SOI_Y(mu,lambda,nu,sigma)*T1xxxx(mu,lambda,nu,sigma)
            D2SO_PY += tmp

            tmp = AO_2P_SOI_Z(mu,lambda,nu,sigma)*T1xxxx(mu,lambda,nu,sigma)
            D2SO_PZ += tmp

       ENDPARDO mu, nu, lambda, sigma

       EXECUTE SERVER_BARRIER
       COLLECTIVE D2SO_XY += D2SO_PX
       COLLECTIVE D2SO_YY += D2SO_PY
       COLLECTIVE D2SO_ZY += D2SO_PZ
       EXECUTE SERVER_BARRIER

#bgn_debug
     execute print_scalar D2SO_XY
     execute print_scalar D2SO_YY
     execute print_scalar D2SO_ZY
#end_debug
      ENDPROC CCSD_2DRESPN_Y
#     ---------------------

      PROC  CCSD_2DRESPN_Z
#     --------------------
      D2SO_PX = 0.0
      D2SO_PY = 0.0
      D2SO_PZ = 0.0
      D2SO_XZ = 0.0
      D2SO_YZ = 0.0
      D2SO_ZZ = 0.0
 
      D2AO_PP = 0.0
      D2AO_ZZ = 0.0

       PARDO mu, nu, lambda, sigma
#
            Txxxx(mu,nu,lambda,sigma) = 0.0

            REQUEST AO_2P_SOI_X(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_SOI_Y(mu, lambda, nu, sigma) sigma
            REQUEST AO_2P_SOI_Z(mu, lambda, nu, sigma) sigma
#
            GET DHFa(mu,lambda)
            GET DHFa(nu,sigma)
            GET DHFa(mu,sigma)
            GET DHFa(nu,lambda)
#
            GET DHFb(mu,lambda)
            GET DHFb(nu,sigma)
            GET DHFb(mu,sigma)
            GET DHFb(nu,lambda)
#
            GET DpqA_z(mu,lambda)
            GET DpqA_z(nu,sigma)
            GET DpqA_z(mu,sigma)
            GET DpqA_z(nu,lambda)
#           
            GET DpqB_z(mu,lambda)
            GET DpqB_z(nu,sigma)
            GET DpqB_z(mu,sigma)
            GET DpqB_z(nu,lambda)

            T1xxxx(mu,nu,lambda,sigma) = DpqA_z(mu,lambda)^DHFA(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 1.5
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqB_z(mu,lambda)^DHFB(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= -1.5
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqA_z(mu,lambda)^DHFB(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= -0.5
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqB_z(mu,lambda)^DHFA(nu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 0.5
            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)

#exchange terms

            T1xxxx(mu,nu,lambda,sigma) = DpqA_z(mu,sigma)^DHFA(nu,lambda)
            T1xxxx(mu,nu,lambda,sigma)*= 1.5
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqA_z(nu,lambda)^DHFA(mu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= 1.5
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqB_z(mu,sigma)^DHFB(nu,lambda)
            T1xxxx(mu,nu,lambda,sigma)*= -1.5
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)
#
            T1xxxx(mu,nu,lambda,sigma) = DpqB_z(nu,lambda)^DHFB(mu,sigma)
            T1xxxx(mu,nu,lambda,sigma)*= -1.5
            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)

#            execute dump_amp Txxxx(mu,nu,lambda,sigma)
#
#           Fully transform Diixx
#           ---------------------
            DO i
#
               Tixxx(i,nu,lambda,sigma) = 0.0
#bgn_debug
#              Txxxx(mu,nu,lambda,sigma) = 0.0
#end_debug
               DO i1
                  REQUEST Diixx_x(i,i1,lambda,sigma) i1
                  T1ixxx(i,nu,lambda,sigma) = Diixx_x(i,i1,lambda,sigma)*ca(nu,i1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
               ENDDO i1
#
               T1xxxx(mu,nu,lambda,sigma)  = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
               Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
#           Fully transform Djjxx
#           ---------------------
            DO j
#
               Tjxxx(j,nu,lambda,sigma) = 0.0
#
               DO j1
#
                  REQUEST Djjxx_x(j,j1,lambda,sigma) j1
                  T1jxxx(j,nu,lambda,sigma) = Djjxx_x(j,j1,lambda,sigma)*cb(nu,j1) 
                  Tjxxx(j,nu,lambda,sigma) += T1jxxx(j,nu,lambda,sigma)
#
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma)  = Tjxxx(j,nu,lambda,sigma)*cb(mu,j)
               Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO j
#
#           Fully transform Dijxx
#           ---------------------
            DO i
#
               Tixxx(i,nu,lambda,sigma) = 0.0
#
               DO j1
#
                  REQUEST Dijxx_x(i,j1,lambda,sigma) j1
                  T1ixxx(i,nu,lambda,sigma) = Dijxx_x(i,j1,lambda,sigma)*cb(nu,j1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)
#
               ENDDO j1
#
               T1xxxx(mu,nu,lambda,sigma)  = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
               Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)
#
            ENDDO i
#
# The above 3 blocks handles D(IJKL), D(IJKA)  and D(IJAB) blocks.
#
#           Fully transform Dixix
#           ---------------------
            DO i

               Tixxx(i,nu,lambda,sigma) = 0.0

               DO i1

                  REQUEST Dixix_x(i,nu,i1,sigma) i1
                  T1ixxx(i,nu,lambda,sigma) = Dixix_x(i,nu,i1,sigma)*ca(lambda,i1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)

               ENDDO i1

               T1xxxx(mu,nu,lambda,sigma)  = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
               Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)

            ENDDO i


#           Fully transform Djxjx
#           ---------------------
            DO j

               Tjxxx(j,nu,lambda,sigma) = 0.0

               DO j1

                  REQUEST Djxjx_x(j,nu,j1,sigma) j1
                  T1jxxx(j,nu,lambda,sigma) = Djxjx_x(j,nu,j1,sigma)*cb(lambda,j1) 
                  Tjxxx(j,nu,lambda,sigma) += T1jxxx(j,nu,lambda,sigma)

               ENDDO j1

               T1xxxx(mu,nu,lambda,sigma) = Tjxxx(j,nu,lambda,sigma)*cb(mu,j)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)

            ENDDO j
#
#           Fully transform Dixxj
#           ---------------------
            DO i

               Tixxx(i,nu,lambda,sigma) = 0.0

               DO j1

                  REQUEST Dixxj_x(i,nu,lambda,j1) j1
                  T1ixxx(i,nu,lambda,sigma) = Dixxj_x(i,nu,lambda,j1)*cb(sigma,j1) 
                  Tixxx(i,nu,lambda,sigma) += T1ixxx(i,nu,lambda,sigma)

               ENDDO j1

               T1xxxx(mu,nu,lambda,sigma) = Tixxx(i,nu,lambda,sigma)*ca(mu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)

            ENDDO i
#
#           Fully transform Dxiix
#           ---------------------
            DO i

               Txixx(mu,i,lambda,sigma) = 0.0

               DO i1
                  REQUEST Dxiix_x(mu,i,i1,sigma) i1
                  T1xixx(mu,i,lambda,sigma) = Dxiix_x(mu,i,i1,sigma)*ca(lambda,i1) 
                  Txixx(mu,i,lambda,sigma) += T1xixx(mu,i,lambda,sigma)
               ENDDO i1

               T1xxxx(mu,nu,lambda,sigma) = Txixx(mu,i,lambda,sigma)*ca(nu,i)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)

            ENDDO i
#
#           Fully transform Dxjjx
#           ---------------------
            DO j

               Txjxx(mu,j,lambda,sigma) = 0.0

               DO j1
                  REQUEST Dxjjx_x(mu,j,j1,sigma) j1
                  T1xjxx(mu,j,lambda,sigma) = Dxjjx_x(mu,j,j1,sigma)*cb(lambda,j1) 
                  Txjxx(mu,j,lambda,sigma) += T1xjxx(mu,j,lambda,sigma)
               ENDDO j1

               T1xxxx(mu,nu,lambda,sigma) = Txjxx(mu,j,lambda,sigma)*cb(nu,j)
               Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)

            ENDDO j


# The above 5 block handle D(IBJA) blocks.
#bgn_debug
#
#           Fully transform Dxxxi
#           ---------------------
            DO i

               REQUEST Dxxxi_x(mu,nu,lambda,i) i
               T1xxxx(mu,nu,lambda,sigma)  = Dxxxi_x(mu,nu,lambda,i)*ca(sigma,i)
               T1xxxx(mu,nu,lambda,sigma) *= 8.0
               Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)
            ENDDO i
#
#           Fully transform Dxxxj
#           ---------------------
            DO j

               REQUEST Dxxxj_x(mu,nu,lambda,j) j

               T1xxxx(mu,nu,lambda,sigma)  = Dxxxj_x(mu,nu,lambda,j)*cb(sigma,j)
               T1xxxx(mu,nu,lambda,sigma) *= 8.0
               Txxxx(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)

            ENDDO j

# The above two blocks handle D(ABCI)

# Bulit the D(ABCD) contribution

#bgn_debug
#       ENDPARDO mu, nu, lambda, sigma
#       EXECUTE SERVER_BARRIER 
#
#       PARDO mu, nu, lambda, sigma
#            REQUEST Dxxxx_x(mu,nu,lambda,sigma) sigma
#            REQUEST AO_2P_SOI_Z(mu,nu,lambda,sigma) sigma
#            tmp = AO_2P_SOI_Z(mu, nu, lambda, sigma)*Dxxxx_x(mu,nu,lambda,sigma)
#            D2SO_PZ += tmp
#       ENDPARDO mu, nu, lambda, sigma
#       EXECUTE SERVER_BARRIER
#
#       COLLECTIVE D2SO_XZ += D2SO_PX
#       COLLECTIVE D2SO_YZ += D2SO_PY
#       COLLECTIVE D2SO_ZZ += D2SO_PZ
#       EXECUTE SIP_BARRIER
#
#     execute print_scalar D2SO_XZ
#     execute print_scalar D2SO_YZ
#     execute print_scalar D2SO_ZZ
#end_debug
#
#       PARDO mu, nu, lambda, sigma

# 1/8[L2_x(ab,mn)*Tau(mn,cd) + Tau_x(mn,cd)*L2(ab,mn)]
# 
            PXXXX_x(mu,nu,lambda,sigma) = 0.0

# AAAA spin case
#
# <ab | Sz(1) + 2 S_z(2)| cd > gives additional 3/2, -3/2 and -1/2.
#

            DO i
            DO i1
               REQUEST TAO_AA(mu,i,nu,i1)        i 
               REQUEST LAO_AA_x(i,lambda,i1,sigma) i 
               Txxii(mu,nu,i,i1)          = TAO_AA(mu,i,nu,i1)
               Tiixx(i,i1,lambda,sigma)   = LAO_AA_x(i,lambda,i1,sigma)

               TSxxxx(mu,nu,lambda,sigma) = Txxii(mu,nu,i,i1)*Tiixx(i,i1,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu)  = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) *= Fact

               T1xxxx(mu,nu,lambda,sigma)   = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(lambda,sigma,mu,nu)  += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma)  *= 1.5

               PXXXX_x(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
            ENDDO i1
            ENDDO i

          DO i
            DO i1
               REQUEST TAO_AA_x(mu,i,nu,i1)        i
               REQUEST LAO_AA(i,lambda,i1,sigma) i
               Txxii(mu,nu,i,i1)          = TAO_AA_x(mu,i,nu,i1)
               Tiixx(i,i1,lambda,sigma)   = LAO_AA(i,lambda,i1,sigma)

               TSxxxx(mu,nu,lambda,sigma) = Txxii(mu,nu,i,i1)*Tiixx(i,i1,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu)  = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) *= Fact

               T1xxxx(mu,nu,lambda,sigma)   = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(lambda,sigma,mu,nu)  += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma)  *= 1.5

               PXXXX_x(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
            ENDDO i1
            ENDDO i

# BBBB spin case

            DO j
            DO j1
               REQUEST TAO_bb(mu,j,nu,j1)        j1 
               REQUEST LAO_bb_x(j,lambda,j1,sigma) j1 
               Txxjj(mu,nu,j,j1)          = TAO_BB(mu,j,nu,j1)
               Tjjxx(j,j1,lambda,sigma)   = LAO_BB_x(j,lambda,j1,sigma)
               TSxxxx(mu,nu,lambda,sigma) = Txxjj(mu,nu,j,j1)*Tjjxx(j,j1,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) = Txxjj(mu,nu,j,j1)*Tjjxx(j,j1,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) *= Fact

               T1xxxx(mu,nu,lambda,sigma)   = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(lambda,sigma,mu,nu)  += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma)  *= -1.5

               PXXXX_x(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
            ENDDO j1
            ENDDO j
           DO j
            DO j1
               REQUEST TAO_bb_x(mu,j,nu,j1)        j1
               REQUEST LAO_bb(j,lambda,j1,sigma) j1
               Txxjj(mu,nu,j,j1)          = TAO_BB_x(mu,j,nu,j1)
               Tjjxx(j,j1,lambda,sigma)   = LAO_BB(j,lambda,j1,sigma)
               TSxxxx(mu,nu,lambda,sigma) = Txxjj(mu,nu,j,j1)*Tjjxx(j,j1,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) *= Fact 

               T1xxxx(mu,nu,lambda,sigma)   = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(lambda,sigma,mu,nu)  += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma)  *= -1.5

               PXXXX_x(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
            ENDDO j1
            ENDDO j

# ABAB spin case 

            DO i
            DO j
               REQUEST TAO_ab(mu,i,nu,j)        j 
               REQUEST LAO_ab_x(i,lambda,j,sigma) j 
               Txxij(mu,nu,i,j)            = TAO_AB(mu,i,nu,j)
               Tijxx(i,j,lambda,sigma)     = LAO_AB_x(i,lambda,j,sigma)
               TSxxxx(mu,nu,lambda,sigma)  = Txxij(mu,nu,i,j)*Tijxx(i,j,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu)  = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) *= Fact

               T1xxxx(mu,nu,lambda,sigma)   = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(lambda,sigma,mu,nu)  += TASxxxx(lambda,sigma,mu,nu)
               T1xxxx(mu,nu,lambda,sigma)  *= 0.0

               PXXXX_x(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)
            ENDDO j
            ENDDO i

            DO i
            DO j
               REQUEST TAO_ab_x(mu,i,nu,j)        j
               REQUEST LAO_ab(i,lambda,j,sigma) j
               Txxij(mu,nu,i,j)            = TAO_AB_x(mu,i,nu,j)
               Tijxx(i,j,lambda,sigma)     = LAO_AB(i,lambda,j,sigma)
               TSxxxx(mu,nu,lambda,sigma)  = Txxij(mu,nu,i,j)*Tijxx(i,j,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu)  = TSxxxx(mu,nu,lambda,sigma)
               TASxxxx(lambda,sigma,mu,nu) *= Fact

               T1xxxx(mu,nu,lambda,sigma)   = TSxxxx(mu,nu,lambda,sigma)
               T1xxxx(mu,nu,lambda,sigma)  += TASxxxx(mu,nu,lambda,sigma)
               T1xxxx(mu,nu,lambda,sigma)  *= 0.0

               PXXXX_x(mu,nu,lambda,sigma)  += T1xxxx(mu,nu,lambda,sigma)
            ENDDO j
            ENDDO i
      
            PXXXX_x(mu,nu,lambda,sigma) *= 0.125
            PXXXX_x(mu,nu,lambda,sigma) += Txxxx(mu,nu,lambda,sigma)
            T1xxxx(mu,lambda,nu,sigma)   = Pxxxx_X(mu,nu,lambda,sigma)

# The 1/4 factor is D(ab,cd) = D(cd,ab) (symmetrization is not done though)

#bgn_debug
#            execute dump_amp T1xxxx(mu,nu,lambda, sigma)
#            execute dump_amp AO_2P_SOI_Z(mu, nu, lambda, sigma)
#            tmp = T1xxxx(mu,lambda,nu,sigma)* T1xxxx(mu,lambda,nu,sigma)
#            D2AO_PP += tmp
#end_debug

            tmp = AO_2P_SOI_X(mu,lambda,nu,sigma)*T1xxxx(mu,lambda,nu,sigma)
            D2SO_PX += tmp

            tmp = AO_2P_SOI_Y(mu,lambda,nu,sigma)*T1xxxx(mu,lambda,nu,sigma)
            D2SO_PY += tmp

            tmp = AO_2P_SOI_Z(mu,lambda,nu,sigma)*T1xxxx(mu,lambda,nu,sigma)
            D2SO_PZ += tmp

       ENDPARDO mu, nu, lambda, sigma
       EXECUTE SERVER_BARRIER

       COLLECTIVE D2SO_XZ += D2SO_PX
       COLLECTIVE D2SO_YZ += D2SO_PY
       COLLECTIVE D2SO_ZZ += D2SO_PZ
       EXECUTE SIP_BARRIER 

#bgn_debug
     execute print_scalar D2SO_XZ
     execute print_scalar D2SO_YZ
     execute print_scalar D2SO_ZZ
#end_debug

      ENDPROC CCSD_2DRESPN_Z
#     ----------------------
#-----------------------------------------------------------------------
      PROC S2DIJ 
           esum = 0.0 
           DO i 
           DO i1 
              GET Dij_a(i,i1) 
              etemp = Dij_a(i,i1)*Dij_a(i,i1) 
              esum += etemp 
              execute dump_block Dij_a(i,i1) 
           ENDDO i1 
           ENDDO i 
           execute print_scalar esum 
           esum = 0.0 
           DO j 
           DO j1 
              GET Dij_b(j,j1) 
              etemp = Dij_b(j,j1)*Dij_b(j,j1) 
              esum += etemp 
           ENDDO j1 
           ENDDO j 
           execute print_scalar esum 
      ENDPROC S2DIJ 
#
      PROC S2DAB 
#
           esum = 0.0 
           DO a 
           DO a1 
#
              GET Dab_a(a,a1) 
              etemp = Dab_a(a,a1)*Dab_a(a,a1) 
              esum += etemp 
              execute dump_block Dab_a(a,a1) 
#
           ENDDO a1 
           ENDDO a 
           execute print_scalar esum 
#
           esum = 0.0 
           DO b 
           DO b1 
#
              GET Dab_b(b,b1) 
              etemp = Dab_b(b,b1)*Dab_b(b,b1) 
              esum += etemp 
#
           ENDDO b1 
           ENDDO b 
           execute print_scalar esum 
#               
      ENDPROC S2DAB 
#
      PROC S2DIJKL_X
#
      esum = 0.0 
      etmp = 0.0
      PARDO i, i1, i2, i3 
#
            REQUEST Dijkl_aa_X(i,i1,i2,i3) i  
#            execute dump_amp Dijkl_aa_X(i,i1,i2,i3)
            etemp = Dijkl_aa_X(i,i1,i2,i3)*Dijkl_aa_X(i,i1,i2,i3)
            etmp += etemp
#            
      ENDPARDO i, i1, i2, i3 
      execute server_barrier 
      collective esum +=etmp
#bgn_debug
      esum *= 1.0
#end_debug
      execute print_scalar esum 
#
      esum = 0.0 
      etmp = 0.0
      PARDO j, j1, j2, j3 
#
            REQUEST Dijkl_bb_X(j,j1,j2,j3) j  
            etemp = Dijkl_bb_X(j,j1,j2,j3)*Dijkl_bb_X(j,j1,j2,j3)
            etmp += etemp
#            
      ENDPARDO j, j1, j2, j3 
#bgn_debug
      esum *= 1.0
#end_debug
      execute server_barrier 
      collective esum +=etmp
      execute print_scalar esum 
#
      esum = 0.0 
      etmp = 0.0
      PARDO i, i1, j, j1 
#
            REQUEST Dijkl_ab_X(i,j,i1,j1) i  
#            execute dump_amp Dijkl_ab_X(i,j,i1,j1)
            etemp = Dijkl_ab_X(i,j,i1,j1)*Dijkl_ab_X(i,j,i1,j1)
            etmp += etemp
#            
      ENDPARDO i, i1, j, j1 
#bgn_debug
      esum *= 1.0
#end_debug
      execute server_barrier 
      collective esum +=etmp
      execute print_scalar esum 
#
      ENDPROC S2DIJKL_X

      PROC S2DIJKL
#
      esum = 0.0
      etmp = 0.0
      PARDO i, i1, i2, i3
#
            REQUEST Dijkl_aa(i,i1,i2,i3) i
            etemp = Dijkl_aa(i,i1,i2,i3)*Dijkl_aa(i,i1,i2,i3)
            etmp += etemp
#
      ENDPARDO i, i1, i2, i3
      execute server_barrier
      collective esum +=etmp
      execute print_scalar esum
#
      esum = 0.0
      etmp = 0.0
      PARDO j, j1, j2, j3
#
            REQUEST Dijkl_bb(j,j1,j2,j3) j
            etemp = Dijkl_bb(j,j1,j2,j3)*Dijkl_bb(j,j1,j2,j3)
            etmp += etemp
#     
      ENDPARDO j, j1, j2, j3
      execute server_barrier
      collective esum +=etmp
      execute print_scalar esum
#
      esum = 0.0
      etmp = 0.0
      PARDO i, i1, j, j1
#
            REQUEST Dijkl_ab(i,j,i1,j1) i
            etemp = Dijkl_ab(i,j,i1,j1)*Dijkl_ab(i,j,i1,j1)
            etmp+= etemp
#     
      ENDPARDO i, i1, j, j1
      execute server_barrier
      collective esum +=etmp
      execute print_scalar esum
#
      ENDPROC S2DIJKL
#
      PROC S2ABCI 
#
      esum = 0.0 
      PARDO a, a1, a2, i 
#
            REQUEST Dabci_aaaa(a,a1,a2,i) i  
            etemp = Dabci_aaaa(a,a1,a2,i)*Dabci_aaaa(a,a1,a2,i)
            esum += etemp
#
      ENDPARDO a, a1, a2, i 
      esum *= 0.5 # to match aces 
      execute print_scalar esum 
#
      esum = 0.0 
      PARDO b, b1, b2, j 
#
            REQUEST Dabci_bbbb(b,b1,b2,j) j  
            etemp = Dabci_bbbb(b,b1,b2,j)*Dabci_bbbb(b,b1,b2,j)
            esum += etemp
#
      ENDPARDO b, b1, b2, j 
      esum *= 0.5 # to match aces 
      execute print_scalar esum 
#
      esum = 0.0 
      PARDO a, a1, b, j 
#
            REQUEST Dabci_abab(a,b,a1,j) j  
            etemp = Dabci_abab(a,b,a1,j)*Dabci_abab(a,b,a1,j)
            esum += etemp
#
      ENDPARDO a, a1, b, j 
      execute print_scalar esum 
#
      esum = 0.0 
      PARDO a, b1, b, i 
#
            REQUEST Dabci_baba(b,a,b1,i) i   
            etemp = Dabci_baba(b,a,b1,i)*Dabci_baba(b,a,b1,i)
            esum += etemp
#
      ENDPARDO a, b1, b, i 
      execute print_scalar esum 
#
      ENDPROC S2ABCI 

      PROC S2ABCI_X
#
      esum = 0.0
      etmp = 0.0
      PARDO a, a1, a2, i
#
            REQUEST Dabci_aaaa_x(a,a1,a2,i) i
#            execute dump_amp Dabci_aaaa_x(a,a1,a2,i)
            etemp = Dabci_aaaa_x(a,a1,a2,i)*Dabci_aaaa_x(a,a1,a2,i)
            etmp += etemp
#
      ENDPARDO a, a1, a2, i
#      esum *= 0.5 # to match aces
#bgn_debug
      esum *= 1.0
#end_debug
      execute server_barrier
      collective esum +=etmp
      execute print_scalar esum
#
      esum = 0.0
      etmp = 0.0
      PARDO b, b1, b2, j
#
            REQUEST Dabci_bbbb_x(b,b1,b2,j) j
#            execute dump_amp Dabci_bbbb_x(b,b1,b2,j)
            etemp = Dabci_bbbb_x(b,b1,b2,j)*Dabci_bbbb_x(b,b1,b2,j)
            etmp += etemp
#
      ENDPARDO b, b1, b2, j
#      esum *= 0.5 # to match aces
      execute server_barrier
      collective esum +=etmp
      execute print_scalar esum
#
      esum = 0.0
      etmp = 0.0
      PARDO a, a1, b, j
#
            REQUEST Dabci_abab_x(a,b,a1,j) j
#            execute dump_amp Dabci_abab_x(a,b,a1,j)
            etemp = Dabci_abab_x(a,b,a1,j)*Dabci_abab_x(a,b,a1,j)
            etmp += etemp
#
      ENDPARDO a, a1, b, j
#bgn_debug
      esum *= 1.0
#end_debug
      execute server_barrier
      collective esum +=etmp
      execute print_scalar esum
#
      esum = 0.0
      etmp = 0.0
      PARDO a, b1, b, i
#
            REQUEST Dabci_baba_x(b,a,b1,i) i
            etemp = Dabci_baba_x(b,a,b1,i)*Dabci_baba_x(b,a,b1,i)
            etmp += etemp
#
      ENDPARDO a, b1, b, i
#bgn_debug
      esum *= 1.0
#end_debug
      execute server_barrier
      collective esum +=etmp
      execute print_scalar esum
#
      ENDPROC S2ABCI_X
#
      PROC S2DIJKA 
#
      esum = 0.0 
      PARDO i, i1, i2, a 
#
            REQUEST Dijka_aaaa(i,i1,i2,a) a  
            etemp = Dijka_aaaa(i,i1,i2,a)*Dijka_aaaa(i,i1,i2,a)
            esum += etemp
#            
      ENDPARDO i, i1, i2, a 
      esum *= 0.5 # to match aces 
      execute print_scalar esum 
#
      esum = 0.0 
      PARDO j, j1, j2, b 
#
            REQUEST Dijka_bbbb(j,j1,j2,b) b  
            etemp = Dijka_bbbb(j,j1,j2,b)*Dijka_bbbb(j,j1,j2,b)
            esum += etemp
#            
      ENDPARDO j, j1, j2, b 
      esum *= 0.5 # to match aces 
      execute print_scalar esum 
#
      esum = 0.0 
      PARDO i, i1, j, b 
#
            REQUEST Dijka_abab(i,j,i1,b) b  
            etemp = Dijka_abab(i,j,i1,b)*Dijka_abab(i,j,i1,b)
            esum += etemp
#            
      ENDPARDO i, i1, j, b 
      execute print_scalar esum 
#
      esum = 0.0 
      PARDO i, j1, j, a 
#
            REQUEST Dijka_baba(j,i,j1,a) a  
            etemp = Dijka_baba(j,i,j1,a)*Dijka_baba(j,i,j1,a)
            esum += etemp
#            
      ENDPARDO i, j1, j, a 
      execute print_scalar esum 
#
      ENDPROC S2DIJKA 

      PROC S2DIJKA_X
#
      esum = 0.0
      etmp = 0.0
      PARDO i, i1, i2, a
#
            REQUEST Dijka_aaaa_x(i,i1,i2,a) a
#            execute dump_amp Dijka_aaaa_x(i,i1,i2,a)
            etemp = Dijka_aaaa_x(i,i1,i2,a)*Dijka_aaaa_x(i,i1,i2,a)
            etmp += etemp
#     
      ENDPARDO i, i1, i2, a
#      esum *= 0.5 # to match aces
#bgn_debug
      esum *= 1.0
#end_debug
      execute server_barrier
      collective esum +=etmp
      execute print_scalar esum
#
      esum = 0.0
      etmp = 0.0
      PARDO j, j1, j2, b
#
            REQUEST Dijka_bbbb_x(j,j1,j2,b) b
            etemp = Dijka_bbbb_x(j,j1,j2,b)*Dijka_bbbb_x(j,j1,j2,b)
            etmp += etemp
#     
      ENDPARDO j, j1, j2, b
#      esum *= 0.5 # to match aces
#bgn_debug
      esum *= 1.0
#end_debug
      execute server_barrier
      collective esum +=etmp
      execute print_scalar esum
#
      esum = 0.0
      etmp = 0.0
      PARDO i, i1, j, b
#
            REQUEST Dijka_abab_x(i,j,i1,b) b
            etemp = Dijka_abab_x(i,j,i1,b)*Dijka_abab_x(i,j,i1,b)
            etmp += etemp
#     
      ENDPARDO i, i1, j, b
#bgn_debug
      esum *= 1.0
#end_debug
      execute server_barrier
      collective esum +=etmp
      execute print_scalar esum
#
      esum = 0.0
      etmp = 0.0
      PARDO i, j1, j, a
#
            REQUEST Dijka_baba_x(j,i,j1,a) a
            etemp = Dijka_baba_x(j,i,j1,a)*Dijka_baba_x(j,i,j1,a)
            etmp += etemp
#     
      ENDPARDO i, j1, j, a
#bgn_debug
      esum *= 1.0
#end_debug
      execute server_barrier
      collective esum +=etmp
      execute print_scalar esum
#
      ENDPROC S2DIJKA_X
#
      PROC S2DIJAB 
#
      esum = 0.0 
      PARDO i, i1, a, a1  
#
            REQUEST Dijab_aa(i,i1,a,a1) a  
            etemp = Dijab_aa(i,i1,a,a1)*Dijab_aa(i,i1,a,a1)
            esum += etemp
#            
      ENDPARDO i, i1, a,a1 
      esum *= 0.25 # to match aces 
      execute print_scalar esum 
#
      esum = 0.0 
      PARDO j, j1, b, b1  
#
            REQUEST Dijab_bb(j,j1,b,b1) b  
            etemp = Dijab_bb(j,j1,b,b1)*Dijab_bb(j,j1,b,b1)
            esum += etemp
#            
      ENDPARDO j, j1, b,b1 
      esum *= 0.25 # to match aces 
      execute print_scalar esum 
#
      esum = 0.0 
      PARDO i, j, a, b  

            REQUEST Dijab_ab(i,j,a,b) a  
            etemp = Dijab_ab(i,j,a,b)*Dijab_ab(i,j,a,b)
            esum += etemp
            
      ENDPARDO i, j, a, b 
      execute print_scalar esum 

      ENDPROC S2DIJAB 
#
      PROC S2DIJAB_X
#
      esum = 0.0
      etmp = 0.0
      PARDO i, i1, a, a1
#
            REQUEST Dijab_aa_x(i,i1,a,a1) a
#            execute dump_amp Dijab_aa_x(i,i1,a,a1)
            etemp = Dijab_aa_x(i,i1,a,a1)*Dijab_aa_x(i,i1,a,a1)
            etmp += etemp
#
      ENDPARDO i, i1, a,a1
#      esum *= 0.25 # to match aces
#bgn_debug
      esum *= 1.0
#end_debug
      execute sip_barrier 
      collective esum += etmp
      execute print_scalar esum
#
      esum = 0.0
      etmp = 0.0
      PARDO j, j1, b, b1
#
            REQUEST Dijab_bb_x(j,j1,b,b1) b
#            execute dump_amp Dijab_bb_x(j,j1,b,b1)
            etemp = Dijab_bb_x(j,j1,b,b1)*Dijab_bb_x(j,j1,b,b1)
            etmp += etemp
#
      ENDPARDO j, j1, b,b1
#      esum *= 0.25 # to match aces
      execute sip_barrier 
      collective esum += etmp
      execute print_scalar esum
#
      esum = 0.0
      etmp = 0.0
      PARDO i, j, a, b

            REQUEST Dijab_ab_x(i,j,a,b) a
#            execute dump_amp Dijab_ab_x(i,j,a,b)
            etemp = Dijab_ab_x(i,j,a,b)*Dijab_ab_x(i,j,a,b)
            etmp += etemp

      ENDPARDO i, j, a, b
#bgn_debug
#     esum *= 1.0
#end_debug
      execute sip_barrier 
      collective esum += etmp
      execute print_scalar esum
#
      ENDPROC S2DIJAB_X

      PROC S2DIBJA_X
#
      esum = 0.0
      etmp = 0.0
      PARDO i, i1, a, a1
#
            REQUEST Dibja_aaaa_x(i,a,i1,a1) a
#            execute dump_amp Dibja_aaaa_x(i,a,i1,a1) 
            etemp = Dibja_aaaa_x(i,a,i1,a1)*Dibja_aaaa_x(i,a,i1,a1)
            etmp += etemp
#
      ENDPARDO i, i1, a, a1
#bgn_debug
#      esum *= 1.0
#end_debug
      execute sip_barrier 
      collective esum += etmp
      execute print_scalar esum
#
      esum = 0.0
      etmp = 0.0
      PARDO j, j1, b, b1
#
            REQUEST Dibja_bbbb_x(j,b,j1,b1) b
#            execute dump_amp Dibja_bbbb_x(j,b,j1,b1)
            etemp = Dibja_bbbb_x(j,b,j1,b1)*Dibja_bbbb_x(j,b,j1,b1)
            etmp += etemp
#
      ENDPARDO j, j1, b, b1
      execute sip_barrier 
      collective esum += etmp
      execute print_scalar esum
#
      esum = 0.0 
      etmp = 0.0
      PARDO i, i1, b, b1
#
            REQUEST Dibja_abab_x(i,b,i1,b1) b
#            execute dump_amp Dibja_abab_x(i,b,i1,b1) 
            etemp = Dibja_abab_x(i,b,i1,b1)*Dibja_abab_x(i,b,i1,b1)
            etmp += etemp
#
      ENDPARDO i, i1, b, b1
#bgn_debug
#      esum *= 1.0
#end_debug
      execute sip_barrier 
      collective esum += etmp
      execute print_scalar esum
#
      esum = 0.0
      etmp = 0.0
      PARDO j, j1, a, a1
#
            REQUEST Dibja_baba_x(j,a,j1,a1) a
#            execute dump_amp Dibja_baba_x(j,a,j1,a1)
            etemp = Dibja_baba_x(j,a,j1,a1)*Dibja_baba_x(j,a,j1,a1)
            etmp += etemp
#
      ENDPARDO j, j1, a, a1
#bgn_debug
      esum *= 1.0
#end_debug
      execute sip_barrier 
      collective esum += etmp
      execute print_scalar esum
#
      esum = 0.0
      etmp = 0.0
      PARDO i, j, a, b
#
            REQUEST Dibja_abba_x(i,b,j,a) a
#            execute dump_amp Dibja_abba_x(i,b,j,a) 
            etemp = Dibja_abba_x(i,b,j,a)*Dibja_abba_X(i,b,j,a)
            etmp += etemp
      ENDPARDO i, j, a, b
#bgn_debug
      esum *= 1.0
#end_debug
      execute sip_barrier 
      collective esum += etmp
      execute print_scalar esum
#
      esum = 0.0
      etmp = 0.0
      PARDO i, j, a, b 
#
            REQUEST Dibja_baab_x(j,a,i,b) a 
#            execute dump_amp Dibja_baab_x(j,a,i,b) 
            etemp = Dibja_baab_x(j,a,i,b)*Dibja_baab_x(j,a,i,b)
            etmp += etemp
#
      ENDPARDO i, j, a, b
#bgn_debug
      esum *= 1.0
#end_debug
      execute sip_barrier 
      collective esum += etmp
      execute print_scalar esum
#
      ENDPROC S2DIBJA_X

      PROC S2DIBJA 
#
      esum = 0.0 
      PARDO i, i1, a, a1  
#
            REQUEST Dibja_aaaa(i,a,i1,a1) a  
            etemp = Dibja_aaaa(i,a,i1,a1)*Dibja_aaaa(i,a,i1,a1)
            esum += etemp
#            
      ENDPARDO i, i1, a, a1 
      execute print_scalar esum 
#
      esum = 0.0 
      PARDO j, j1, b, b1  
#
            REQUEST Dibja_bbbb(j,b,j1,b1) b  
            etemp = Dibja_bbbb(j,b,j1,b1)*Dibja_bbbb(j,b,j1,b1)
            esum += etemp
#            
      ENDPARDO j, j1, b, b1 
      execute print_scalar esum 
#
      esum = 0.0 
      PARDO i, i1, b, b1  
#
            REQUEST Dibja_abab(i,b,i1,b1) b  
#            execute dump_amp Dibja_abab(i,b,i1,b1) 
            etemp = Dibja_abab(i,b,i1,b1)*Dibja_abab(i,b,i1,b1)
            esum += etemp
#            
      ENDPARDO i, i1, b, b1 
      execute print_scalar esum 
#
      esum = 0.0 
      PARDO j, j1, a, a1  
#
            REQUEST Dibja_baba(j,a,j1,a1) a  
            etemp = Dibja_baba(j,a,j1,a1)*Dibja_baba(j,a,j1,a1)
            esum += etemp
#            
      ENDPARDO j, j1, a, a1 
      execute print_scalar esum 
#
      esum = 0.0 
      PARDO i, j, a, b  
#
            REQUEST Dibja_abba(i,b,j,a) a  
            etemp = Dibja_abba(i,b,j,a)*Dibja_abba(i,b,j,a)
            esum += etemp
#            
      ENDPARDO i, j, a, b 
      execute print_scalar esum 
#
      esum = 0.0 
      PARDO i, j, a, b  
#
            REQUEST Dibja_baab(j,a,i,b) a  
            etemp = Dibja_baab(j,a,i,b)*Dibja_baab(j,a,i,b)
            esum += etemp
#            
      ENDPARDO i, j, a, b 
      execute print_scalar esum 
#
      ENDPROC S2DIBJA 
#------------------------------------------------------------------------
       PROC verify

       esuma   = 0.0
       ecorraa = 0.0
       PARDO mu, nu, lambda, sigma
             request Dxxxx_aaaa(mu,nu,lambda,sigma) sigma
             etemp = Dxxxx_aaaa(mu,nu,lambda,sigma)*Dxxxx_aaaa(mu,nu,lambda,sigma)
             esuma += etemp
       ENDPARDO mu, nu, lambda, sigma
       execute server_barrier
       collective ecorraa += esuma
       execute print_scalar ecorraa

       esuma   = 0.0
       ecorraa = 0.0
        PARDO mu, nu, lambda, sigma
              request Dxxxx_bbbb(mu,nu,lambda,sigma) sigma
              etemp = Dxxxx_bbbb(mu,nu,lambda,sigma)*Dxxxx_bbbb(mu,nu,lambda,sigma)
              esuma += etemp
        ENDPARDO mu, nu, lambda, sigma
        execute server_barrier
        collective ecorraa += esuma
        execute print_scalar ecorraa

        esuma   = 0.0
        ecorraa = 0.0
        PARDO mu, nu, lambda, sigma
              request Dxxxx_abab(mu,nu,lambda,sigma) sigma
              etemp = Dxxxx_abab(mu,nu,lambda,sigma)*Dxxxx_abab(mu,nu,lambda,sigma)
              esuma += etemp
        ENDPARDO mu, nu, lambda, sigma
        execute server_barrier
        collective ecorraa += esuma
        execute print_scalar ecorraa

        esuma   = 0.0
        ecorraa = 0.0
        PARDO mu, nu, lambda, sigma
              request Dxxxx_baba(mu,nu,lambda,sigma) sigma
              etemp = Dxxxx_baba(mu,nu,lambda,sigma)*Dxxxx_baba(mu,nu,lambda,sigma)
              esuma += etemp
         ENDPARDO mu, nu, lambda, sigma
         execute server_barrier
         collective ecorraa += esuma
         execute print_scalar ecorraa
     ENDPROC verify
#-------------------------------------------------------------
#bgn_debug
      PROC verify_x
#     -------------
         esuma   = 0.0
         ecorraa = 0.0
         PARDO mu, nu, lambda, sigma
              request Dxxxx_aaaa_x(mu,nu,lambda,sigma) sigma
              etemp = Dxxxx_aaaa_x(mu,nu,lambda,sigma)*Dxxxx_aaaa_x(mu,nu,lambda,sigma)
              esuma += etemp
           ENDPARDO mu, nu, lambda, sigma
           execute server_barrier
           collective ecorraa += esuma
           execute print_scalar ecorraa

          esuma   = 0.0
          ecorraa = 0.0
          PARDO mu, nu, lambda, sigma
              request Dxxxx_bbbb_x(mu,nu,lambda,sigma) sigma
              etemp = Dxxxx_bbbb_x(mu,nu,lambda,sigma)*Dxxxx_bbbb_x(mu,nu,lambda,sigma)
              esuma += etemp
          ENDPARDO mu, nu, lambda, sigma
          execute server_barrier
          collective ecorraa += esuma
          execute print_scalar ecorraa

          esuma   = 0.0
          ecorraa = 0.0
          PARDO mu, nu, lambda, sigma
              request Dxxxx_abab_x(mu,nu,lambda,sigma) sigma
              etemp = Dxxxx_abab_x(mu,nu,lambda,sigma)*Dxxxx_abab_x(mu,nu,lambda,sigma)
              esuma += etemp
          ENDPARDO mu, nu, lambda, sigma
          execute server_barrier
          collective ecorraa += esuma
          execute print_scalar ecorraa
          esuma   = 0.0
          ecorraa = 0.0
           PARDO mu, nu, lambda, sigma
              request Dxxxx_baba_x(mu,nu,lambda,sigma) sigma
              etemp = Dxxxx_baba_x(mu,nu,lambda,sigma)*Dxxxx_baba_x(mu,nu,lambda,sigma)
              esuma += etemp
           ENDPARDO mu, nu, lambda, sigma
           execute server_barrier
          collective ecorraa += esuma
          execute print_scalar ecorraa

     ENDPROC verify_x
#enddbug
#------------------------------------------------------

     PROC GET_2P_SPIN_ORBIT_INTS
#    ---------------------------

     PARDO mu, nu, lambda, sigma

               EXECUTE COMPUTE_2SOI_XBATCH TAO_2P_SOI_X(mu, nu, lambda, sigma)
               EXECUTE COMPUTE_2SOI_YBATCH TAO_2P_SOI_Y(mu, nu, lambda, sigma)
               EXECUTE COMPUTE_2SOI_ZBATCH TAO_2P_SOI_Z(mu, nu, lambda, sigma)

               PREPARE AO_2P_SOI_X(mu, nu, lambda, sigma) = TAO_2P_SOI_X(mu, nu, lambda, sigma)

               PREPARE AO_2P_SOI_Y(mu, nu, lambda, sigma) = TAO_2P_SOI_Y(mu, nu, lambda, sigma)

               PREPARE AO_2P_SOI_Z(mu, nu, lambda, sigma) = TAO_2P_SOI_Z(mu, nu, lambda, sigma)

     ENDPARDO mu, nu, lambda, sigma

     EXECUTE SERVER_BARRIER

     ENDPROC GET_2P_SPIN_ORBIT_INTS
#    -------------------------------

     PROC GET_2P_ERI_INTS
#    --------------------

     PARDO mu, nu, lambda, sigma

               COMPUTE_INTEGRALS TAO_ERI_INTS(mu, nu, lambda, sigma)
               PREPARE AO_ERI_INTS(mu, nu, lambda, sigma) = TAO_ERI_INTS(mu, nu, lambda, sigma)

     ENDPARDO mu, nu, lambda, sigma

     EXECUTE SERVER_BARRIER

     ENDPROC GET_2P_ERI_INTS
#    -----------------------

     PROC GET_2P_DSHIELD_INTS
#    ------------------------

     PARDO mu, nu, lambda, sigma

# XX, XY, XZ components

               EXECUTE COMPUTE_2DSHIELD_XXBATCH TAO_2P_DSHIELD_XX(mu, nu, lambda, sigma)
               PREPARE AO_2P_DSHIELD_XX(mu, nu, lambda, sigma) = TAO_2P_DSHIELD_XX(mu, nu, lambda, sigma)

               EXECUTE COMPUTE_2DSHIELD_XYBATCH TAO_2P_DSHIELD_XY(mu, nu, lambda, sigma)
               PREPARE AO_2P_DSHIELD_XY(mu, nu, lambda, sigma) = TAO_2P_DSHIELD_XY(mu, nu, lambda, sigma)

               EXECUTE COMPUTE_2DSHIELD_XZBATCH TAO_2P_DSHIELD_XZ(mu, nu, lambda, sigma)
               PREPARE AO_2P_DSHIELD_XZ(mu, nu, lambda, sigma) = TAO_2P_DSHIELD_XZ(mu, nu, lambda, sigma)

# YX, YY, YZ components

               EXECUTE COMPUTE_2DSHIELD_YXBATCH TAO_2P_DSHIELD_YX(mu, nu, lambda, sigma)
               PREPARE AO_2P_DSHIELD_YX(mu, nu, lambda, sigma) = TAO_2P_DSHIELD_YX(mu, nu, lambda, sigma)

               EXECUTE COMPUTE_2DSHIELD_YYBATCH TAO_2P_DSHIELD_YY(mu, nu, lambda, sigma)
               PREPARE AO_2P_DSHIELD_YY(mu, nu, lambda, sigma) = TAO_2P_DSHIELD_YY(mu, nu, lambda, sigma)

               EXECUTE COMPUTE_2DSHIELD_YZBATCH TAO_2P_DSHIELD_YZ(mu, nu, lambda, sigma)
               PREPARE AO_2P_DSHIELD_YZ(mu, nu, lambda, sigma) = TAO_2P_DSHIELD_YZ(mu, nu, lambda, sigma)

# ZX, ZY, ZZ components

               EXECUTE COMPUTE_2DSHIELD_ZXBATCH TAO_2P_DSHIELD_ZX(mu, nu, lambda, sigma)
               PREPARE AO_2P_DSHIELD_ZX(mu, nu, lambda, sigma) = TAO_2P_DSHIELD_ZX(mu, nu, lambda, sigma)

               EXECUTE COMPUTE_2DSHIELD_ZYBATCH TAO_2P_DSHIELD_ZY(mu, nu, lambda, sigma)
               PREPARE AO_2P_DSHIELD_ZY(mu, nu, lambda, sigma) = TAO_2P_DSHIELD_ZY(mu, nu, lambda, sigma)

               EXECUTE COMPUTE_2DSHIELD_ZZBATCH TAO_2P_DSHIELD_ZZ(mu, nu, lambda, sigma)
               PREPARE AO_2P_DSHIELD_ZZ(mu, nu, lambda, sigma) = TAO_2P_DSHIELD_ZZ(mu, nu, lambda, sigma)

     ENDPARDO mu, nu, lambda, sigma

     EXECUTE SERVER_BARRIER

     ENDPROC GET_2P_DSHIELD_INTS
#    ---------------------------

#bgn_debug
     PROC PICK_TL
#   ---------------

      PARDO I, A
            GET T1a_old(A,I)
            Get L1a_old(i,a)
            Tai(A,I) = T1a_old(A,I)
            Tia(i,a) = L1a_old(i,a)
            PUT T1a_old_x(A,I) = Tai(A,I)
            PUT L1a_old_x(I,A) = Tia(i,a)
      ENDPARDO I, A

      PARDO J, B
            GET T1b_old(B,J)
            Get L1b_old(J,B)
            Tbj(B,J) = T1b_old(B,J)
            Tjb(J,B) = L1b_old(J,B)
            PUT T1b_old_x(B,J) = Tbj(B,J)
            PUT L1b_old_x(J,B) = Tjb(J,B)
      ENDPARDO J,B

      PARDO A, A1, I, I1
            REQUEST T2old_aa(A,I,A1,I1) I1
            REQUEST L2old_aa(i,a,i1,a1) a1
            Taiai(A,I,A1,I1) = T2old_aa(A,I,A1,I1)
            Tiaia(i,a,i1,a1) = L2old_aa(i,a,i1,a1)
            PREPARE T2old_aa_X(A,I,A1,I1) = Taiai(A,I,A1,I1)
            PREPARE L2old_aa_X(I,A,I1,A1) = Tiaia(i,a,i1,a1)
      ENDPARDO A, A1, I, I1,

      PARDO B, B1, J, J1
            REQUEST T2old_bb(B,J,B1,J1) J1
            REQUEST L2old_bb(j,b,j1,b1) b1
            Tbjbj(B,J,B1,J1) = T2old_bb(B,J,B1,J1)
            Tjbjb(j,b,j1,b1) = L2old_bb(j,b,j1,b1)
            PREPARE T2old_bb_X(B,J,B1,J1)= Tbjbj(B,J,B1,J1)
            PREPARE  L2old_bb_X(J,B,J1,B1)= Tjbjb(j,b,j1,b1)
      ENDPARDO B, B1, J, J1

      PARDO A, B, I, J
            REQUEST T2old_ab(A,I,B,J) J
            REQUEST L2old_ab(i,a,j,b) b
            Taibj(A,I,B,J) = T2old_ab(A,I,B,J)
            Tiajb(i,a,j,b) = L2old_ab(i,a,j,b)
            PREPARE T2old_ab_X(A,I,B,J) = Taibj(A,I,B,J)
            PREPARE L2old_ab_x(i,a,j,b) = Tiajb(i,a,j,b)
      ENDPARDO A, B, I, J,

      EXECUTE SERVER_BARRIER

      ENDPROC PICK_TL
#     ---------------
#end_debug
      
     PROC PICK_PERT_T_X
#    ------------------

      PARDO I, A
            GET T1a_x(A,I)
            Get L1a_x(i,a)
            Tai(A,I) = T1a_x(A,I)
            Tia(i,a) = L1a_x(i,a)
            PUT T1a_old_x(A,I) = Tai(A,I)
            PUT L1a_old_x(I,A) = Tia(i,a)
      ENDPARDO I, A

      PARDO J, B
            GET T1b_x(B,J)
            Get L1b_x(J,B)
            Tbj(B,J) = T1b_x(B,J)
            Tjb(J,B) = L1b_x(J,B)
            PUT T1b_old_x(B,J) = Tbj(B,J)
            PUT L1b_old_x(J,B) = Tjb(J,B)
      ENDPARDO J,B

      PARDO A, A1, I, I1
            REQUEST T2aa_X(A,I,A1,I1) I1
            REQUEST L2aa_x(i,a,i1,a1) a1
            Taiai(A,I,A1,I1) = T2aa_X(A,I,A1,I1)
            Tiaia(i,a,i1,a1) = L2aa_x(i,a,i1,a1)
            PREPARE T2old_aa_X(A,I,A1,I1) = Taiai(A,I,A1,I1)
            PREPARE L2old_aa_X(I,A,I1,A1) = Tiaia(i,a,i1,a1)
      ENDPARDO A, A1, I, I1,

      PARDO B, B1, J, J1
            REQUEST T2bb_X(B,J,B1,J1) J1
            REQUEST L2bb_x(j,b,j1,b1) b1
            Tbjbj(B,J,B1,J1) = T2bb_X(B,J,B1,J1)
            Tjbjb(j,b,j1,b1) = L2bb_x(j,b,j1,b1)           
            PREPARE T2old_bb_X(B,J,B1,J1)= Tbjbj(B,J,B1,J1)
            PREPARE  L2old_bb_X(J,B,J1,B1)= Tjbjb(j,b,j1,b1)
      ENDPARDO B, B1, J, J1
 
      PARDO A, B, I, J
            REQUEST T2ab_X(A,I,B,J) J
            REQUEST L2ab_x(i,a,j,b) b
            Taibj(A,I,B,J) = T2ab_X(A,I,B,J)
            Tiajb(i,a,j,b) = L2ab_x(i,a,j,b)
            PREPARE T2old_ab_X(A,I,B,J) = Taibj(A,I,B,J)
            PREPARE L2old_ab_x(i,a,j,b) = Tiajb(i,a,j,b)
      ENDPARDO A, B, I, J,

      EXECUTE SERVER_BARRIER

#bgn_debug
#       execute get_my_rank rank
#       if rank == 0.0
#          do i 
#          do a
#            GET T1a_old_x(A,I)
#            GET L1a_old_x(I,A) 
#             execute dump_amp T1a_old_x(A,I)
#             execute dump_amp L1a_old_x(I,A) 
#          enddo a
#          enddo i
#       endif 
#end_debug

      ENDPROC PICK_PERT_T_X
#     ---------------------

     PROC PICK_PERT_T_Y
#    ------------------

      PARDO I, A
            GET T1a_Y(A,I)
            Get L1a_Y(i,a)
            Tai(A,I) = T1a_Y(A,I)
            Tia(i,a) = L1a_Y(i,a)
            PUT T1a_old_x(A,I) = Tai(A,I)
            PUT L1a_old_x(I,A) = Tia(i,a)
      ENDPARDO I, A

      PARDO J, B
            GET T1b_Y(B,J)
            Get L1b_Y(J,B)
            Tbj(B,J) = T1b_Y(B,J)
            Tjb(J,B) = L1b_Y(J,B)
            PUT T1b_old_x(B,J) = Tbj(B,J)
            PUT L1b_old_x(J,B) = Tjb(J,B)
      ENDPARDO J,B

      PARDO A, A1, I, I1
            REQUEST T2aa_Y(A,I,A1,I1) I1
            REQUEST L2aa_Y(i,a,i1,a1) a1
            Taiai(A,I,A1,I1) = T2aa_Y(A,I,A1,I1)
            Tiaia(i,a,i1,a1) = L2aa_Y(i,a,i1,a1)
            PREPARE T2old_aa_X(A,I,A1,I1) = Taiai(A,I,A1,I1)
            PREPARE L2old_aa_X(I,A,I1,A1) = Tiaia(i,a,i1,a1)
      ENDPARDO A, A1, I, I1,

      PARDO B, B1, J, J1
            REQUEST T2bb_Y(B,J,B1,J1) J1
            REQUEST L2bb_Y(j,b,j1,b1) b1
            Tbjbj(B,J,B1,J1) = T2bb_Y(B,J,B1,J1)
            Tjbjb(j,b,j1,b1) = L2bb_Y(j,b,j1,b1)
            PREPARE T2old_bb_X(B,J,B1,J1)= Tbjbj(B,J,B1,J1)
            PREPARE L2old_bb_X(J,B,J1,B1)= Tjbjb(j,b,j1,b1)
      ENDPARDO B, B1, J, J1

      PARDO A, B, I, J
            REQUEST T2ab_Y(A,I,B,J) J
            REQUEST L2ab_Y(i,a,j,b) b
            Taibj(A,I,B,J) = T2ab_Y(A,I,B,J)
            Tiajb(i,a,j,b) = L2ab_Y(i,a,j,b)
            PREPARE T2old_ab_X(A,I,B,J) = Taibj(A,I,B,J)
            PREPARE L2old_ab_x(i,a,j,b) = Tiajb(i,a,j,b)
      ENDPARDO A, B, I, J,

      EXECUTE SERVER_BARRIER

      ENDPROC PICK_PERT_T_Y
#     ---------------------

     PROC PICK_PERT_T_Z
#    ------------------

      PARDO I, A
            GET T1a_Z(A,I)
            Get L1a_Z(i,a)
            Tai(A,I) = T1a_Z(A,I)
            Tia(i,a) = L1a_Z(i,a)
            PUT T1a_old_x(A,I) = Tai(A,I)
            PUT L1a_old_x(I,A) = Tia(i,a)
      ENDPARDO I, A

      PARDO J, B
            GET T1b_Z(B,J)
            Get L1b_Z(J,B)
            Tbj(B,J) = T1b_Z(B,J)
            Tjb(J,B) = L1b_Z(J,B)
            PUT T1b_old_x(B,J) = Tbj(B,J)
            PUT L1b_old_x(J,B) = Tjb(J,B)
      ENDPARDO J,B

      PARDO A, A1, I, I1
            REQUEST T2aa_Z(A,I,A1,I1) I1
            REQUEST L2aa_Z(i,a,i1,a1) a1
            Taiai(A,I,A1,I1) = T2aa_Z(A,I,A1,I1)
            Tiaia(i,a,i1,a1) = L2aa_Z(i,a,i1,a1)
            PREPARE T2old_aa_X(A,I,A1,I1) = Taiai(A,I,A1,I1)
            PREPARE L2old_aa_X(I,A, I1,A1) = Tiaia(i,a,i1,a1)
      ENDPARDO A, A1, I, I1,

      PARDO B, B1, J, J1
            REQUEST T2bb_Z(B,J,B1,J1) J1
            REQUEST L2bb_Z(j,b,j1,b1) b1
            Tbjbj(B,J,B1,J1) = T2bb_Z(B,J,B1,J1)
            Tjbjb(j,b,j1,b1) = L2bb_Z(j,b,j1,b1)
            PREPARE T2old_bb_X(B,J,B1,J1)= Tbjbj(B,J,B1,J1)
            PREPARE L2old_bb_X(J,B,J1,B1)= Tjbjb(j,b,j1,b1)
      ENDPARDO B, B1, J, J1

      PARDO A, B, I, J
            REQUEST T2ab_Z(A,I,B,J) J
            REQUEST L2ab_Z(i,a,j,b) b
            Taibj(A,I,B,J) = T2ab_Z(A,I,B,J)
            Tiajb(i,a,j,b) = L2ab_Z(i,a,j,b)
            PREPARE T2old_ab_X(A,I,B,J) = Taibj(A,I,B,J)
            PREPARE L2old_ab_X(i,a,j,b) = Tiajb(i,a,j,b)
      ENDPARDO A, B, I, J,

      EXECUTE SERVER_BARRIER

     ENDPROC PICK_PERT_T_Z
#    ------------------

     PROC  ZERO_AOD_BLOCKS
#    ---------------------
#IJKL,IJKA, IJAB

     PARDO mu, nu, i2, i3
           Tiixx(i2,i3,mu,nu) = 0.0
           PREPARE Diixx_x(i2,i3,mu,nu) = Tiixx(i2,i3,mu,nu)
     ENDPARDO mu, nu, i2, i3
     
     PARDO nu, j2, j3, mu 
            Tjjxx(j2,j3,mu,nu) = 0.0
            PREPARE Djjxx_x(j2,j3,mu,nu) = Tjjxx(j2,j3,mu,nu)
     ENDPARDO nu, j2, j3, mu 

     PARDO i1, nu, j1, mu
            Tijxx(i1,j1,mu,nu) = 0.0
            PREPARE Dijxx_x(i1,j1,mu,nu) = Tijxx(i1,j1,mu,nu)
     ENDPARDO i1, nu, j1, mu
#end
#ABCI (AAAA)
     PARDO mu,a1,a2,i
           Txaai(mu,a1,a2,i) = 0.0
           PREPARE Dxaai_x(mu,a1,a2,i) = Txaai(mu,a1,a2,i) 
     ENDPARDO mu,a1,a2,i

     PARDO mu,nu,a2,i 
           Txxai(mu,nu,a2,i) = 0.0
           PREPARE Dxxai_x(mu,nu,a2,i) = Txxai(mu,nu,a2,i)
     ENDPARDO mu,nu,a2,i 
#BBBB

     PARDO mu,b1,b2,j
            Txbbj(mu,b1,b2,j) = 0.0
            PREPARE Dxbbj_x(mu,b1,b2,j) = Txbbj(mu,b1,b2,j)
     ENDPARDO mu,b1,b2,j
   
     PARDO mu,nu,b2,j
            Txxbj(mu,nu,b2,j) = 0.0
            PREPARE Dxxbj_x(mu,nu,b2,j) = Txxbj(mu,nu,b2,j)
     ENDPARDO mu,nu,b2,j
#BABA

     PARDO mu,a,b,i
           Txabi(mu,a,b,i) = 0.0
           PREPARE Dxabi_x(mu,a,b,i) = Txabi(mu,a,b,i)
     ENDPARDO mu,a,b,i
    
     PARDO mu,nu,b1,i
           Txxbi(mu,nu,b1,i) = 0
           PREPARE Dxxbi_x(mu,nu,b1,i) = Txxbi(mu,nu,b1,i)
     ENDPARDO mu,nu,b1,i
#ABAB

     PARDO  mu,b,a1,j
            Txbaj(mu,b,a1,j) = 0.0
            PREPARE Dxbaj_x(mu,b,a1,j) = Txbaj(mu,b,a1,j)
     ENDPARDO mu,b,a1,j

     PARDO mu,nu,a1,j
           Txxaj(mu,nu,a1,j) = 0
           PREPARE Dxxaj_x(mu,nu,a1,j) = Txxaj(mu,nu,a1,j)
     ENDPARDO mu, nu, a1, j
#ABCi(end)

#IJKA
     PARDO i,i1,i2,sigma 
           Tiiix(i,i1,i2,sigma) = 0.0
           PREPARE Diiix_x(i,i1,i2,sigma) = Tiiix(i,i1,i2,sigma)
     ENDPARDO i,i1,i2,sigma 
              
     PARDO j,j1,j2,sigma 
            Tjjjx(j,j1,j2,sigma) = 0.0
            PREPARE Djjjx_x(j,j1,j2,sigma) = Tjjjx(j,j1,j2,sigma)
     ENDPARDO j,j1,j2,sigma

     PARDO i, j, i1, sigma
           Tijix(i,j,i1,sigma) = 0.0
           PREPARE Dijix_x(i,j,i1,sigma) = Tijix(i,j,i1,sigma)
     ENDPARDO i, j, i1, sigma

     PARDO j,i,j1,sigma
           Tjijx(j,i,j1,sigma) = 0.0
           PREPARE Djijx_x(j,i,j1,sigma) = Tjijx(j,i,j1,sigma)
     ENDPARDO j,i,j1,sigma

#IJKA(end)
     
#IBJA(AAA,ABAB)

     PARDO sigma, nu, i, i1
           Tixix(i,nu,i1,sigma) = 0.0
           Txiix(nu,i,i1,sigma) = 0.0
           PREPARE Dixix_x(i,nu,i1,sigma) = Tixix(i,nu,i1,sigma)
           PREPARE Dxiix_x(nu,i,i1,sigma) = Txiix(nu,i,i1,sigma)
     ENDPARDO sigma, nu, i, i1
#BBBB,BABA 
     PARDO sigma, nu, j, j1 
            Txjjx(nu,j,j1,sigma) = 0.0
            Tjxjx(j,nu,j1,sigma) = 0.0
            PREPARE Djxjx_x(j,nu,j1,sigma) = Tjxjx(j,nu,j1,sigma)
            PREPARE Dxjjx_x(nu,j,j1,sigma) = Txjjx(nu,j,j1,sigma)
     ENDPARDO sigma, nu, j, j1
#BAAB,ABBA
     PARDO sigma, nu, j, i1
            Tixxj(i1,sigma,nu,j) = 0.0
            PREPARE Dixxj_x(i1,sigma,nu,j) = Tixxj(i1,sigma,nu,j)
     ENDPARDO sigma, nu, j, i1
#IBJA(end)

#PREPARE Dxxai_x(mu,nu,a2,i) = Txxai(mu,nu,a2,i)
#PREPARE Dxxbj_x(mu,nu,b2,j) = Txxbj(mu,nu,b2,j)
#PREPARE Djijx_x(j,i,j1,sigma) = Tjijx(j,i,j1,sigma) 

     EXECUTE SERVER_BARRIER 
#
     ENDPROC  ZERO_AOD_BLOCKS
#    ---------------------
#___________________________________________________
#
      PROC DMAIN

         CREATE T1A_OLD_X
         CREATE L1A_OLD_X
         CREATE T1B_OLD_X
         CREATE L1B_OLD_X
         CREATE HF_SPN_DEN
         CREATE COR_SPN_DEN
         CREATE HF_TOT_DEN
         CREATE COR_TOT_DEN

         EXECUTE SIP_BARRIER

         CALL TAU 
         CALL GAE 
         CALL GMI 
         execute server_barrier

         CALL DPQRSTODXXXX                                                   
         CALL DIBJA                               
#bgn_debug
#         CALL S2DIBJA
#end_debug
         CALL DIJKL                                          
#bgn_debug
#         CALL S2DIJKL
#end_debug
         CALL DIJAB
#bgn_debug
#         CALL S2DIJAB
#end_debug
         CALL DIJKA                                                 
#bgn_debug
#         CALL S2DIJKA
#end_debug
         CALL DABCI                                               
#bgn_debug
#         CALL S2ABCI
#end_debug

         execute server_barrier 

# Set the property type based on the input key-word

         do_pols = polarizability
         do_aten = a_tensor
         do_gten = g_tensor
         do_dten = d_tensor

# Notcie that 10.0 is used here for g-tensor (in T,L_xyz 10.0 is for
# polarizablities)

         if do_gten == 1.00
            property      = 10.0
            beta_is_minus =  0.0
            ASYM          =  1.0
            Fact          = -1.0 
            Pone          =  1.0
            Mone          = -1.0
            Pthalf        =  0.75
            Mthalf        = -0.75
            Phalf         =  0.5
            Mhalf         = -0.5
            Null          =  0.0
#bgn_debug
#         property = 30.0
#         beta_is_minus = 100.0
#end_debug
         endif

         execute print_scalar property

         if property == 10.0

            CALL GET_2P_SPIN_ORBIT_INTS
 
            CALL GET_2P_ERI_INTS
            CALL GET_2P_DSHIELD_INTS

         endif

#bgn_debug
#         property = 20.0
#         Fact     = -1.0
#         Pone     = 1.0
#         Mone     = -1.0
#end_debug
#
# Compute the contributions to g-tensor from the zeroth-order two-particle
# density. Overall, the g-tensor is second-order property, so for these 
# contrbutions are from the second-order interactions (two-particle 
# diamagnetic shielding operator). Form the spin-densities. 

        CALL FORM_SPN_TOT_DENS

        CALL PDCONT_HF
        CALL PDCONT 
#
#bgn_debug
#      suma=0.0
#      sumb=0.0
#   
#      PARDO mu, nu, lambda, sigma
#            Txxxx(mu,nu,lambda,sigma) = 0.0
#
#            REQUEST AO_2P_SOI_X(mu, nu, lambda, sigma) sigma
#            REQUEST AO_2P_SOI_Y(mu, nu, lambda, sigma) sigma
#            REQUEST AO_2P_SOI_Z(mu, nu, lambda, sigma) sigma  
#            GET DpqA_x(mu,lambda)
#            GET DpqB_x(mu,lambda)
#            GET DHFA(nu,sigma)
#            GET DHFB(nu,sigma)
#            GET DHFA(nu,lambda)
#            GET DHFB(mu,sigma)
#  
#            T1xxxx(mu,nu,lambda,sigma) = DpqA_x(mu,lambda)^DHFA(nu,sigma)
#            T1xxxx(mu,nu,lambda,sigma)*= 3.0
#            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
#            T1xxxx(mu,nu,lambda,sigma) = DpqB_x(mu,lambda)^DHFB(nu,sigma)
#            T1xxxx(mu,nu,lambda,sigma)*= -3.0
#            Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
#            T1xxxx(mu,nu,lambda,sigma) = DpqA_x(mu,lambda)^DHFB(nu,sigma)
#            T1xxxx(mu,nu,lambda,sigma)*= -0.5
#
#
#            T1xxxx(mu,nu,lambda,sigma) = DpqB_x(mu,lambda)^DHFA(nu,sigma)
#            T1xxxx(mu,nu,lambda,sigma)*= 0.5
#           Txxxx(mu,nu,lambda,sigma) += T1xxxx(mu,nu,lambda,sigma)
#
#exchange terms
#
#            T1xxxx(mu,nu,lambda,sigma) = DpqA_x(mu,sigma)^DHFA(nu,lambda)
#            T1xxxx(mu,nu,lambda,sigma)*= 1.5
#            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)
#
#            T1xxxx(mu,nu,lambda,sigma) = DpqA_x(nu,lambda)^DHFA(mu,sigma)
#            T1xxxx(mu,nu,lambda,sigma)*= 1.5
#            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)
#
#            T1xxxx(mu,nu,lambda,sigma) = DpqB_x(mu,sigma)^DHFB(nu,lambda)
#            T1xxxx(mu,nu,lambda,sigma)*= -1.5
#            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)
#
#            T1xxxx(mu,nu,lambda,sigma) = DpqB_x(nu,lambda)^DHFB(mu,sigma)
#            T1xxxx(mu,nu,lambda,sigma)*= -1.5
#            Txxxx(mu,nu,lambda,sigma) -= T1xxxx(mu,nu,lambda,sigma)
#
#
#            tmp = AO_2P_SOI_X(mu, nu, lambda, sigma)*Txxxx(mu, nu, lambda, sigma)
#            suma +=tmp
#
#      ENDPARDO mu, nu, lambda, sigma
#      EXECUTE SERVER_BARRIER 
#      COLLECTIVE sumaa +=suma
#      execute print_scalar sumaa
#end_debug
# Loop over perturbation statrs here.

         NCOUNT = 0.0

          DO NPERT 
             
             X_COMP = 0.0
             Y_COMP = 0.0
             Z_COMP = 0.0

             NCOUNT += 1.0
#             NCOUNT = 3.0
             execute print_scalar Ncount

             IF NCOUNT == 1.0
                X_COMP = 9.0
             ENDIF

             IF NCOUNT == 2.0
                Y_COMP = 9.0
             ENDIF

             IF NCOUNT == 3.0
                Z_COMP = 9.0
             ENDIF

# Get the pertrurbed T amplitudes

             IF NCOUNT == 1.0
#bgn_debug
#               CALL PICK_TL
#end_debug
                CALL PICK_PERT_T_X
             ENDIF

             IF NCOUNT == 2.0
                CALL PICK_PERT_T_Y
             ENDIF

             IF NCOUNT == 3.0
                CALL PICK_PERT_T_Z
             ENDIF
#bgn_debug
#      sum0 = 0.0
#      do a
#      do i
#         get t1a_old_x(a,i)
#         get l1a_old_x(i,a)
#         tmp  =  t1a_old_x(a,i) * t1a_old_x(a,i)
#         sum0 +=tmp
#         tmp  =  l1a_old_x(i,a) * l1a_old_x(i,a)
#          sum0 +=tmp
#      enddo i
#      enddo a
#      execute print_scalar sum0
#
#      suma = 0.0
#      sumb = 0.0
#      sumaa = 0.0
#      sumbb = 0.0
#
#      PARDO a, i, a2, i1
#            REQUEST T2old_aa_x(a,i,a2,i1) i1  # read from list
#             REQUEST L2old_aa_x(i,a,i1,a2) a2 # read from list
#             tmp = T2old_aa_x(a,i,a2,i1) * T2old_aa_x(a,i,a2,i1)
#             suma += tmp
#             tmp =  L2old_aa_x(i,a,i1,a2) * L2old_aa_x(i,a,i1,a2)
#             suma += tmp
#      ENDPARDO a, i, a2, i1
#
#      PARDO b1, j, b2, j1
#            REQUEST T2old_bb_x(b1,j,b2,j1) j1 # Read from the list
#            REQUEST L2old_bb_x(j,b1,j1,b2)  j1 # Read from the list
#            tmp = T2old_bb_x(b1,j,b2,j1) * T2old_bb_x(b1,j,b2,j1)
#            sumb += tmp
#            tmp = L2old_bb_x(j,b1,j1,b2) * L2old_bb_x(j,b1,j1,b2)
#            sumb += tmp
#       ENDPARDO b1, j, b2, j1
#       execute server_barrier
#       collective sumaa += suma
#       collective sumbb += sumb
#       execute print_scalar sumaa
#       execute print_scalar sumbb
#end_debug

             CREATE Gmi_a_x
             CREATE Gmi_b_x
             CREATE Gae_a_x
             CREATE Gae_b_x
             execute sip_barrier
                      
             CALL TAU_X
             CALL GAE_x
             CALL GMI_x

             CALL ZERO_AOD_BLOCKS

             execute server_barrier

# Construct Tau(mn,munu), Tau_x(mn,munu), L2(munu,ij) and L2_x(munu,ij)
# for D(ab,cd). No external factors. 

             CALL DPQRSTODXXXX_X
#
             CALL DIJKL_X   #1st term;checked
#bgn_debug
#             CALL S2DIJKL_X 
#end_debug
#(ij|kl)=(kl|ij) is used; factors are right.Vmnij is built

             CALL DIBJA_X   #5th term
#bgn_debug
#             CALL S2DIBJA_X 
#end_debug
#factors? Vbja is built

             CALL DIJKA_X   #2nd term;checked; factor?
#bgn_debug
#             CALL S2DIJKA_X 
#end_debug
#factors are right; no assumption are made;Vibja/vmnij isused.

             CALL DIJAB_X   #4th term
#bgn_debug
#             CALL S2DIJAB_X
#end_debug
             CALL DCIAB_X   #8th term
#bgn_debug
#             CALL S2ABCI_X 
#end_debug

#checked; there are questions about factor; No assumptions

             execute server_barrier

             IF NCOUNT == 1.0 
                CALL CCSD_2DRESPN_X
             ENDIF 
             IF NCOUNT == 2.0 
                CALL CCSD_2DRESPN_Y
             ENDIF
             IF NCOUNT == 3.0 
                CALL CCSD_2DRESPN_Z
             ENDIF 

             DELETE Gmi_a_x
             DELETE Gmi_b_x
             DELETE Gae_a_x
             DELETE Gae_b_x

          ENDDO NPERT 

          execute server_barrier

#bgn_debug
#          call verify_x
#end_debug

          IF PROPERTY == 10.0

# Need to check this sign change.

          D2SO_XX *= -1.0
          D2SO_XY *= -1.0
          D2SO_XZ *= -1.0
          D2SO_YX *= -1.0
          D2SO_YY *= -1.0
          D2SO_ZZ *= -1.0
          D2SO_ZX *= -1.0
          D2SO_ZY *= -1.0
          D2SO_ZZ *= -1.0

          DO XYZ 
             DO XYZ1
                IF XYZ == 1
                   IF XYZ1 == 1
                      G_TENSOR_2E_SOI(XYZ, XYZ1) = D2SO_XX
                      G_TENSOR_2E_DSH(XYZ, XYZ1) = E2GC_XX
                   ENDIF 
                   IF XYZ1 == 2
                      G_TENSOR_2E_SOI(XYZ, XYZ1) = D2SO_XY
                      G_TENSOR_2E_DSH(XYZ, XYZ1) = E2GC_XY
                   ENDIF 
                   IF XYZ1 == 3
                      G_TENSOR_2E_SOI(XYZ, XYZ1) = D2SO_XZ
                      G_TENSOR_2E_DSH(XYZ, XYZ1) = E2GC_XZ
                   ENDIF 
                ENDIF 

                IF XYZ == 2
                   IF XYZ1 == 1
                      G_TENSOR_2E_SOI(XYZ, XYZ1) = D2SO_YX
                      G_TENSOR_2E_DSH(XYZ, XYZ1) = E2GC_YX
                   ENDIF 
                   IF XYZ1 == 2
                      G_TENSOR_2E_SOI(XYZ, XYZ1) = D2SO_YY
                      G_TENSOR_2E_DSH(XYZ, XYZ1) = E2GC_YY
                   ENDIF 
                   IF XYZ1 == 3
                      G_TENSOR_2E_SOI(XYZ, XYZ1) = D2SO_YZ
                      G_TENSOR_2E_DSH(XYZ, XYZ1) = E2GC_YZ
                   ENDIF 
                ENDIF 

                IF XYZ == 3
                   IF XYZ1 == 1
                      G_TENSOR_2E_SOI(XYZ, XYZ1) = D2SO_ZX
                      G_TENSOR_2E_DSH(XYZ, XYZ1) = E2GC_ZX
                   ENDIF 
                   IF XYZ1 == 2
                      G_TENSOR_2E_SOI(XYZ, XYZ1) = D2SO_ZY
                      G_TENSOR_2E_DSH(XYZ, XYZ1) = E2GC_ZY
                   ENDIF 
                   IF XYZ1 == 3
                      G_TENSOR_2E_SOI(XYZ, XYZ1) = D2SO_ZZ
                      G_TENSOR_2E_DSH(XYZ, XYZ1) = E2GC_ZZ 
                   ENDIF 
                ENDIF 
             ENDDO XYZ1
          ENDDO XYZ

          IPOL = 716.0
          EXECUTE PRINT_REL_INFO IPOL G_TENSOR_2E_SOI
          IPOL = 717.0
          EXECUTE PRINT_REL_INFO IPOL G_TENSOR_2E_DSH

          ENDIF

      ENDPROC DMAIN

#________________________________________________________________
# Read converged T and Lambda amplitudes 

      CREATE Gmi_a
      CREATE Gmi_b
      CREATE Gae_a
      CREATE Gae_b

#      CREATE Gmi_a_x
#      CREATE Gmi_b_x
#      CREATE Gae_a_x
#      CREATE Gae_b_x

      CREATE Dij_b
      CREATE Dab_a
      CREATE Dab_b
      CREATE DpqA
      CREATE DpqB
      CREATE DhfA
      CREATE DhfB

      CREATE DpqA_x
      CREATE DpqB_x

      CREATE DpqA_y
      CREATE DpqB_y

      CREATE DpqA_z
      CREATE DpqB_z

      CREATE t1a_old 
      CREATE t1b_old 
      CREATE l1a_old 
      CREATE l1b_old 

      CREATE t1a_x
      CREATE t1b_x
      CREATE l1a_x
      CREATE l1b_x

      CREATE t1a_y
      CREATE t1b_y
      CREATE l1a_y
      CREATE l1b_y

      CREATE t1a_z
      CREATE t1b_z
      CREATE l1a_z
      CREATE l1b_z

      execute sip_barrier 
      execute server_barrier

#      execute server_barrier
#      execute list_to_blocks                VSpipi
#      execute list_to_blocks                Vaaii
#      execute list_to_blocks                Viaai
#      execute list_to_blocks                VSaaai
#      execute list_to_blocks                VSqjqj
#      execute list_to_blocks                Vbbjj
#      execute list_to_blocks                Vjbbj
#      execute list_to_blocks                VSbbbj
#      execute list_to_blocks                Vbbii
#      execute list_to_blocks                Vjbii
#      execute list_to_blocks                VBbai
#      execute list_to_blocks                Vpiqj
#      execute list_to_blocks                Vaajj
#      execute list_to_blocks                Viabj
#      execute list_to_blocks                Vaabj

      execute list_to_blocks t1a_old
      execute list_to_blocks t1b_old
      execute list_to_blocks T2old_aa
      execute list_to_blocks T2old_ab
      execute list_to_blocks T2old_bb

      execute list_to_blocks  l1a_old
      execute list_to_blocks  l1b_old
      execute list_to_blocks L2old_aa
      execute list_to_blocks L2old_ab
      execute list_to_blocks L2old_bb

      execute list_to_blocks  t1a_x
      execute list_to_blocks  t1b_x
      execute list_to_blocks  T2aa_x
      execute list_to_blocks  T2ab_x
      execute list_to_blocks  T2bb_x

      execute list_to_blocks  t1a_y
      execute list_to_blocks  t1b_y
      execute list_to_blocks  T2aa_y
      execute list_to_blocks  T2ab_y
      execute list_to_blocks  T2bb_y

      execute list_to_blocks  t1a_z
      execute list_to_blocks  t1b_z
      execute list_to_blocks  T2aa_z
      execute list_to_blocks  T2ab_z
      execute list_to_blocks  T2bb_z

      execute list_to_blocks  l1a_x
      execute list_to_blocks  l1b_x
      execute list_to_blocks L2aa_x
      execute list_to_blocks L2ab_x
      execute list_to_blocks L2bb_x

      execute list_to_blocks  l1a_y
      execute list_to_blocks  l1b_y
      execute list_to_blocks L2aa_y
      execute list_to_blocks L2ab_y
      execute list_to_blocks L2bb_y

      execute list_to_blocks  l1a_z
      execute list_to_blocks  l1b_z
      execute list_to_blocks L2aa_z
      execute list_to_blocks L2ab_z
      execute list_to_blocks L2bb_z

      execute list_to_blocks Dpqa
      execute list_to_blocks Dpqb
      
      execute list_to_blocks Dpqa_x 
      execute list_to_blocks Dpqb_x 

      execute list_to_blocks Dpqa_y
      execute list_to_blocks Dpqb_y

      execute list_to_blocks Dpqa_z
      execute list_to_blocks Dpqb_z

      execute read_list_to_blocks
      execute server_barrier 

      CALL HFDENS 
      CALL DMAIN 

      execute sip_barrier 
      etemp = 14.0
      execute print_rel_info etemp ca 

                    ENDSIAL CCSD_resp_2D
#--------------------------------------------------------------- 
