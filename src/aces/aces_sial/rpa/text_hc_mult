     PROC FORM_AO_R1AB_OLD
#    ---------------------

      PARDO MU, NU

        DO I

           DO A

              GET R1A_MO_P_CURRENT_R(A,I)
              GET R1A_MO_M_CURRENT_L(A,I)
  
              TAIP_R(A,I) = R1A_MO_P_CURRENT_R(A,I)
              TAIM_L(A,I) = R1A_MO_M_CURRENT_L(A,I)

              TXAP_T(MU,A) = TAIP_R(A,I) * CA(MU,I)
              TXAM_T(MU,A) = TAIM_L(A,I) * CA(MU,I)

              TXAP(MU,A)  += TXAP_T(MU,A)
              TXAM(MU,A)  += TXAM_T(MU,A)

           ENDDO A

           TXXP_T(MU,NU) = TXAP(MU,A) * CA(NU,A)
           TXXM_T(MU,NU) = TXAM(MU,A) * CA(NU,A)

           TXXP(MU,NU)  += TXXP_T(MU,NU)
           TXXM(MU,NU)  += TXXM_T(MU,NU)

        ENDDO I

        PUT R1A_AO_P_CURRENT_R(MU,NU) =  TXXP(MU,NU)
        PUT R1A_AO_M_CURRENT_L(MU,NU) =  TXXM(MU,NU)

      ENDPARDO MU, NU

      PARDO MU, NU

        DO J

           DO B

              GET R1B_MO_P_CURRENT_R(B,J)
              GET R1B_MO_M_CURRENT_L(B,J)

              TBJP_R(B,J) = R1B_MO_P_CURRENT_R(B,J)
              TBJM_L(B,J) = R1B_MO_M_CURRENT_L(B,J)

              TXBP_T(MU,B) = TBJP_R(B,J) * CB(MU,J)
              TXBM_T(MU,B) = TBJM_L(B,J) * CB(MU,J)

              TXBP(MU,B)  += TXBP_T(MU,B)
              TXBM(MU,B)  += TXBM_T(MU,B)

           ENDDO B

           TXXP_T(MU,NU) = TXBP(MU,B) * CB(NU,B)
           TXXM_T(MU,NU) = TXBM(MU,B) * CB(NU,B)

           TXXP(MU,NU)  += TXXP_T(MU,NU)
           TXXM(MU,NU)  += TXXM_T(MU,NU)

        ENDDO I

        PUT  R1B_AO_P_CURRENT_R(MU,NU) =  TXXP(MU,NU)
        PUT  R1B_AO_M_CURRENT_L(MU,NU) =  TXXM(MU,NU)

      ENDPARDO MU, NU

      execute sip_barrier 

     PROC FORM_AO_R1AB_OLD
#    ---------------------


    PROC FORM_APLUSB_R1AB
#   ---------------------

     PARDO MU, NU, LAMBDA

           DO SIGMA

              COMPUTE INTEGRALS AOINT(MU,NU,LAMBDA,SIGMA)

              TXXXX(MU,NU,LAMBDA,SIGMA) = AOINT(MU,NU,LAMBDA,SIGMA)
              TXXXX(MU,NU,LAMBDA,SIGMA) *= 2.0

              TP1XXXX(MU,SIGMA,LAMBDA,NU) = TXXXX(MU,NU,LAMBDA,SIGMA)
              TP2XXXX(MU,LAMBDA,SIGMA,NU) = TP1XXXX(MU,SIGMA,LAMBDA,NU)

              TP1XXXX(MU,NU,SIGMA,LAMBDA) -= TP2XXXX(MU,SIGMA,LAMBDA,NU)
              TPXXXX(MU,NU,LAMBDA,SIGMA)  += TP1XXXX(MU,NU,SIGMA,LAMBDA)

              PREPARE APBXXXX(MU,NU,LAMBDA,SIGMA) =  TXXXX(MU,NU,LAMBDA,SIGMA)

              TMXXXX(MU,LAMBDA,SIGMA,NU)  = TP2XXXX(MU,LAMBDA,SIGMA,NU)
                                         -= TP1XXXX(MU,SIGMA,LAMBDA,NU)

              PREPARE AMBXXXX(MU,NU,LAMBDA,SIGMA) =  TMXXXX(MU,NU,LAMBDA,SIGMA)

           DO SIGMA


     PARDO MU, NU, LAMBDA

     EXECUTE SEREVER_BARRIER

     ENDPROC FORM_APLUSB_R1AB
#    ------------------------

#    PROC HC_MULTIPLY
#    ----------------

     PARDO MU, NU, LAMBDA 

           GET R1A_AO_P_CURRENT_R(MU,NU) 
           GET R1A_AO_M_CURRENT_L(MU,NU)
           GET R1B_AO_P_CURRENT_R(MU,NU)
           GET R1B_AO_M_CURRENT_L(MU,NU) 

           TAXXP(MU,NU) = R1A_AO_P_CURRENT_R(MU,NU)
           TAXXM(MU,NU) = R1A_AO_M_CURRENT_M(MU,NU)
           TBXXP(MU,NU) = R1B_AO_P_CURRENT_R(MU,NU)
           TBXXM(MU,NU) = R1B_AO_M_CURRENT_M(MU,NU)

           REQUEST APBXXXX(MU,NU,LAMBDA,SIGMA) SIGMA 
           REQUEST AMBXXXX(MU,NU,LAMBDA,SIGMA) SIGMA 

           TPXXXX(MU,NU,LAMBDA,SIGMA) = APBXXXX(MU,NU,LAMBDA,SIGMA)
           TMXXXX(MU,NU,LAMBDA,SIGMA) = AMBXXXX(MU,NU,LAMBDA,SIGMA)

           TAPXX_INT(LAMBDA,SIGMA)  = TAXXP(MU,NU) * TPXXXX(MU,NU,LAMBDA,SIGMA)
           TAPXX(LAMBDA,SIGMA)     += TAPXX_INT(LAMBDA,SIGMA)

           TBPXX_INT(LAMBDA,SIGMA)  = TBXXP(MU,NU) * TPXXXX(MU,NU,LAMBDA,SIGMA)
           TBPXX(LAMBDA,SIGMA)     += TBPXX_INT(LAMBDA,SIGMA)

           TAMXX_INT(LAMBDA,SIGMA)  = TAXXM(MU,NU) * TMXXXX(MU,NU,LAMBDA,SIGMA)
           TAMXX(LAMBDA,SIGMA)     += TAMXX_INT(LAMBDA,SIGMA)

           TBMXX_INT(LAMBDA,SIGMA)  = TBXXM(MU,NU) * TMXXXX(MU,NU,LAMBDA,SIGMA)
           TBMXX(LAMBDA,SIGMA)     += TBMXX_INT(LAMBDA,SIGMA)

           PUT HR1A_AO_P_CURRENT_R(MU,NU) = TAPXX(LAMBDA,SIGMA) 
           PUT HR1A_AO_M_CURRENT_L(MU,NU) = TAMXX(LAMBDA,SIGMA)
           PUT HR1B_AO_P_CURRENT_R(MU,NU) = TBPXX(LAMBDA,SIGMA)
           PUT HR1B_AO_M_CURRENT_L(MU,NU) = TBMXX(LAMBDA,SIGMA)

     ENDPARDO MU, NU, LAMBDA 
         

#    ENDPROC HC_MULTIPLY
#    -------------------

     PROC FORM_AO_R1AB_OLD
#    ---------------------

     PARDO MU, NU

            GET HR1A_AO_P_CURRENT_R(NU,MU)
            GET HR1A_AO_M_CURRENT_L(NU,MU)

            TXXP(NU,MU) = HR1A_AO_P_CURRENT_R(NU,MU)
            TXXM(NU,MU) = HR1A_AO_M_CURRENT_L(NU,MU)

            DO A
               DO I

                  TXIP_T(NU,I) = TXXP(NU,MU) * CA(MU,I)
                  TXIM_T(NU,I) = TXXP(NU,MU) * CA(MU,I)

	          TXAP(MU,I)  += TXIP_T(NU,I)
                  TXAM(MU,I)  += TXIM_T(NU,I)

               ENDDO I

               TAIP_T(A,I) = TXAP(NU,I) * CA(NU,A)
               TAIM_T(A,I) = TXAM(NU,I) * CA(NU,A)

               TAIP_R(A,I)  += TAIP_T(A,I)
               TAIM_L(A,I)  += TAIM_T(A,I)

               ENDDO I
            ENDDO A

        PUT HR1A_MO_P_CURRENT_R(A,I) = TAIP_R(A,I)
        PUT HR1A_MO_M_CURRENT_L(A,I) = TAIM_L(A,I)

     ENDPARDO MU, NU

     PARDO MU, NU

            GET R1B_MO_P_CURRENT_R(NU,MU)
            GET R1B_MO_M_CURRENT_L(NU,MU)

            TXXP(NU,MU) = R1B_MO_P_CURRENT_R(NU,MU)
            TXXM(NU,MU) = R1B_MO_M_CURRENT_L(NU,MU)

            DO B
               DO J

                  TXJP_T(NU,J) = TXXP(NU,MU) * CB(MU,J)
                  TXJM_T(NU,J) = TXXP(NU,MU) * CB(MU,J)

                  TXJP(MU,J)  += TXJP_T(NU,J)
                  TXJM(MU,J)  += TXJM_T(NU,J)

               ENDDO J

               TBJP_T(B,J) = TXJP(NU,J) * CB(NU,B)
               TBJM_T(B,J) = TXJM(NU,J) * CB(NU,B)

               TBJP_R(B,J)  += TBJP_T(B,J)
               TBJM_L(B,J)  += TBJM_T(B,J`)

               ENDDO I
            ENDDO A

        PUT HR1B_MO_P_CURRENT_R(B,J) =  TBJP_R(B,J)
        PUT HR1B_MO_M_CURRENT_L(B,J) =  TBJM_L(B,J)

     ENDPARDO MU, NU

     execute sip_barrier 

     PROC DIRECT_AO_HC_MULT
#    ----------------------

     CALL FORM_AO_R1AB_OLD
     execute sip_barrier 

     CALL FORM_AO_APLUSB_AMINUSB
     execute server_barrier 
     
     CALL HC_CONTRACT
     execute server_barrier 

     CALL FORM_MO_R1AB_NEW
     execute sip_barrier 

     PROC DIRECT_AO_HC_MULT
#    ----------------------

